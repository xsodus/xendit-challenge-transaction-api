/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.BillingAgreementsRegistrationRequestMerchantInformationMerchantDescriptor;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsRegistrationRequestMerchantInformation
 */
@JsonPropertyOrder({
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_MERCHANT_DESCRIPTOR,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_CATEGORY_CODE,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_CANCEL_URL,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_SUCCESS_URL,
  BillingAgreementsRegistrationRequestMerchantInformation.JSON_PROPERTY_FAILURE_URL
})
@JsonTypeName("billingAgreementsRegistration_request_merchantInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsRegistrationRequestMerchantInformation {
  public static final String JSON_PROPERTY_MERCHANT_DESCRIPTOR = "merchantDescriptor";
  private BillingAgreementsRegistrationRequestMerchantInformationMerchantDescriptor merchantDescriptor;

  public static final String JSON_PROPERTY_CATEGORY_CODE = "categoryCode";
  private Integer categoryCode;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME = "transactionLocalDateTime";
  private String transactionLocalDateTime;

  public static final String JSON_PROPERTY_CANCEL_URL = "cancelUrl";
  private String cancelUrl;

  public static final String JSON_PROPERTY_SUCCESS_URL = "successUrl";
  private String successUrl;

  public static final String JSON_PROPERTY_FAILURE_URL = "failureUrl";
  private String failureUrl;

  public BillingAgreementsRegistrationRequestMerchantInformation() {
  }

  public BillingAgreementsRegistrationRequestMerchantInformation merchantDescriptor(BillingAgreementsRegistrationRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    
    this.merchantDescriptor = merchantDescriptor;
    return this;
  }

  /**
   * Get merchantDescriptor
   * @return merchantDescriptor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BillingAgreementsRegistrationRequestMerchantInformationMerchantDescriptor getMerchantDescriptor() {
    return merchantDescriptor;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantDescriptor(BillingAgreementsRegistrationRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    this.merchantDescriptor = merchantDescriptor;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation categoryCode(Integer categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * The value for this field is a four-digit number that the payment card industry uses to classify merchants into market segments. A payment card company assigned one or more of these values to your business when you started accepting the payment card company&#39;s cards. When you do not include this field in your request, CyberSource uses the value in your CyberSource account.  #### CyberSource through VisaNet The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR4 - Position: 150-153 - Field: Merchant Category Code 
   * maximum: 9999
   * @return categoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCategoryCode() {
    return categoryCode;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCode(Integer categoryCode) {
    this.categoryCode = categoryCode;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * The state where the merchant is located.  #### PIN debit State code or region code for your business. Use the Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) This value might be displayed on the cardholder&#39;s statement.  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters.  **Note** This field is supported only for businesses located in the U.S. or Canada.  Optional field for PIN debit credit or PIN debit purchase. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation transactionLocalDateTime(String transactionLocalDateTime) {
    
    this.transactionLocalDateTime = transactionLocalDateTime;
    return this;
  }

  /**
   * Date and time at your physical location.  Format: &#x60;YYYYMMDDhhmmss&#x60;, where:  - &#x60;YYYY&#x60; &#x3D; year  - &#x60;MM&#x60; &#x3D; month  - &#x60;DD&#x60; &#x3D; day  - &#x60;hh&#x60; &#x3D; hour  - &#x60;mm&#x60; &#x3D; minutes  - &#x60;ss&#x60; &#x3D; seconds  #### Used by **Authorization** Required for these processors: - American Express Direct                                                                                                                                                                                                                                                                                                                         - American Express Direct - Credit Mutuel-CIC - FDC Nashville Global - SIX  Optional for all other processors. 
   * @return transactionLocalDateTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionLocalDateTime() {
    return transactionLocalDateTime;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionLocalDateTime(String transactionLocalDateTime) {
    this.transactionLocalDateTime = transactionLocalDateTime;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation cancelUrl(String cancelUrl) {
    
    this.cancelUrl = cancelUrl;
    return this;
  }

  /**
   * URL to which the customer is directed if they fail to sign the mandate. #### SEPA Required for Create Mandate and Update Mandate #### BACS Required for Create Mandate 
   * @return cancelUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancelUrl() {
    return cancelUrl;
  }


  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelUrl(String cancelUrl) {
    this.cancelUrl = cancelUrl;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation successUrl(String successUrl) {
    
    this.successUrl = successUrl;
    return this;
  }

  /**
   * URL to which the customer is directed if they fail to sign the mandate. #### SEPA Required for Create Mandate and Update Mandate #### BACS Required for Create Mandate 
   * @return successUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuccessUrl() {
    return successUrl;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessUrl(String successUrl) {
    this.successUrl = successUrl;
  }

  public BillingAgreementsRegistrationRequestMerchantInformation failureUrl(String failureUrl) {
    
    this.failureUrl = failureUrl;
    return this;
  }

  /**
   * URL to which the customer is directed if they fail to sign the mandate. #### SEPA Required for Create Mandate and Update Mandate #### BACS Required for Create Mandate 
   * @return failureUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILURE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFailureUrl() {
    return failureUrl;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureUrl(String failureUrl) {
    this.failureUrl = failureUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsRegistrationRequestMerchantInformation billingAgreementsRegistrationRequestMerchantInformation = (BillingAgreementsRegistrationRequestMerchantInformation) o;
    return Objects.equals(this.merchantDescriptor, billingAgreementsRegistrationRequestMerchantInformation.merchantDescriptor) &&
        Objects.equals(this.categoryCode, billingAgreementsRegistrationRequestMerchantInformation.categoryCode) &&
        Objects.equals(this.administrativeArea, billingAgreementsRegistrationRequestMerchantInformation.administrativeArea) &&
        Objects.equals(this.transactionLocalDateTime, billingAgreementsRegistrationRequestMerchantInformation.transactionLocalDateTime) &&
        Objects.equals(this.cancelUrl, billingAgreementsRegistrationRequestMerchantInformation.cancelUrl) &&
        Objects.equals(this.successUrl, billingAgreementsRegistrationRequestMerchantInformation.successUrl) &&
        Objects.equals(this.failureUrl, billingAgreementsRegistrationRequestMerchantInformation.failureUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantDescriptor, categoryCode, administrativeArea, transactionLocalDateTime, cancelUrl, successUrl, failureUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsRegistrationRequestMerchantInformation {\n");
    sb.append("    merchantDescriptor: ").append(toIndentedString(merchantDescriptor)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    transactionLocalDateTime: ").append(toIndentedString(transactionLocalDateTime)).append("\n");
    sb.append("    cancelUrl: ").append(toIndentedString(cancelUrl)).append("\n");
    sb.append("    successUrl: ").append(toIndentedString(successUrl)).append("\n");
    sb.append("    failureUrl: ").append(toIndentedString(failureUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

