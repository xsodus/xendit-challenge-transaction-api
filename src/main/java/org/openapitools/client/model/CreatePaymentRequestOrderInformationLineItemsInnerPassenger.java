/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains travel-related passenger details used by DM service only.
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_TYPE,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_STATUS,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_PHONE,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_FIRST_NAME,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_LAST_NAME,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_ID,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_EMAIL,
  CreatePaymentRequestOrderInformationLineItemsInnerPassenger.JSON_PROPERTY_NATIONALITY
})
@JsonTypeName("createPayment_request_orderInformation_lineItems_inner_passenger")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformationLineItemsInnerPassenger {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private String nationality;

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger() {
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Passenger classification associated with the price of the ticket. You can use one of the following values: - &#x60;ADT&#x60;: Adult - &#x60;CNN&#x60;: Child - &#x60;INF&#x60;: Infant - &#x60;YTH&#x60;: Youth - &#x60;STU&#x60;: Student - &#x60;SCR&#x60;: Senior Citizen - &#x60;MIL&#x60;: Military 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger status(String status) {
    
    this.status = status;
    return this;
  }

  /**
   * Your company&#39;s passenger classification, such as with a frequent flyer program. In this case, you might use values such as &#x60;standard&#x60;, &#x60;gold&#x60;, or &#x60;platinum&#x60;. 
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger phone(String phone) {
    
    this.phone = phone;
    return this;
  }

  /**
   * Passenger&#39;s phone number. If the order is from outside the U.S., CyberSource recommends that you include the [ISO Standard Country Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf). 
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * Passenger&#39;s first name.
   * @return firstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Passenger&#39;s last name.
   * @return lastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * ID of the passenger to whom the ticket was issued. For example, you can use this field for the frequent flyer number. 
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger email(String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Passenger&#39;s email address, including the full domain name, such as jdoe@example.com.
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger nationality(String nationality) {
    
    this.nationality = nationality;
    return this;
  }

  /**
   * Passenger&#39;s nationality country. Use the two character [ISO Standard Country Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf).
   * @return nationality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformationLineItemsInnerPassenger createPaymentRequestOrderInformationLineItemsInnerPassenger = (CreatePaymentRequestOrderInformationLineItemsInnerPassenger) o;
    return Objects.equals(this.type, createPaymentRequestOrderInformationLineItemsInnerPassenger.type) &&
        Objects.equals(this.status, createPaymentRequestOrderInformationLineItemsInnerPassenger.status) &&
        Objects.equals(this.phone, createPaymentRequestOrderInformationLineItemsInnerPassenger.phone) &&
        Objects.equals(this.firstName, createPaymentRequestOrderInformationLineItemsInnerPassenger.firstName) &&
        Objects.equals(this.lastName, createPaymentRequestOrderInformationLineItemsInnerPassenger.lastName) &&
        Objects.equals(this.id, createPaymentRequestOrderInformationLineItemsInnerPassenger.id) &&
        Objects.equals(this.email, createPaymentRequestOrderInformationLineItemsInnerPassenger.email) &&
        Objects.equals(this.nationality, createPaymentRequestOrderInformationLineItemsInnerPassenger.nationality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, status, phone, firstName, lastName, id, email, nationality);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformationLineItemsInnerPassenger {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

