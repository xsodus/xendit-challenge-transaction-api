/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ActionDecisionManagerCaseRequestDecisionInformation;
import org.openapitools.client.model.ActionDecisionManagerCaseRequestProcessingInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ActionDecisionManagerCaseRequest
 */
@JsonPropertyOrder({
  ActionDecisionManagerCaseRequest.JSON_PROPERTY_DECISION_INFORMATION,
  ActionDecisionManagerCaseRequest.JSON_PROPERTY_PROCESSING_INFORMATION
})
@JsonTypeName("actionDecisionManagerCase_request")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ActionDecisionManagerCaseRequest {
  public static final String JSON_PROPERTY_DECISION_INFORMATION = "decisionInformation";
  private ActionDecisionManagerCaseRequestDecisionInformation decisionInformation;

  public static final String JSON_PROPERTY_PROCESSING_INFORMATION = "processingInformation";
  private ActionDecisionManagerCaseRequestProcessingInformation processingInformation;

  public ActionDecisionManagerCaseRequest() {
  }

  public ActionDecisionManagerCaseRequest decisionInformation(ActionDecisionManagerCaseRequestDecisionInformation decisionInformation) {
    
    this.decisionInformation = decisionInformation;
    return this;
  }

  /**
   * Get decisionInformation
   * @return decisionInformation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DECISION_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ActionDecisionManagerCaseRequestDecisionInformation getDecisionInformation() {
    return decisionInformation;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDecisionInformation(ActionDecisionManagerCaseRequestDecisionInformation decisionInformation) {
    this.decisionInformation = decisionInformation;
  }

  public ActionDecisionManagerCaseRequest processingInformation(ActionDecisionManagerCaseRequestProcessingInformation processingInformation) {
    
    this.processingInformation = processingInformation;
    return this;
  }

  /**
   * Get processingInformation
   * @return processingInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSING_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionDecisionManagerCaseRequestProcessingInformation getProcessingInformation() {
    return processingInformation;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSING_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessingInformation(ActionDecisionManagerCaseRequestProcessingInformation processingInformation) {
    this.processingInformation = processingInformation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionDecisionManagerCaseRequest actionDecisionManagerCaseRequest = (ActionDecisionManagerCaseRequest) o;
    return Objects.equals(this.decisionInformation, actionDecisionManagerCaseRequest.decisionInformation) &&
        Objects.equals(this.processingInformation, actionDecisionManagerCaseRequest.processingInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decisionInformation, processingInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionDecisionManagerCaseRequest {\n");
    sb.append("    decisionInformation: ").append(toIndentedString(decisionInformation)).append("\n");
    sb.append("    processingInformation: ").append(toIndentedString(processingInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

