/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSessionRequestRequestProcessingInformation
 */
@JsonPropertyOrder({
  CreateSessionRequestRequestProcessingInformation.JSON_PROPERTY_SESSION_TYPE,
  CreateSessionRequestRequestProcessingInformation.JSON_PROPERTY_PAYMENT_FLOW_MODE,
  CreateSessionRequestRequestProcessingInformation.JSON_PROPERTY_ACTION_LIST
})
@JsonTypeName("CreateSessionRequest_request_processingInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateSessionRequestRequestProcessingInformation {
  public static final String JSON_PROPERTY_SESSION_TYPE = "sessionType";
  private String sessionType;

  public static final String JSON_PROPERTY_PAYMENT_FLOW_MODE = "paymentFlowMode";
  private String paymentFlowMode;

  public static final String JSON_PROPERTY_ACTION_LIST = "actionList";
  private List<String> actionList = new ArrayList<>();

  public CreateSessionRequestRequestProcessingInformation() {
  }

  public CreateSessionRequestRequestProcessingInformation sessionType(String sessionType) {
    
    this.sessionType = sessionType;
    return this;
  }

  /**
   * Will have 2 values, &#39;U&#39; (Update) , &#39;N&#39; (New). Any other values will be rejected. Default will be &#39;N&#39; 
   * @return sessionType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionType() {
    return sessionType;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionType(String sessionType) {
    this.sessionType = sessionType;
  }

  public CreateSessionRequestRequestProcessingInformation paymentFlowMode(String paymentFlowMode) {
    
    this.paymentFlowMode = paymentFlowMode;
    return this;
  }

  /**
   * Whether merchant wants to pass the flow Inline or want to invoke Klarna Hosted Page 
   * @return paymentFlowMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_FLOW_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentFlowMode() {
    return paymentFlowMode;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_FLOW_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentFlowMode(String paymentFlowMode) {
    this.paymentFlowMode = paymentFlowMode;
  }

  public CreateSessionRequestRequestProcessingInformation actionList(List<String> actionList) {
    
    this.actionList = actionList;
    return this;
  }

  public CreateSessionRequestRequestProcessingInformation addActionListItem(String actionListItem) {
    if (this.actionList == null) {
      this.actionList = new ArrayList<>();
    }
    this.actionList.add(actionListItem);
    return this;
  }

  /**
   * Possible values are one or more of follows:   - &#x60;AP_SESSIONS&#x60;: Use this when Alternative Payment Sessions service is requested. 
   * @return actionList
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getActionList() {
    return actionList;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionList(List<String> actionList) {
    this.actionList = actionList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSessionRequestRequestProcessingInformation createSessionRequestRequestProcessingInformation = (CreateSessionRequestRequestProcessingInformation) o;
    return Objects.equals(this.sessionType, createSessionRequestRequestProcessingInformation.sessionType) &&
        Objects.equals(this.paymentFlowMode, createSessionRequestRequestProcessingInformation.paymentFlowMode) &&
        Objects.equals(this.actionList, createSessionRequestRequestProcessingInformation.actionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionType, paymentFlowMode, actionList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSessionRequestRequestProcessingInformation {\n");
    sb.append("    sessionType: ").append(toIndentedString(sessionType)).append("\n");
    sb.append("    paymentFlowMode: ").append(toIndentedString(paymentFlowMode)).append("\n");
    sb.append("    actionList: ").append(toIndentedString(actionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

