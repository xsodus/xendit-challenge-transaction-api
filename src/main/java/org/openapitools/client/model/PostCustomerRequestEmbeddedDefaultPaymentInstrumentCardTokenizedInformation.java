/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation
 */
@JsonPropertyOrder({
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation.JSON_PROPERTY_REQUESTOR_I_D,
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation.JSON_PROPERTY_TRANSACTION_TYPE
})
@JsonTypeName("postCustomer_request__embedded_defaultPaymentInstrument_card_tokenizedInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation {
  public static final String JSON_PROPERTY_REQUESTOR_I_D = "requestorID";
  private String requestorID;

  public static final String JSON_PROPERTY_TRANSACTION_TYPE = "transactionType";
  private String transactionType;

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation() {
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation requestorID(String requestorID) {
    
    this.requestorID = requestorID;
    return this;
  }

  /**
   * Value that identifies your business and indicates that the cardholder&#39;s account number is tokenized. This value is assigned by the token service provider and is unique within the token service provider&#39;s database.  **Note** This field is supported only through **VisaNet** and **FDC Nashville Global**. 
   * @return requestorID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestorID() {
    return requestorID;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestorID(String requestorID) {
    this.requestorID = requestorID;
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

  /**
   * Type of transaction that provided the token data. This value does not specify the token service provider; it specifies the entity that provided you with information about the token.  Set the value for this field to 1. An application on the customer&#39;s mobile device provided the token data. 
   * @return transactionType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionType() {
    return transactionType;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation postCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation = (PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) o;
    return Objects.equals(this.requestorID, postCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation.requestorID) &&
        Objects.equals(this.transactionType, postCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation.transactionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestorID, transactionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostCustomerRequestEmbeddedDefaultPaymentInstrumentCardTokenizedInformation {\n");
    sb.append("    requestorID: ").append(toIndentedString(requestorID)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

