/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PostBatchRequestIncluded;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostBatchRequest
 */
@JsonPropertyOrder({
  PostBatchRequest.JSON_PROPERTY_TYPE,
  PostBatchRequest.JSON_PROPERTY_INCLUDED,
  PostBatchRequest.JSON_PROPERTY_MERCHANT_REFERENCE,
  PostBatchRequest.JSON_PROPERTY_NOTIFICATION_EMAIL
})
@JsonTypeName("postBatch_request")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostBatchRequest {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "oneOff";

  public static final String JSON_PROPERTY_INCLUDED = "included";
  private PostBatchRequestIncluded included;

  public static final String JSON_PROPERTY_MERCHANT_REFERENCE = "merchantReference";
  private String merchantReference;

  public static final String JSON_PROPERTY_NOTIFICATION_EMAIL = "notificationEmail";
  private String notificationEmail;

  public PostBatchRequest() {
  }

  public PostBatchRequest type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Valid Values:   * oneOff   * amexRegistration 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public PostBatchRequest included(PostBatchRequestIncluded included) {
    
    this.included = included;
    return this;
  }

  /**
   * Get included
   * @return included
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCLUDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PostBatchRequestIncluded getIncluded() {
    return included;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncluded(PostBatchRequestIncluded included) {
    this.included = included;
  }

  public PostBatchRequest merchantReference(String merchantReference) {
    
    this.merchantReference = merchantReference;
    return this;
  }

  /**
   * Reference used by merchant to identify batch.
   * @return merchantReference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantReference() {
    return merchantReference;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantReference(String merchantReference) {
    this.merchantReference = merchantReference;
  }

  public PostBatchRequest notificationEmail(String notificationEmail) {
    
    this.notificationEmail = notificationEmail;
    return this;
  }

  /**
   * Email used to notify the batch status.
   * @return notificationEmail
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNotificationEmail() {
    return notificationEmail;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotificationEmail(String notificationEmail) {
    this.notificationEmail = notificationEmail;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostBatchRequest postBatchRequest = (PostBatchRequest) o;
    return Objects.equals(this.type, postBatchRequest.type) &&
        Objects.equals(this.included, postBatchRequest.included) &&
        Objects.equals(this.merchantReference, postBatchRequest.merchantReference) &&
        Objects.equals(this.notificationEmail, postBatchRequest.notificationEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, included, merchantReference, notificationEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostBatchRequest {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    included: ").append(toIndentedString(included)).append("\n");
    sb.append("    merchantReference: ").append(toIndentedString(merchantReference)).append("\n");
    sb.append("    notificationEmail: ").append(toIndentedString(notificationEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

