/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CapturePaymentRequestPointOfSaleInformationEmv;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CapturePaymentRequestPointOfSaleInformation
 */
@JsonPropertyOrder({
  CapturePaymentRequestPointOfSaleInformation.JSON_PROPERTY_EMV,
  CapturePaymentRequestPointOfSaleInformation.JSON_PROPERTY_AMEX_CAPN_DATA
})
@JsonTypeName("capturePayment_request_pointOfSaleInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CapturePaymentRequestPointOfSaleInformation {
  public static final String JSON_PROPERTY_EMV = "emv";
  private CapturePaymentRequestPointOfSaleInformationEmv emv;

  public static final String JSON_PROPERTY_AMEX_CAPN_DATA = "amexCapnData";
  private String amexCapnData;

  public CapturePaymentRequestPointOfSaleInformation() {
  }

  public CapturePaymentRequestPointOfSaleInformation emv(CapturePaymentRequestPointOfSaleInformationEmv emv) {
    
    this.emv = emv;
    return this;
  }

  /**
   * Get emv
   * @return emv
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CapturePaymentRequestPointOfSaleInformationEmv getEmv() {
    return emv;
  }


  @JsonProperty(JSON_PROPERTY_EMV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmv(CapturePaymentRequestPointOfSaleInformationEmv emv) {
    this.emv = emv;
  }

  public CapturePaymentRequestPointOfSaleInformation amexCapnData(String amexCapnData) {
    
    this.amexCapnData = amexCapnData;
    return this;
  }

  /**
   * Point-of-sale details for the transaction. This value is returned only for **American Express Direct**. CyberSource generates this value, which consists of a series of codes that identify terminal capability, security data, and specific conditions present at the time the transaction occurred. To comply with the CAPN requirements, this value must be included in all subsequent follow-on requests, such as captures and follow-on credits.  When you perform authorizations, captures, and credits through CyberSource, CyberSource passes this value from the authorization service to the subsequent services for you. However, when you perform authorizations through CyberSource and perform subsequent services through other financial institutions, you must ensure that your requests for captures and credits include this value. 
   * @return amexCapnData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMEX_CAPN_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmexCapnData() {
    return amexCapnData;
  }


  @JsonProperty(JSON_PROPERTY_AMEX_CAPN_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmexCapnData(String amexCapnData) {
    this.amexCapnData = amexCapnData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CapturePaymentRequestPointOfSaleInformation capturePaymentRequestPointOfSaleInformation = (CapturePaymentRequestPointOfSaleInformation) o;
    return Objects.equals(this.emv, capturePaymentRequestPointOfSaleInformation.emv) &&
        Objects.equals(this.amexCapnData, capturePaymentRequestPointOfSaleInformation.amexCapnData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emv, amexCapnData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CapturePaymentRequestPointOfSaleInformation {\n");
    sb.append("    emv: ").append(toIndentedString(emv)).append("\n");
    sb.append("    amexCapnData: ").append(toIndentedString(amexCapnData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

