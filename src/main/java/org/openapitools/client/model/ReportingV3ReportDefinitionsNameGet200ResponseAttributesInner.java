/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner
 */
@JsonPropertyOrder({
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_ID,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_NAME,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_DESCRIPTION,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_FILTER_TYPE,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_DEFAULT,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_REQUIRED,
  ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner.JSON_PROPERTY_SUPPORTED_TYPE
})
@JsonTypeName("reportingV3ReportDefinitionsNameGet200Response_attributes_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_FILTER_TYPE = "filterType";
  private String filterType;

  public static final String JSON_PROPERTY_DEFAULT = "default";
  private Boolean _default;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  private Boolean required;

  public static final String JSON_PROPERTY_SUPPORTED_TYPE = "supportedType";
  private String supportedType;

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner() {
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner filterType(String filterType) {
    
    this.filterType = filterType;
    return this;
  }

  /**
   * Attribute Filter Type.
   * @return filterType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilterType() {
    return filterType;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterType(String filterType) {
    this.filterType = filterType;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner _default(Boolean _default) {
    
    this._default = _default;
    return this;
  }

  /**
   * Get _default
   * @return _default
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefault() {
    return _default;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner required(Boolean required) {
    
    this.required = required;
    return this;
  }

  /**
   * Get required
   * @return required
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequired(Boolean required) {
    this.required = required;
  }

  public ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner supportedType(String supportedType) {
    
    this.supportedType = supportedType;
    return this;
  }

  /**
   * Valid values for the filter.
   * @return supportedType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupportedType() {
    return supportedType;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedType(String supportedType) {
    this.supportedType = supportedType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner reportingV3ReportDefinitionsNameGet200ResponseAttributesInner = (ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner) o;
    return Objects.equals(this.id, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.id) &&
        Objects.equals(this.name, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.name) &&
        Objects.equals(this.description, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.description) &&
        Objects.equals(this.filterType, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.filterType) &&
        Objects.equals(this._default, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner._default) &&
        Objects.equals(this.required, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.required) &&
        Objects.equals(this.supportedType, reportingV3ReportDefinitionsNameGet200ResponseAttributesInner.supportedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, filterType, _default, required, supportedType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportingV3ReportDefinitionsNameGet200ResponseAttributesInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    supportedType: ").append(toIndentedString(supportedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

