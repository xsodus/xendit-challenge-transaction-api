/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard
 */
@JsonPropertyOrder({
  CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.JSON_PROPERTY_MERCHANT_ID,
  CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.JSON_PROPERTY_INTERBANK_CARD_ASSOCIATION_NUMBER,
  CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.JSON_PROPERTY_ACTIVE
})
@JsonTypeName("commerceSolutionsProducts_accountUpdater_configurationInformation_configurations_masterCard")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard {
  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  private String merchantId;

  public static final String JSON_PROPERTY_INTERBANK_CARD_ASSOCIATION_NUMBER = "interbankCardAssociationNumber";
  private String interbankCardAssociationNumber;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard() {
  }

  public CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * MasterCard merchant identified number
   * @return merchantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard interbankCardAssociationNumber(String interbankCardAssociationNumber) {
    
    this.interbankCardAssociationNumber = interbankCardAssociationNumber;
    return this;
  }

  /**
   * Number assigned by MasterCard to a financial institution, third-party processor or other member to identify the member in transaction.
   * @return interbankCardAssociationNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INTERBANK_CARD_ASSOCIATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInterbankCardAssociationNumber() {
    return interbankCardAssociationNumber;
  }


  @JsonProperty(JSON_PROPERTY_INTERBANK_CARD_ASSOCIATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInterbankCardAssociationNumber(String interbankCardAssociationNumber) {
    this.interbankCardAssociationNumber = interbankCardAssociationNumber;
  }

  public CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard active(Boolean active) {
    
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard commerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard = (CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard) o;
    return Objects.equals(this.merchantId, commerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.merchantId) &&
        Objects.equals(this.interbankCardAssociationNumber, commerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.interbankCardAssociationNumber) &&
        Objects.equals(this.active, commerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard.active);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, interbankCardAssociationNumber, active);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceSolutionsProductsAccountUpdaterConfigurationInformationConfigurationsMasterCard {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    interbankCardAssociationNumber: ").append(toIndentedString(interbankCardAssociationNumber)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

