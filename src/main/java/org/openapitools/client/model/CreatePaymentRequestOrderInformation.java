/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationAmountDetails;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationBillTo;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationInvoiceDetails;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationLineItemsInner;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationShipTo;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationShippingDetails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestOrderInformation
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_AMOUNT_DETAILS,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_BILL_TO,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_SHIP_TO,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_LINE_ITEMS,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_INVOICE_DETAILS,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_SHIPPING_DETAILS,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_RETURNS_ACCEPTED,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_CUTOFF_DATE_TIME,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_PRE_ORDER,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_PRE_ORDER_DATE,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_REORDERED,
  CreatePaymentRequestOrderInformation.JSON_PROPERTY_TOTAL_OFFERS_COUNT
})
@JsonTypeName("createPayment_request_orderInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformation {
  public static final String JSON_PROPERTY_AMOUNT_DETAILS = "amountDetails";
  private CreatePaymentRequestOrderInformationAmountDetails amountDetails;

  public static final String JSON_PROPERTY_BILL_TO = "billTo";
  private CreatePaymentRequestOrderInformationBillTo billTo;

  public static final String JSON_PROPERTY_SHIP_TO = "shipTo";
  private CreatePaymentRequestOrderInformationShipTo shipTo;

  public static final String JSON_PROPERTY_LINE_ITEMS = "lineItems";
  private List<CreatePaymentRequestOrderInformationLineItemsInner> lineItems = new ArrayList<>();

  public static final String JSON_PROPERTY_INVOICE_DETAILS = "invoiceDetails";
  private CreatePaymentRequestOrderInformationInvoiceDetails invoiceDetails;

  public static final String JSON_PROPERTY_SHIPPING_DETAILS = "shippingDetails";
  private CreatePaymentRequestOrderInformationShippingDetails shippingDetails;

  public static final String JSON_PROPERTY_RETURNS_ACCEPTED = "returnsAccepted";
  private Boolean returnsAccepted;

  public static final String JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE = "isCryptocurrencyPurchase";
  private String isCryptocurrencyPurchase;

  public static final String JSON_PROPERTY_CUTOFF_DATE_TIME = "cutoffDateTime";
  private String cutoffDateTime;

  public static final String JSON_PROPERTY_PRE_ORDER = "preOrder";
  private String preOrder;

  public static final String JSON_PROPERTY_PRE_ORDER_DATE = "preOrderDate";
  private String preOrderDate;

  public static final String JSON_PROPERTY_REORDERED = "reordered";
  private Boolean reordered;

  public static final String JSON_PROPERTY_TOTAL_OFFERS_COUNT = "totalOffersCount";
  private String totalOffersCount;

  public CreatePaymentRequestOrderInformation() {
  }

  public CreatePaymentRequestOrderInformation amountDetails(CreatePaymentRequestOrderInformationAmountDetails amountDetails) {
    
    this.amountDetails = amountDetails;
    return this;
  }

  /**
   * Get amountDetails
   * @return amountDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationAmountDetails getAmountDetails() {
    return amountDetails;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountDetails(CreatePaymentRequestOrderInformationAmountDetails amountDetails) {
    this.amountDetails = amountDetails;
  }

  public CreatePaymentRequestOrderInformation billTo(CreatePaymentRequestOrderInformationBillTo billTo) {
    
    this.billTo = billTo;
    return this;
  }

  /**
   * Get billTo
   * @return billTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationBillTo getBillTo() {
    return billTo;
  }


  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillTo(CreatePaymentRequestOrderInformationBillTo billTo) {
    this.billTo = billTo;
  }

  public CreatePaymentRequestOrderInformation shipTo(CreatePaymentRequestOrderInformationShipTo shipTo) {
    
    this.shipTo = shipTo;
    return this;
  }

  /**
   * Get shipTo
   * @return shipTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationShipTo getShipTo() {
    return shipTo;
  }


  @JsonProperty(JSON_PROPERTY_SHIP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipTo(CreatePaymentRequestOrderInformationShipTo shipTo) {
    this.shipTo = shipTo;
  }

  public CreatePaymentRequestOrderInformation lineItems(List<CreatePaymentRequestOrderInformationLineItemsInner> lineItems) {
    
    this.lineItems = lineItems;
    return this;
  }

  public CreatePaymentRequestOrderInformation addLineItemsItem(CreatePaymentRequestOrderInformationLineItemsInner lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * Get lineItems
   * @return lineItems
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreatePaymentRequestOrderInformationLineItemsInner> getLineItems() {
    return lineItems;
  }


  @JsonProperty(JSON_PROPERTY_LINE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineItems(List<CreatePaymentRequestOrderInformationLineItemsInner> lineItems) {
    this.lineItems = lineItems;
  }

  public CreatePaymentRequestOrderInformation invoiceDetails(CreatePaymentRequestOrderInformationInvoiceDetails invoiceDetails) {
    
    this.invoiceDetails = invoiceDetails;
    return this;
  }

  /**
   * Get invoiceDetails
   * @return invoiceDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationInvoiceDetails getInvoiceDetails() {
    return invoiceDetails;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceDetails(CreatePaymentRequestOrderInformationInvoiceDetails invoiceDetails) {
    this.invoiceDetails = invoiceDetails;
  }

  public CreatePaymentRequestOrderInformation shippingDetails(CreatePaymentRequestOrderInformationShippingDetails shippingDetails) {
    
    this.shippingDetails = shippingDetails;
    return this;
  }

  /**
   * Get shippingDetails
   * @return shippingDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationShippingDetails getShippingDetails() {
    return shippingDetails;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingDetails(CreatePaymentRequestOrderInformationShippingDetails shippingDetails) {
    this.shippingDetails = shippingDetails;
  }

  public CreatePaymentRequestOrderInformation returnsAccepted(Boolean returnsAccepted) {
    
    this.returnsAccepted = returnsAccepted;
    return this;
  }

  /**
   * This is only needed when you are requesting both payment and DM service at same time.  Boolean that indicates whether returns are accepted for this order. This field can contain one of the following values: - true: Returns are accepted for this order. - false: Returns are not accepted for this order. 
   * @return returnsAccepted
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURNS_ACCEPTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReturnsAccepted() {
    return returnsAccepted;
  }


  @JsonProperty(JSON_PROPERTY_RETURNS_ACCEPTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnsAccepted(Boolean returnsAccepted) {
    this.returnsAccepted = returnsAccepted;
  }

  public CreatePaymentRequestOrderInformation isCryptocurrencyPurchase(String isCryptocurrencyPurchase) {
    
    this.isCryptocurrencyPurchase = isCryptocurrencyPurchase;
    return this;
  }

  /**
   * #### Visa Platform Connect : This API will contain the Flag that specifies whether the payment is for the purchase of cryptocurrency. Additional values to add : This API will contain the Flag that specifies whether the payment is for the purchase of cryptocurrency. valid values are - Y/y, true - N/n, false 
   * @return isCryptocurrencyPurchase
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsCryptocurrencyPurchase() {
    return isCryptocurrencyPurchase;
  }


  @JsonProperty(JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCryptocurrencyPurchase(String isCryptocurrencyPurchase) {
    this.isCryptocurrencyPurchase = isCryptocurrencyPurchase;
  }

  public CreatePaymentRequestOrderInformation cutoffDateTime(String cutoffDateTime) {
    
    this.cutoffDateTime = cutoffDateTime;
    return this;
  }

  /**
   * Starting date and time for an event or a journey that is independent of which transportation mechanism, in UTC. The cutoffDateTime will supersede travelInformation.transit.airline.legs[].departureDate and travelInformation.transit.airline.legs[].departureTime if these fields are supplied in the request. Format: YYYY-MM-DDThh:mm:ssZ. Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @return cutoffDateTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUTOFF_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCutoffDateTime() {
    return cutoffDateTime;
  }


  @JsonProperty(JSON_PROPERTY_CUTOFF_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCutoffDateTime(String cutoffDateTime) {
    this.cutoffDateTime = cutoffDateTime;
  }

  public CreatePaymentRequestOrderInformation preOrder(String preOrder) {
    
    this.preOrder = preOrder;
    return this;
  }

  /**
   * Indicates whether cardholder is placing an order with a future availability or release date. This field can contain one of these values: - MERCHANDISE_AVAILABLE: Merchandise available - FUTURE_AVAILABILITY: Future availability 
   * @return preOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreOrder() {
    return preOrder;
  }


  @JsonProperty(JSON_PROPERTY_PRE_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreOrder(String preOrder) {
    this.preOrder = preOrder;
  }

  public CreatePaymentRequestOrderInformation preOrderDate(String preOrderDate) {
    
    this.preOrderDate = preOrderDate;
    return this;
  }

  /**
   * Expected date that a pre-ordered purchase will be available. Format: YYYYMMDD 
   * @return preOrderDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreOrderDate() {
    return preOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_PRE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreOrderDate(String preOrderDate) {
    this.preOrderDate = preOrderDate;
  }

  public CreatePaymentRequestOrderInformation reordered(Boolean reordered) {
    
    this.reordered = reordered;
    return this;
  }

  /**
   * Indicates whether the cardholder is reordering previously purchased merchandise. This field can contain one of these values: - false: First time ordered - true: Reordered 
   * @return reordered
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REORDERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReordered() {
    return reordered;
  }


  @JsonProperty(JSON_PROPERTY_REORDERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReordered(Boolean reordered) {
    this.reordered = reordered;
  }

  public CreatePaymentRequestOrderInformation totalOffersCount(String totalOffersCount) {
    
    this.totalOffersCount = totalOffersCount;
    return this;
  }

  /**
   * Total number of articles/items in the order as a numeric decimal count. Possible values: 00 - 99 
   * @return totalOffersCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_OFFERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalOffersCount() {
    return totalOffersCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_OFFERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalOffersCount(String totalOffersCount) {
    this.totalOffersCount = totalOffersCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformation createPaymentRequestOrderInformation = (CreatePaymentRequestOrderInformation) o;
    return Objects.equals(this.amountDetails, createPaymentRequestOrderInformation.amountDetails) &&
        Objects.equals(this.billTo, createPaymentRequestOrderInformation.billTo) &&
        Objects.equals(this.shipTo, createPaymentRequestOrderInformation.shipTo) &&
        Objects.equals(this.lineItems, createPaymentRequestOrderInformation.lineItems) &&
        Objects.equals(this.invoiceDetails, createPaymentRequestOrderInformation.invoiceDetails) &&
        Objects.equals(this.shippingDetails, createPaymentRequestOrderInformation.shippingDetails) &&
        Objects.equals(this.returnsAccepted, createPaymentRequestOrderInformation.returnsAccepted) &&
        Objects.equals(this.isCryptocurrencyPurchase, createPaymentRequestOrderInformation.isCryptocurrencyPurchase) &&
        Objects.equals(this.cutoffDateTime, createPaymentRequestOrderInformation.cutoffDateTime) &&
        Objects.equals(this.preOrder, createPaymentRequestOrderInformation.preOrder) &&
        Objects.equals(this.preOrderDate, createPaymentRequestOrderInformation.preOrderDate) &&
        Objects.equals(this.reordered, createPaymentRequestOrderInformation.reordered) &&
        Objects.equals(this.totalOffersCount, createPaymentRequestOrderInformation.totalOffersCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountDetails, billTo, shipTo, lineItems, invoiceDetails, shippingDetails, returnsAccepted, isCryptocurrencyPurchase, cutoffDateTime, preOrder, preOrderDate, reordered, totalOffersCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformation {\n");
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("    billTo: ").append(toIndentedString(billTo)).append("\n");
    sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    invoiceDetails: ").append(toIndentedString(invoiceDetails)).append("\n");
    sb.append("    shippingDetails: ").append(toIndentedString(shippingDetails)).append("\n");
    sb.append("    returnsAccepted: ").append(toIndentedString(returnsAccepted)).append("\n");
    sb.append("    isCryptocurrencyPurchase: ").append(toIndentedString(isCryptocurrencyPurchase)).append("\n");
    sb.append("    cutoffDateTime: ").append(toIndentedString(cutoffDateTime)).append("\n");
    sb.append("    preOrder: ").append(toIndentedString(preOrder)).append("\n");
    sb.append("    preOrderDate: ").append(toIndentedString(preOrderDate)).append("\n");
    sb.append("    reordered: ").append(toIndentedString(reordered)).append("\n");
    sb.append("    totalOffersCount: ").append(toIndentedString(totalOffersCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

