/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CardProcessingConfigFeaturesCardPresentProcessorsValue
 */
@JsonPropertyOrder({
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_DEFAULT_POINT_OF_SALE_TERMINAL_ID,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_POINT_OF_SALE_TERMINAL_IDS,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_DISABLE_POINT_OF_SALE_TERMINAL_ID_VALIDATION,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_PIN_DEBIT_NETWORK_ORDER,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_PIN_DEBIT_REIMBURSEMENT_CODE,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_FINANCIAL_INSTITUTION_ID,
  CardProcessingConfigFeaturesCardPresentProcessorsValue.JSON_PROPERTY_ENABLE_PIN_TRANSLATION
})
@JsonTypeName("CardProcessingConfig_features_cardPresent_processors_value")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CardProcessingConfigFeaturesCardPresentProcessorsValue {
  public static final String JSON_PROPERTY_DEFAULT_POINT_OF_SALE_TERMINAL_ID = "defaultPointOfSaleTerminalId";
  private String defaultPointOfSaleTerminalId;

  public static final String JSON_PROPERTY_POINT_OF_SALE_TERMINAL_IDS = "pointOfSaleTerminalIds";
  private List<String> pointOfSaleTerminalIds = new ArrayList<>();

  public static final String JSON_PROPERTY_DISABLE_POINT_OF_SALE_TERMINAL_ID_VALIDATION = "disablePointOfSaleTerminalIdValidation";
  private Boolean disablePointOfSaleTerminalIdValidation;

  public static final String JSON_PROPERTY_PIN_DEBIT_NETWORK_ORDER = "pinDebitNetworkOrder";
  private String pinDebitNetworkOrder;

  public static final String JSON_PROPERTY_PIN_DEBIT_REIMBURSEMENT_CODE = "pinDebitReimbursementCode";
  private String pinDebitReimbursementCode;

  public static final String JSON_PROPERTY_FINANCIAL_INSTITUTION_ID = "financialInstitutionId";
  private String financialInstitutionId;

  public static final String JSON_PROPERTY_ENABLE_PIN_TRANSLATION = "enablePinTranslation";
  private Boolean enablePinTranslation;

  public CardProcessingConfigFeaturesCardPresentProcessorsValue() {
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue defaultPointOfSaleTerminalId(String defaultPointOfSaleTerminalId) {
    
    this.defaultPointOfSaleTerminalId = defaultPointOfSaleTerminalId;
    return this;
  }

  /**
   * Default Terminal ID used for Card Present and Virtual Terminal transactions. Applicable for VPC, GPX (gpx), American Express Direct (amexdirect) and Chase Paymentech Salem (chasepaymentechsalem) processors.  Validation details (for selected processors)...  &lt;table&gt; &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Processor&lt;/th&gt;&lt;th&gt;Acceptance Type&lt;/th&gt;&lt;th&gt;Required&lt;/th&gt;&lt;th&gt;Min. Length&lt;/th&gt;&lt;th&gt;Max. Length&lt;/th&gt;&lt;th&gt;Regex&lt;/th&gt;&lt;th&gt;Default Value&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tr&gt;&lt;td&gt;American Express Direct&lt;/td&gt;&lt;td&gt;cp&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;^[0-9a-zA-Z]+$&lt;/td&gt;&lt;td&gt;1111&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; 
   * @return defaultPointOfSaleTerminalId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_POINT_OF_SALE_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultPointOfSaleTerminalId() {
    return defaultPointOfSaleTerminalId;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_POINT_OF_SALE_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultPointOfSaleTerminalId(String defaultPointOfSaleTerminalId) {
    this.defaultPointOfSaleTerminalId = defaultPointOfSaleTerminalId;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue pointOfSaleTerminalIds(List<String> pointOfSaleTerminalIds) {
    
    this.pointOfSaleTerminalIds = pointOfSaleTerminalIds;
    return this;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue addPointOfSaleTerminalIdsItem(String pointOfSaleTerminalIdsItem) {
    if (this.pointOfSaleTerminalIds == null) {
      this.pointOfSaleTerminalIds = new ArrayList<>();
    }
    this.pointOfSaleTerminalIds.add(pointOfSaleTerminalIdsItem);
    return this;
  }

  /**
   * For retail transactions, if merchant chooses to send the terminal id in the API, then that value has to be validated before being used. Holds a comma separated list of all possible terminal ids that the merchant is likely to send. Applicable for VPC processors.
   * @return pointOfSaleTerminalIds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POINT_OF_SALE_TERMINAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getPointOfSaleTerminalIds() {
    return pointOfSaleTerminalIds;
  }


  @JsonProperty(JSON_PROPERTY_POINT_OF_SALE_TERMINAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPointOfSaleTerminalIds(List<String> pointOfSaleTerminalIds) {
    this.pointOfSaleTerminalIds = pointOfSaleTerminalIds;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue disablePointOfSaleTerminalIdValidation(Boolean disablePointOfSaleTerminalIdValidation) {
    
    this.disablePointOfSaleTerminalIdValidation = disablePointOfSaleTerminalIdValidation;
    return this;
  }

  /**
   * Disables terminal ID validation. Applicable for VPC processors.
   * @return disablePointOfSaleTerminalIdValidation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_POINT_OF_SALE_TERMINAL_ID_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisablePointOfSaleTerminalIdValidation() {
    return disablePointOfSaleTerminalIdValidation;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_POINT_OF_SALE_TERMINAL_ID_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisablePointOfSaleTerminalIdValidation(Boolean disablePointOfSaleTerminalIdValidation) {
    this.disablePointOfSaleTerminalIdValidation = disablePointOfSaleTerminalIdValidation;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue pinDebitNetworkOrder(String pinDebitNetworkOrder) {
    
    this.pinDebitNetworkOrder = pinDebitNetworkOrder;
    return this;
  }

  /**
   * Order of the networks in which Visa should make routing decisions. Applicable for GPX (gpx) and VPC processors.
   * @return pinDebitNetworkOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PIN_DEBIT_NETWORK_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPinDebitNetworkOrder() {
    return pinDebitNetworkOrder;
  }


  @JsonProperty(JSON_PROPERTY_PIN_DEBIT_NETWORK_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPinDebitNetworkOrder(String pinDebitNetworkOrder) {
    this.pinDebitNetworkOrder = pinDebitNetworkOrder;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue pinDebitReimbursementCode(String pinDebitReimbursementCode) {
    
    this.pinDebitReimbursementCode = pinDebitReimbursementCode;
    return this;
  }

  /**
   * This attribute requests VIP to qualify a given PIN Debit transaction for a certain type of interchange program. Y &#x3D; SMS supermarket, Z &#x3D; SMS general merchant. Applicable for GPX (gpx) and VPC processors.
   * @return pinDebitReimbursementCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PIN_DEBIT_REIMBURSEMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPinDebitReimbursementCode() {
    return pinDebitReimbursementCode;
  }


  @JsonProperty(JSON_PROPERTY_PIN_DEBIT_REIMBURSEMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPinDebitReimbursementCode(String pinDebitReimbursementCode) {
    this.pinDebitReimbursementCode = pinDebitReimbursementCode;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue financialInstitutionId(String financialInstitutionId) {
    
    this.financialInstitutionId = financialInstitutionId;
    return this;
  }

  /**
   * Acquirer Institution ID for the PIN Debit Transactions. Applicable for GPX (gpx) and VPC processors.
   * @return financialInstitutionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFinancialInstitutionId() {
    return financialInstitutionId;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialInstitutionId(String financialInstitutionId) {
    this.financialInstitutionId = financialInstitutionId;
  }

  public CardProcessingConfigFeaturesCardPresentProcessorsValue enablePinTranslation(Boolean enablePinTranslation) {
    
    this.enablePinTranslation = enablePinTranslation;
    return this;
  }

  /**
   * Enables CyberSource PIN Translation for Online PIN Transactions. Please ensure you have exchanged PIN keys with CyberSource to use this feature. Applicable for VPC processors.
   * @return enablePinTranslation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_PIN_TRANSLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnablePinTranslation() {
    return enablePinTranslation;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PIN_TRANSLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePinTranslation(Boolean enablePinTranslation) {
    this.enablePinTranslation = enablePinTranslation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardProcessingConfigFeaturesCardPresentProcessorsValue cardProcessingConfigFeaturesCardPresentProcessorsValue = (CardProcessingConfigFeaturesCardPresentProcessorsValue) o;
    return Objects.equals(this.defaultPointOfSaleTerminalId, cardProcessingConfigFeaturesCardPresentProcessorsValue.defaultPointOfSaleTerminalId) &&
        Objects.equals(this.pointOfSaleTerminalIds, cardProcessingConfigFeaturesCardPresentProcessorsValue.pointOfSaleTerminalIds) &&
        Objects.equals(this.disablePointOfSaleTerminalIdValidation, cardProcessingConfigFeaturesCardPresentProcessorsValue.disablePointOfSaleTerminalIdValidation) &&
        Objects.equals(this.pinDebitNetworkOrder, cardProcessingConfigFeaturesCardPresentProcessorsValue.pinDebitNetworkOrder) &&
        Objects.equals(this.pinDebitReimbursementCode, cardProcessingConfigFeaturesCardPresentProcessorsValue.pinDebitReimbursementCode) &&
        Objects.equals(this.financialInstitutionId, cardProcessingConfigFeaturesCardPresentProcessorsValue.financialInstitutionId) &&
        Objects.equals(this.enablePinTranslation, cardProcessingConfigFeaturesCardPresentProcessorsValue.enablePinTranslation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultPointOfSaleTerminalId, pointOfSaleTerminalIds, disablePointOfSaleTerminalIdValidation, pinDebitNetworkOrder, pinDebitReimbursementCode, financialInstitutionId, enablePinTranslation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardProcessingConfigFeaturesCardPresentProcessorsValue {\n");
    sb.append("    defaultPointOfSaleTerminalId: ").append(toIndentedString(defaultPointOfSaleTerminalId)).append("\n");
    sb.append("    pointOfSaleTerminalIds: ").append(toIndentedString(pointOfSaleTerminalIds)).append("\n");
    sb.append("    disablePointOfSaleTerminalIdValidation: ").append(toIndentedString(disablePointOfSaleTerminalIdValidation)).append("\n");
    sb.append("    pinDebitNetworkOrder: ").append(toIndentedString(pinDebitNetworkOrder)).append("\n");
    sb.append("    pinDebitReimbursementCode: ").append(toIndentedString(pinDebitReimbursementCode)).append("\n");
    sb.append("    financialInstitutionId: ").append(toIndentedString(financialInstitutionId)).append("\n");
    sb.append("    enablePinTranslation: ").append(toIndentedString(enablePinTranslation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

