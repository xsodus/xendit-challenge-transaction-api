/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestMerchantInformationMerchantDescriptor;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefundPaymentRequestMerchantInformation
 */
@JsonPropertyOrder({
  RefundPaymentRequestMerchantInformation.JSON_PROPERTY_MERCHANT_DESCRIPTOR,
  RefundPaymentRequestMerchantInformation.JSON_PROPERTY_CATEGORY_CODE,
  RefundPaymentRequestMerchantInformation.JSON_PROPERTY_VAT_REGISTRATION_NUMBER,
  RefundPaymentRequestMerchantInformation.JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER,
  RefundPaymentRequestMerchantInformation.JSON_PROPERTY_TAX_ID
})
@JsonTypeName("refundPayment_request_merchantInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class RefundPaymentRequestMerchantInformation {
  public static final String JSON_PROPERTY_MERCHANT_DESCRIPTOR = "merchantDescriptor";
  private CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor;

  public static final String JSON_PROPERTY_CATEGORY_CODE = "categoryCode";
  private Integer categoryCode;

  public static final String JSON_PROPERTY_VAT_REGISTRATION_NUMBER = "vatRegistrationNumber";
  private String vatRegistrationNumber;

  public static final String JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER = "cardAcceptorReferenceNumber";
  private String cardAcceptorReferenceNumber;

  public static final String JSON_PROPERTY_TAX_ID = "taxId";
  private String taxId;

  public RefundPaymentRequestMerchantInformation() {
  }

  public RefundPaymentRequestMerchantInformation merchantDescriptor(CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    
    this.merchantDescriptor = merchantDescriptor;
    return this;
  }

  /**
   * Get merchantDescriptor
   * @return merchantDescriptor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestMerchantInformationMerchantDescriptor getMerchantDescriptor() {
    return merchantDescriptor;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantDescriptor(CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    this.merchantDescriptor = merchantDescriptor;
  }

  public RefundPaymentRequestMerchantInformation categoryCode(Integer categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * The value for this field is a four-digit number that the payment card industry uses to classify merchants into market segments. A payment card company assigned one or more of these values to your business when you started accepting the payment card company&#39;s cards. When you do not include this field in your request, CyberSource uses the value in your CyberSource account.  #### CyberSource through VisaNet The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR4 - Position: 150-153 - Field: Merchant Category Code 
   * maximum: 9999
   * @return categoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCategoryCode() {
    return categoryCode;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCode(Integer categoryCode) {
    this.categoryCode = categoryCode;
  }

  public RefundPaymentRequestMerchantInformation vatRegistrationNumber(String vatRegistrationNumber) {
    
    this.vatRegistrationNumber = vatRegistrationNumber;
    return this;
  }

  /**
   * Your government-assigned tax identification number.  #### Tax Calculation Required field for value added tax only. Not applicable to U.S. and Canadian taxes.  #### CyberSource through VisaNet For CtV processors, the maximum length is 20. 
   * @return vatRegistrationNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVatRegistrationNumber() {
    return vatRegistrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_VAT_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatRegistrationNumber(String vatRegistrationNumber) {
    this.vatRegistrationNumber = vatRegistrationNumber;
  }

  public RefundPaymentRequestMerchantInformation cardAcceptorReferenceNumber(String cardAcceptorReferenceNumber) {
    
    this.cardAcceptorReferenceNumber = cardAcceptorReferenceNumber;
    return this;
  }

  /**
   * Reference number that facilitates card acceptor/corporation communication and record keeping. 
   * @return cardAcceptorReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardAcceptorReferenceNumber() {
    return cardAcceptorReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardAcceptorReferenceNumber(String cardAcceptorReferenceNumber) {
    this.cardAcceptorReferenceNumber = cardAcceptorReferenceNumber;
  }

  public RefundPaymentRequestMerchantInformation taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

  /**
   * Your Cadastro Nacional da Pessoa Jur√≠dica (CNPJ) number.  This field is supported only for BNDES transactions on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR6 - Position: 40-59 - Field: BNDES Reference Field 1 
   * @return taxId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxId() {
    return taxId;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefundPaymentRequestMerchantInformation refundPaymentRequestMerchantInformation = (RefundPaymentRequestMerchantInformation) o;
    return Objects.equals(this.merchantDescriptor, refundPaymentRequestMerchantInformation.merchantDescriptor) &&
        Objects.equals(this.categoryCode, refundPaymentRequestMerchantInformation.categoryCode) &&
        Objects.equals(this.vatRegistrationNumber, refundPaymentRequestMerchantInformation.vatRegistrationNumber) &&
        Objects.equals(this.cardAcceptorReferenceNumber, refundPaymentRequestMerchantInformation.cardAcceptorReferenceNumber) &&
        Objects.equals(this.taxId, refundPaymentRequestMerchantInformation.taxId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantDescriptor, categoryCode, vatRegistrationNumber, cardAcceptorReferenceNumber, taxId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundPaymentRequestMerchantInformation {\n");
    sb.append("    merchantDescriptor: ").append(toIndentedString(merchantDescriptor)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    vatRegistrationNumber: ").append(toIndentedString(vatRegistrationNumber)).append("\n");
    sb.append("    cardAcceptorReferenceNumber: ").append(toIndentedString(cardAcceptorReferenceNumber)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

