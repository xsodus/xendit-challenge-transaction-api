/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner
 */
@JsonPropertyOrder({
  CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner.JSON_PROPERTY_CATEGORY_CODE,
  CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner.JSON_PROPERTY_SUB_CATEGORY_CODE
})
@JsonTypeName("createPayment_request_travelInformation_transit_airline_ancillaryInformation_service_inner")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner {
  public static final String JSON_PROPERTY_CATEGORY_CODE = "categoryCode";
  private String categoryCode;

  public static final String JSON_PROPERTY_SUB_CATEGORY_CODE = "subCategoryCode";
  private String subCategoryCode;

  public CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner() {
  }

  public CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner categoryCode(String categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Category code for the ancillary service that is provided. Obtain the codes from the International Air Transport Association (IATA). **Note** &#x60;#&#x60; is either 0, 1, 2, or 3. **Important** This field is required in the U.S. in order for you to qualify for either the custom payment service (CPS) or the electronic interchange reimbursement fee (EIRF)program. Format: English characters only. Optional request field for ancillary services. 
   * @return categoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategoryCode() {
    return categoryCode;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner subCategoryCode(String subCategoryCode) {
    
    this.subCategoryCode = subCategoryCode;
    return this;
  }

  /**
   * Subcategory code for the ancillary service category. Obtain the codes from the International Air Transport Association (IATA). **Note** &#x60;#&#x60; is either 0, 1, 2, or 3. Format  English characters only. Optional request field for ancillary services. 
   * @return subCategoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubCategoryCode() {
    return subCategoryCode;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCategoryCode(String subCategoryCode) {
    this.subCategoryCode = subCategoryCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner createPaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner = (CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner) o;
    return Objects.equals(this.categoryCode, createPaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner.categoryCode) &&
        Objects.equals(this.subCategoryCode, createPaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner.subCategoryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryCode, subCategoryCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestTravelInformationTransitAirlineAncillaryInformationServiceInner {\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    subCategoryCode: ").append(toIndentedString(subCategoryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

