/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DmConfigOrganization;
import org.openapitools.client.model.DmConfigPortfolioControls;
import org.openapitools.client.model.DmConfigProcessingOptions;
import org.openapitools.client.model.DmConfigThirdparty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DmConfig
 */
@JsonPropertyOrder({
  DmConfig.JSON_PROPERTY_PROCESSING_OPTIONS,
  DmConfig.JSON_PROPERTY_ORGANIZATION,
  DmConfig.JSON_PROPERTY_PORTFOLIO_CONTROLS,
  DmConfig.JSON_PROPERTY_THIRDPARTY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class DmConfig {
  public static final String JSON_PROPERTY_PROCESSING_OPTIONS = "processingOptions";
  private DmConfigProcessingOptions processingOptions;

  public static final String JSON_PROPERTY_ORGANIZATION = "organization";
  private DmConfigOrganization organization;

  public static final String JSON_PROPERTY_PORTFOLIO_CONTROLS = "portfolioControls";
  private DmConfigPortfolioControls portfolioControls;

  public static final String JSON_PROPERTY_THIRDPARTY = "thirdparty";
  private DmConfigThirdparty thirdparty;

  public DmConfig() {
  }

  public DmConfig processingOptions(DmConfigProcessingOptions processingOptions) {
    
    this.processingOptions = processingOptions;
    return this;
  }

  /**
   * Get processingOptions
   * @return processingOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSING_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DmConfigProcessingOptions getProcessingOptions() {
    return processingOptions;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSING_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessingOptions(DmConfigProcessingOptions processingOptions) {
    this.processingOptions = processingOptions;
  }

  public DmConfig organization(DmConfigOrganization organization) {
    
    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DmConfigOrganization getOrganization() {
    return organization;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganization(DmConfigOrganization organization) {
    this.organization = organization;
  }

  public DmConfig portfolioControls(DmConfigPortfolioControls portfolioControls) {
    
    this.portfolioControls = portfolioControls;
    return this;
  }

  /**
   * Get portfolioControls
   * @return portfolioControls
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_CONTROLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DmConfigPortfolioControls getPortfolioControls() {
    return portfolioControls;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO_CONTROLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortfolioControls(DmConfigPortfolioControls portfolioControls) {
    this.portfolioControls = portfolioControls;
  }

  public DmConfig thirdparty(DmConfigThirdparty thirdparty) {
    
    this.thirdparty = thirdparty;
    return this;
  }

  /**
   * Get thirdparty
   * @return thirdparty
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THIRDPARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DmConfigThirdparty getThirdparty() {
    return thirdparty;
  }


  @JsonProperty(JSON_PROPERTY_THIRDPARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThirdparty(DmConfigThirdparty thirdparty) {
    this.thirdparty = thirdparty;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DmConfig dmConfig = (DmConfig) o;
    return Objects.equals(this.processingOptions, dmConfig.processingOptions) &&
        Objects.equals(this.organization, dmConfig.organization) &&
        Objects.equals(this.portfolioControls, dmConfig.portfolioControls) &&
        Objects.equals(this.thirdparty, dmConfig.thirdparty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processingOptions, organization, portfolioControls, thirdparty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DmConfig {\n");
    sb.append("    processingOptions: ").append(toIndentedString(processingOptions)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    portfolioControls: ").append(toIndentedString(portfolioControls)).append("\n");
    sb.append("    thirdparty: ").append(toIndentedString(thirdparty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

