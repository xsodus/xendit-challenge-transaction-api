/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetAccountInfo201ResponsePayoutInformationPushFunds
 */
@JsonPropertyOrder({
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_MONEY_TRANSFER_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_MONEY_TRANSFER_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_NON_MONEY_TRANSFER_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_NON_MONEY_TRANSFER_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_ONLINE_GAMBLING_CROSS_BORDER,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_ONLINE_GAMBLING_DOMESTIC,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_DOMESTIC_PARTICIPANT,
  GetAccountInfo201ResponsePayoutInformationPushFunds.JSON_PROPERTY_CROSS_BORDER_PARTICIPANT
})
@JsonTypeName("getAccountInfo_201_response_payoutInformation_pushFunds")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class GetAccountInfo201ResponsePayoutInformationPushFunds {
  public static final String JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER = "moneyTransferFastFundsCrossBorder";
  private String moneyTransferFastFundsCrossBorder;

  public static final String JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC = "moneyTransferFastFundsDomestic";
  private String moneyTransferFastFundsDomestic;

  public static final String JSON_PROPERTY_MONEY_TRANSFER_CROSS_BORDER = "moneyTransferCrossBorder";
  private String moneyTransferCrossBorder;

  public static final String JSON_PROPERTY_MONEY_TRANSFER_DOMESTIC = "moneyTransferDomestic";
  private String moneyTransferDomestic;

  public static final String JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER = "nonMoneyTransferFastFundsCrossBorder";
  private String nonMoneyTransferFastFundsCrossBorder;

  public static final String JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC = "nonMoneyTransferFastFundsDomestic";
  private String nonMoneyTransferFastFundsDomestic;

  public static final String JSON_PROPERTY_NON_MONEY_TRANSFER_CROSS_BORDER = "nonMoneyTransferCrossBorder";
  private String nonMoneyTransferCrossBorder;

  public static final String JSON_PROPERTY_NON_MONEY_TRANSFER_DOMESTIC = "nonMoneyTransferDomestic";
  private String nonMoneyTransferDomestic;

  public static final String JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_CROSS_BORDER = "onlineGamblingFastFundsCrossBorder";
  private String onlineGamblingFastFundsCrossBorder;

  public static final String JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_DOMESTIC = "onlineGamblingFastFundsDomestic";
  private String onlineGamblingFastFundsDomestic;

  public static final String JSON_PROPERTY_ONLINE_GAMBLING_CROSS_BORDER = "onlineGamblingCrossBorder";
  private String onlineGamblingCrossBorder;

  public static final String JSON_PROPERTY_ONLINE_GAMBLING_DOMESTIC = "onlineGamblingDomestic";
  private String onlineGamblingDomestic;

  public static final String JSON_PROPERTY_DOMESTIC_PARTICIPANT = "domesticParticipant";
  private String domesticParticipant;

  public static final String JSON_PROPERTY_CROSS_BORDER_PARTICIPANT = "crossBorderParticipant";
  private String crossBorderParticipant;

  public GetAccountInfo201ResponsePayoutInformationPushFunds() {
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds moneyTransferFastFundsCrossBorder(String moneyTransferFastFundsCrossBorder) {
    
    this.moneyTransferFastFundsCrossBorder = moneyTransferFastFundsCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border money transfer OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return moneyTransferFastFundsCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMoneyTransferFastFundsCrossBorder() {
    return moneyTransferFastFundsCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMoneyTransferFastFundsCrossBorder(String moneyTransferFastFundsCrossBorder) {
    this.moneyTransferFastFundsCrossBorder = moneyTransferFastFundsCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds moneyTransferFastFundsDomestic(String moneyTransferFastFundsDomestic) {
    
    this.moneyTransferFastFundsDomestic = moneyTransferFastFundsDomestic;
    return this;
  }

  /**
   * This field indicates if domestic money transfer OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return moneyTransferFastFundsDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMoneyTransferFastFundsDomestic() {
    return moneyTransferFastFundsDomestic;
  }


  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMoneyTransferFastFundsDomestic(String moneyTransferFastFundsDomestic) {
    this.moneyTransferFastFundsDomestic = moneyTransferFastFundsDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds moneyTransferCrossBorder(String moneyTransferCrossBorder) {
    
    this.moneyTransferCrossBorder = moneyTransferCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border money transfer OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return moneyTransferCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMoneyTransferCrossBorder() {
    return moneyTransferCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMoneyTransferCrossBorder(String moneyTransferCrossBorder) {
    this.moneyTransferCrossBorder = moneyTransferCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds moneyTransferDomestic(String moneyTransferDomestic) {
    
    this.moneyTransferDomestic = moneyTransferDomestic;
    return this;
  }

  /**
   * This field indicates if domestic money transfer OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return moneyTransferDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMoneyTransferDomestic() {
    return moneyTransferDomestic;
  }


  @JsonProperty(JSON_PROPERTY_MONEY_TRANSFER_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMoneyTransferDomestic(String moneyTransferDomestic) {
    this.moneyTransferDomestic = moneyTransferDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds nonMoneyTransferFastFundsCrossBorder(String nonMoneyTransferFastFundsCrossBorder) {
    
    this.nonMoneyTransferFastFundsCrossBorder = nonMoneyTransferFastFundsCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border non-money transfer OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return nonMoneyTransferFastFundsCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNonMoneyTransferFastFundsCrossBorder() {
    return nonMoneyTransferFastFundsCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonMoneyTransferFastFundsCrossBorder(String nonMoneyTransferFastFundsCrossBorder) {
    this.nonMoneyTransferFastFundsCrossBorder = nonMoneyTransferFastFundsCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds nonMoneyTransferFastFundsDomestic(String nonMoneyTransferFastFundsDomestic) {
    
    this.nonMoneyTransferFastFundsDomestic = nonMoneyTransferFastFundsDomestic;
    return this;
  }

  /**
   * This field indicates if domestic non-money transfer OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return nonMoneyTransferFastFundsDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNonMoneyTransferFastFundsDomestic() {
    return nonMoneyTransferFastFundsDomestic;
  }


  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonMoneyTransferFastFundsDomestic(String nonMoneyTransferFastFundsDomestic) {
    this.nonMoneyTransferFastFundsDomestic = nonMoneyTransferFastFundsDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds nonMoneyTransferCrossBorder(String nonMoneyTransferCrossBorder) {
    
    this.nonMoneyTransferCrossBorder = nonMoneyTransferCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border non-money transfer OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return nonMoneyTransferCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNonMoneyTransferCrossBorder() {
    return nonMoneyTransferCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonMoneyTransferCrossBorder(String nonMoneyTransferCrossBorder) {
    this.nonMoneyTransferCrossBorder = nonMoneyTransferCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds nonMoneyTransferDomestic(String nonMoneyTransferDomestic) {
    
    this.nonMoneyTransferDomestic = nonMoneyTransferDomestic;
    return this;
  }

  /**
   * This field indicates if domestic non-money transfer OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return nonMoneyTransferDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNonMoneyTransferDomestic() {
    return nonMoneyTransferDomestic;
  }


  @JsonProperty(JSON_PROPERTY_NON_MONEY_TRANSFER_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonMoneyTransferDomestic(String nonMoneyTransferDomestic) {
    this.nonMoneyTransferDomestic = nonMoneyTransferDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds onlineGamblingFastFundsCrossBorder(String onlineGamblingFastFundsCrossBorder) {
    
    this.onlineGamblingFastFundsCrossBorder = onlineGamblingFastFundsCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border gambling OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return onlineGamblingFastFundsCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOnlineGamblingFastFundsCrossBorder() {
    return onlineGamblingFastFundsCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnlineGamblingFastFundsCrossBorder(String onlineGamblingFastFundsCrossBorder) {
    this.onlineGamblingFastFundsCrossBorder = onlineGamblingFastFundsCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds onlineGamblingFastFundsDomestic(String onlineGamblingFastFundsDomestic) {
    
    this.onlineGamblingFastFundsDomestic = onlineGamblingFastFundsDomestic;
    return this;
  }

  /**
   * This field indicates if domestic gambling OCTs (fast push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return onlineGamblingFastFundsDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOnlineGamblingFastFundsDomestic() {
    return onlineGamblingFastFundsDomestic;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_FAST_FUNDS_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnlineGamblingFastFundsDomestic(String onlineGamblingFastFundsDomestic) {
    this.onlineGamblingFastFundsDomestic = onlineGamblingFastFundsDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds onlineGamblingCrossBorder(String onlineGamblingCrossBorder) {
    
    this.onlineGamblingCrossBorder = onlineGamblingCrossBorder;
    return this;
  }

  /**
   * This field indicates if cross-border gambling OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return onlineGamblingCrossBorder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOnlineGamblingCrossBorder() {
    return onlineGamblingCrossBorder;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_CROSS_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnlineGamblingCrossBorder(String onlineGamblingCrossBorder) {
    this.onlineGamblingCrossBorder = onlineGamblingCrossBorder;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds onlineGamblingDomestic(String onlineGamblingDomestic) {
    
    this.onlineGamblingDomestic = onlineGamblingDomestic;
    return this;
  }

  /**
   * This field indicates if domestic gambling OCTs (push funds) are allowed. Possible values:   - &#x60;Y&#x60;   - &#x60;N&#x60; 
   * @return onlineGamblingDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOnlineGamblingDomestic() {
    return onlineGamblingDomestic;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_GAMBLING_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnlineGamblingDomestic(String onlineGamblingDomestic) {
    this.onlineGamblingDomestic = onlineGamblingDomestic;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds domesticParticipant(String domesticParticipant) {
    
    this.domesticParticipant = domesticParticipant;
    return this;
  }

  /**
   * This field indicates if domestic OCTs (push funds) are allowed. Note: Supported only in US for domestic transactions involving Push Payments Gateway Service(PPGS). Possible values:   - &#x60;true&#x60;   - &#x60;false&#x60; 
   * @return domesticParticipant
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMESTIC_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomesticParticipant() {
    return domesticParticipant;
  }


  @JsonProperty(JSON_PROPERTY_DOMESTIC_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomesticParticipant(String domesticParticipant) {
    this.domesticParticipant = domesticParticipant;
  }

  public GetAccountInfo201ResponsePayoutInformationPushFunds crossBorderParticipant(String crossBorderParticipant) {
    
    this.crossBorderParticipant = crossBorderParticipant;
    return this;
  }

  /**
   * This field indicates if cross-border OCTs (push funds) are allowed. Note: Supported only in US for cross-border transactions involving Push Payments Gateway Service(PPGS). Possible values:   - &#x60;true&#x60;   - &#x60;false&#x60; 
   * @return crossBorderParticipant
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CROSS_BORDER_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCrossBorderParticipant() {
    return crossBorderParticipant;
  }


  @JsonProperty(JSON_PROPERTY_CROSS_BORDER_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrossBorderParticipant(String crossBorderParticipant) {
    this.crossBorderParticipant = crossBorderParticipant;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountInfo201ResponsePayoutInformationPushFunds getAccountInfo201ResponsePayoutInformationPushFunds = (GetAccountInfo201ResponsePayoutInformationPushFunds) o;
    return Objects.equals(this.moneyTransferFastFundsCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.moneyTransferFastFundsCrossBorder) &&
        Objects.equals(this.moneyTransferFastFundsDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.moneyTransferFastFundsDomestic) &&
        Objects.equals(this.moneyTransferCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.moneyTransferCrossBorder) &&
        Objects.equals(this.moneyTransferDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.moneyTransferDomestic) &&
        Objects.equals(this.nonMoneyTransferFastFundsCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.nonMoneyTransferFastFundsCrossBorder) &&
        Objects.equals(this.nonMoneyTransferFastFundsDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.nonMoneyTransferFastFundsDomestic) &&
        Objects.equals(this.nonMoneyTransferCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.nonMoneyTransferCrossBorder) &&
        Objects.equals(this.nonMoneyTransferDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.nonMoneyTransferDomestic) &&
        Objects.equals(this.onlineGamblingFastFundsCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.onlineGamblingFastFundsCrossBorder) &&
        Objects.equals(this.onlineGamblingFastFundsDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.onlineGamblingFastFundsDomestic) &&
        Objects.equals(this.onlineGamblingCrossBorder, getAccountInfo201ResponsePayoutInformationPushFunds.onlineGamblingCrossBorder) &&
        Objects.equals(this.onlineGamblingDomestic, getAccountInfo201ResponsePayoutInformationPushFunds.onlineGamblingDomestic) &&
        Objects.equals(this.domesticParticipant, getAccountInfo201ResponsePayoutInformationPushFunds.domesticParticipant) &&
        Objects.equals(this.crossBorderParticipant, getAccountInfo201ResponsePayoutInformationPushFunds.crossBorderParticipant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(moneyTransferFastFundsCrossBorder, moneyTransferFastFundsDomestic, moneyTransferCrossBorder, moneyTransferDomestic, nonMoneyTransferFastFundsCrossBorder, nonMoneyTransferFastFundsDomestic, nonMoneyTransferCrossBorder, nonMoneyTransferDomestic, onlineGamblingFastFundsCrossBorder, onlineGamblingFastFundsDomestic, onlineGamblingCrossBorder, onlineGamblingDomestic, domesticParticipant, crossBorderParticipant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountInfo201ResponsePayoutInformationPushFunds {\n");
    sb.append("    moneyTransferFastFundsCrossBorder: ").append(toIndentedString(moneyTransferFastFundsCrossBorder)).append("\n");
    sb.append("    moneyTransferFastFundsDomestic: ").append(toIndentedString(moneyTransferFastFundsDomestic)).append("\n");
    sb.append("    moneyTransferCrossBorder: ").append(toIndentedString(moneyTransferCrossBorder)).append("\n");
    sb.append("    moneyTransferDomestic: ").append(toIndentedString(moneyTransferDomestic)).append("\n");
    sb.append("    nonMoneyTransferFastFundsCrossBorder: ").append(toIndentedString(nonMoneyTransferFastFundsCrossBorder)).append("\n");
    sb.append("    nonMoneyTransferFastFundsDomestic: ").append(toIndentedString(nonMoneyTransferFastFundsDomestic)).append("\n");
    sb.append("    nonMoneyTransferCrossBorder: ").append(toIndentedString(nonMoneyTransferCrossBorder)).append("\n");
    sb.append("    nonMoneyTransferDomestic: ").append(toIndentedString(nonMoneyTransferDomestic)).append("\n");
    sb.append("    onlineGamblingFastFundsCrossBorder: ").append(toIndentedString(onlineGamblingFastFundsCrossBorder)).append("\n");
    sb.append("    onlineGamblingFastFundsDomestic: ").append(toIndentedString(onlineGamblingFastFundsDomestic)).append("\n");
    sb.append("    onlineGamblingCrossBorder: ").append(toIndentedString(onlineGamblingCrossBorder)).append("\n");
    sb.append("    onlineGamblingDomestic: ").append(toIndentedString(onlineGamblingDomestic)).append("\n");
    sb.append("    domesticParticipant: ").append(toIndentedString(domesticParticipant)).append("\n");
    sb.append("    crossBorderParticipant: ").append(toIndentedString(crossBorderParticipant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

