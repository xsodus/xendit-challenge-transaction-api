/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PaymentsProductsCardPresentConnect;
import org.openapitools.client.model.PaymentsProductsCardProcessing;
import org.openapitools.client.model.PaymentsProductsCurrencyConversion;
import org.openapitools.client.model.PaymentsProductsCybsReadyTerminal;
import org.openapitools.client.model.PaymentsProductsDifferentialFee;
import org.openapitools.client.model.PaymentsProductsDigitalPayments;
import org.openapitools.client.model.PaymentsProductsECheck;
import org.openapitools.client.model.PaymentsProductsPayerAuthentication;
import org.openapitools.client.model.PaymentsProductsPayouts;
import org.openapitools.client.model.PaymentsProductsSecureAcceptance;
import org.openapitools.client.model.PaymentsProductsServiceFee;
import org.openapitools.client.model.PaymentsProductsTax;
import org.openapitools.client.model.PaymentsProductsVirtualTerminal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentsProducts
 */
@JsonPropertyOrder({
  PaymentsProducts.JSON_PROPERTY_CARD_PROCESSING,
  PaymentsProducts.JSON_PROPERTY_CARD_PRESENT_CONNECT,
  PaymentsProducts.JSON_PROPERTY_CYBS_READY_TERMINAL,
  PaymentsProducts.JSON_PROPERTY_E_CHECK,
  PaymentsProducts.JSON_PROPERTY_PAYER_AUTHENTICATION,
  PaymentsProducts.JSON_PROPERTY_DIGITAL_PAYMENTS,
  PaymentsProducts.JSON_PROPERTY_SECURE_ACCEPTANCE,
  PaymentsProducts.JSON_PROPERTY_VIRTUAL_TERMINAL,
  PaymentsProducts.JSON_PROPERTY_CURRENCY_CONVERSION,
  PaymentsProducts.JSON_PROPERTY_TAX,
  PaymentsProducts.JSON_PROPERTY_CUSTOMER_INVOICING,
  PaymentsProducts.JSON_PROPERTY_RECURRING_BILLING,
  PaymentsProducts.JSON_PROPERTY_PAYMENT_ORCHESTRATION,
  PaymentsProducts.JSON_PROPERTY_PAYOUTS,
  PaymentsProducts.JSON_PROPERTY_DIFFERENTIAL_FEE,
  PaymentsProducts.JSON_PROPERTY_PAY_BY_LINK,
  PaymentsProducts.JSON_PROPERTY_UNIFIED_CHECKOUT,
  PaymentsProducts.JSON_PROPERTY_RECEIVABLES_MANAGER,
  PaymentsProducts.JSON_PROPERTY_SERVICE_FEE
})
@JsonTypeName("paymentsProducts")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PaymentsProducts {
  public static final String JSON_PROPERTY_CARD_PROCESSING = "cardProcessing";
  private PaymentsProductsCardProcessing cardProcessing;

  public static final String JSON_PROPERTY_CARD_PRESENT_CONNECT = "cardPresentConnect";
  private PaymentsProductsCardPresentConnect cardPresentConnect;

  public static final String JSON_PROPERTY_CYBS_READY_TERMINAL = "cybsReadyTerminal";
  private PaymentsProductsCybsReadyTerminal cybsReadyTerminal;

  public static final String JSON_PROPERTY_E_CHECK = "eCheck";
  private PaymentsProductsECheck eCheck;

  public static final String JSON_PROPERTY_PAYER_AUTHENTICATION = "payerAuthentication";
  private PaymentsProductsPayerAuthentication payerAuthentication;

  public static final String JSON_PROPERTY_DIGITAL_PAYMENTS = "digitalPayments";
  private PaymentsProductsDigitalPayments digitalPayments;

  public static final String JSON_PROPERTY_SECURE_ACCEPTANCE = "secureAcceptance";
  private PaymentsProductsSecureAcceptance secureAcceptance;

  public static final String JSON_PROPERTY_VIRTUAL_TERMINAL = "virtualTerminal";
  private PaymentsProductsVirtualTerminal virtualTerminal;

  public static final String JSON_PROPERTY_CURRENCY_CONVERSION = "currencyConversion";
  private PaymentsProductsCurrencyConversion currencyConversion;

  public static final String JSON_PROPERTY_TAX = "tax";
  private PaymentsProductsTax tax;

  public static final String JSON_PROPERTY_CUSTOMER_INVOICING = "customerInvoicing";
  private PaymentsProductsTax customerInvoicing;

  public static final String JSON_PROPERTY_RECURRING_BILLING = "recurringBilling";
  private PaymentsProductsTax recurringBilling;

  public static final String JSON_PROPERTY_PAYMENT_ORCHESTRATION = "paymentOrchestration";
  private PaymentsProductsTax paymentOrchestration;

  public static final String JSON_PROPERTY_PAYOUTS = "payouts";
  private PaymentsProductsPayouts payouts;

  public static final String JSON_PROPERTY_DIFFERENTIAL_FEE = "differentialFee";
  private PaymentsProductsDifferentialFee differentialFee;

  public static final String JSON_PROPERTY_PAY_BY_LINK = "payByLink";
  private PaymentsProductsTax payByLink;

  public static final String JSON_PROPERTY_UNIFIED_CHECKOUT = "unifiedCheckout";
  private PaymentsProductsTax unifiedCheckout;

  public static final String JSON_PROPERTY_RECEIVABLES_MANAGER = "receivablesManager";
  private PaymentsProductsTax receivablesManager;

  public static final String JSON_PROPERTY_SERVICE_FEE = "serviceFee";
  private PaymentsProductsServiceFee serviceFee;

  public PaymentsProducts() {
  }

  public PaymentsProducts cardProcessing(PaymentsProductsCardProcessing cardProcessing) {
    
    this.cardProcessing = cardProcessing;
    return this;
  }

  /**
   * Get cardProcessing
   * @return cardProcessing
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_PROCESSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsCardProcessing getCardProcessing() {
    return cardProcessing;
  }


  @JsonProperty(JSON_PROPERTY_CARD_PROCESSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardProcessing(PaymentsProductsCardProcessing cardProcessing) {
    this.cardProcessing = cardProcessing;
  }

  public PaymentsProducts cardPresentConnect(PaymentsProductsCardPresentConnect cardPresentConnect) {
    
    this.cardPresentConnect = cardPresentConnect;
    return this;
  }

  /**
   * Get cardPresentConnect
   * @return cardPresentConnect
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_PRESENT_CONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsCardPresentConnect getCardPresentConnect() {
    return cardPresentConnect;
  }


  @JsonProperty(JSON_PROPERTY_CARD_PRESENT_CONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardPresentConnect(PaymentsProductsCardPresentConnect cardPresentConnect) {
    this.cardPresentConnect = cardPresentConnect;
  }

  public PaymentsProducts cybsReadyTerminal(PaymentsProductsCybsReadyTerminal cybsReadyTerminal) {
    
    this.cybsReadyTerminal = cybsReadyTerminal;
    return this;
  }

  /**
   * Get cybsReadyTerminal
   * @return cybsReadyTerminal
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CYBS_READY_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsCybsReadyTerminal getCybsReadyTerminal() {
    return cybsReadyTerminal;
  }


  @JsonProperty(JSON_PROPERTY_CYBS_READY_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCybsReadyTerminal(PaymentsProductsCybsReadyTerminal cybsReadyTerminal) {
    this.cybsReadyTerminal = cybsReadyTerminal;
  }

  public PaymentsProducts eCheck(PaymentsProductsECheck eCheck) {
    
    this.eCheck = eCheck;
    return this;
  }

  /**
   * Get eCheck
   * @return eCheck
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_E_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsECheck geteCheck() {
    return eCheck;
  }


  @JsonProperty(JSON_PROPERTY_E_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void seteCheck(PaymentsProductsECheck eCheck) {
    this.eCheck = eCheck;
  }

  public PaymentsProducts payerAuthentication(PaymentsProductsPayerAuthentication payerAuthentication) {
    
    this.payerAuthentication = payerAuthentication;
    return this;
  }

  /**
   * Get payerAuthentication
   * @return payerAuthentication
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsPayerAuthentication getPayerAuthentication() {
    return payerAuthentication;
  }


  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayerAuthentication(PaymentsProductsPayerAuthentication payerAuthentication) {
    this.payerAuthentication = payerAuthentication;
  }

  public PaymentsProducts digitalPayments(PaymentsProductsDigitalPayments digitalPayments) {
    
    this.digitalPayments = digitalPayments;
    return this;
  }

  /**
   * Get digitalPayments
   * @return digitalPayments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIGITAL_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsDigitalPayments getDigitalPayments() {
    return digitalPayments;
  }


  @JsonProperty(JSON_PROPERTY_DIGITAL_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDigitalPayments(PaymentsProductsDigitalPayments digitalPayments) {
    this.digitalPayments = digitalPayments;
  }

  public PaymentsProducts secureAcceptance(PaymentsProductsSecureAcceptance secureAcceptance) {
    
    this.secureAcceptance = secureAcceptance;
    return this;
  }

  /**
   * Get secureAcceptance
   * @return secureAcceptance
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURE_ACCEPTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsSecureAcceptance getSecureAcceptance() {
    return secureAcceptance;
  }


  @JsonProperty(JSON_PROPERTY_SECURE_ACCEPTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecureAcceptance(PaymentsProductsSecureAcceptance secureAcceptance) {
    this.secureAcceptance = secureAcceptance;
  }

  public PaymentsProducts virtualTerminal(PaymentsProductsVirtualTerminal virtualTerminal) {
    
    this.virtualTerminal = virtualTerminal;
    return this;
  }

  /**
   * Get virtualTerminal
   * @return virtualTerminal
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsVirtualTerminal getVirtualTerminal() {
    return virtualTerminal;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualTerminal(PaymentsProductsVirtualTerminal virtualTerminal) {
    this.virtualTerminal = virtualTerminal;
  }

  public PaymentsProducts currencyConversion(PaymentsProductsCurrencyConversion currencyConversion) {
    
    this.currencyConversion = currencyConversion;
    return this;
  }

  /**
   * Get currencyConversion
   * @return currencyConversion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_CONVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsCurrencyConversion getCurrencyConversion() {
    return currencyConversion;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CONVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyConversion(PaymentsProductsCurrencyConversion currencyConversion) {
    this.currencyConversion = currencyConversion;
  }

  public PaymentsProducts tax(PaymentsProductsTax tax) {
    
    this.tax = tax;
    return this;
  }

  /**
   * Get tax
   * @return tax
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getTax() {
    return tax;
  }


  @JsonProperty(JSON_PROPERTY_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTax(PaymentsProductsTax tax) {
    this.tax = tax;
  }

  public PaymentsProducts customerInvoicing(PaymentsProductsTax customerInvoicing) {
    
    this.customerInvoicing = customerInvoicing;
    return this;
  }

  /**
   * Get customerInvoicing
   * @return customerInvoicing
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_INVOICING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getCustomerInvoicing() {
    return customerInvoicing;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_INVOICING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerInvoicing(PaymentsProductsTax customerInvoicing) {
    this.customerInvoicing = customerInvoicing;
  }

  public PaymentsProducts recurringBilling(PaymentsProductsTax recurringBilling) {
    
    this.recurringBilling = recurringBilling;
    return this;
  }

  /**
   * Get recurringBilling
   * @return recurringBilling
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRING_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getRecurringBilling() {
    return recurringBilling;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringBilling(PaymentsProductsTax recurringBilling) {
    this.recurringBilling = recurringBilling;
  }

  public PaymentsProducts paymentOrchestration(PaymentsProductsTax paymentOrchestration) {
    
    this.paymentOrchestration = paymentOrchestration;
    return this;
  }

  /**
   * Get paymentOrchestration
   * @return paymentOrchestration
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_ORCHESTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getPaymentOrchestration() {
    return paymentOrchestration;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_ORCHESTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentOrchestration(PaymentsProductsTax paymentOrchestration) {
    this.paymentOrchestration = paymentOrchestration;
  }

  public PaymentsProducts payouts(PaymentsProductsPayouts payouts) {
    
    this.payouts = payouts;
    return this;
  }

  /**
   * Get payouts
   * @return payouts
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsPayouts getPayouts() {
    return payouts;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayouts(PaymentsProductsPayouts payouts) {
    this.payouts = payouts;
  }

  public PaymentsProducts differentialFee(PaymentsProductsDifferentialFee differentialFee) {
    
    this.differentialFee = differentialFee;
    return this;
  }

  /**
   * Get differentialFee
   * @return differentialFee
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIFFERENTIAL_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsDifferentialFee getDifferentialFee() {
    return differentialFee;
  }


  @JsonProperty(JSON_PROPERTY_DIFFERENTIAL_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDifferentialFee(PaymentsProductsDifferentialFee differentialFee) {
    this.differentialFee = differentialFee;
  }

  public PaymentsProducts payByLink(PaymentsProductsTax payByLink) {
    
    this.payByLink = payByLink;
    return this;
  }

  /**
   * Get payByLink
   * @return payByLink
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_BY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getPayByLink() {
    return payByLink;
  }


  @JsonProperty(JSON_PROPERTY_PAY_BY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayByLink(PaymentsProductsTax payByLink) {
    this.payByLink = payByLink;
  }

  public PaymentsProducts unifiedCheckout(PaymentsProductsTax unifiedCheckout) {
    
    this.unifiedCheckout = unifiedCheckout;
    return this;
  }

  /**
   * Get unifiedCheckout
   * @return unifiedCheckout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIFIED_CHECKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getUnifiedCheckout() {
    return unifiedCheckout;
  }


  @JsonProperty(JSON_PROPERTY_UNIFIED_CHECKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnifiedCheckout(PaymentsProductsTax unifiedCheckout) {
    this.unifiedCheckout = unifiedCheckout;
  }

  public PaymentsProducts receivablesManager(PaymentsProductsTax receivablesManager) {
    
    this.receivablesManager = receivablesManager;
    return this;
  }

  /**
   * Get receivablesManager
   * @return receivablesManager
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECEIVABLES_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getReceivablesManager() {
    return receivablesManager;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVABLES_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReceivablesManager(PaymentsProductsTax receivablesManager) {
    this.receivablesManager = receivablesManager;
  }

  public PaymentsProducts serviceFee(PaymentsProductsServiceFee serviceFee) {
    
    this.serviceFee = serviceFee;
    return this;
  }

  /**
   * Get serviceFee
   * @return serviceFee
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsServiceFee getServiceFee() {
    return serviceFee;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceFee(PaymentsProductsServiceFee serviceFee) {
    this.serviceFee = serviceFee;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProducts paymentsProducts = (PaymentsProducts) o;
    return Objects.equals(this.cardProcessing, paymentsProducts.cardProcessing) &&
        Objects.equals(this.cardPresentConnect, paymentsProducts.cardPresentConnect) &&
        Objects.equals(this.cybsReadyTerminal, paymentsProducts.cybsReadyTerminal) &&
        Objects.equals(this.eCheck, paymentsProducts.eCheck) &&
        Objects.equals(this.payerAuthentication, paymentsProducts.payerAuthentication) &&
        Objects.equals(this.digitalPayments, paymentsProducts.digitalPayments) &&
        Objects.equals(this.secureAcceptance, paymentsProducts.secureAcceptance) &&
        Objects.equals(this.virtualTerminal, paymentsProducts.virtualTerminal) &&
        Objects.equals(this.currencyConversion, paymentsProducts.currencyConversion) &&
        Objects.equals(this.tax, paymentsProducts.tax) &&
        Objects.equals(this.customerInvoicing, paymentsProducts.customerInvoicing) &&
        Objects.equals(this.recurringBilling, paymentsProducts.recurringBilling) &&
        Objects.equals(this.paymentOrchestration, paymentsProducts.paymentOrchestration) &&
        Objects.equals(this.payouts, paymentsProducts.payouts) &&
        Objects.equals(this.differentialFee, paymentsProducts.differentialFee) &&
        Objects.equals(this.payByLink, paymentsProducts.payByLink) &&
        Objects.equals(this.unifiedCheckout, paymentsProducts.unifiedCheckout) &&
        Objects.equals(this.receivablesManager, paymentsProducts.receivablesManager) &&
        Objects.equals(this.serviceFee, paymentsProducts.serviceFee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardProcessing, cardPresentConnect, cybsReadyTerminal, eCheck, payerAuthentication, digitalPayments, secureAcceptance, virtualTerminal, currencyConversion, tax, customerInvoicing, recurringBilling, paymentOrchestration, payouts, differentialFee, payByLink, unifiedCheckout, receivablesManager, serviceFee);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProducts {\n");
    sb.append("    cardProcessing: ").append(toIndentedString(cardProcessing)).append("\n");
    sb.append("    cardPresentConnect: ").append(toIndentedString(cardPresentConnect)).append("\n");
    sb.append("    cybsReadyTerminal: ").append(toIndentedString(cybsReadyTerminal)).append("\n");
    sb.append("    eCheck: ").append(toIndentedString(eCheck)).append("\n");
    sb.append("    payerAuthentication: ").append(toIndentedString(payerAuthentication)).append("\n");
    sb.append("    digitalPayments: ").append(toIndentedString(digitalPayments)).append("\n");
    sb.append("    secureAcceptance: ").append(toIndentedString(secureAcceptance)).append("\n");
    sb.append("    virtualTerminal: ").append(toIndentedString(virtualTerminal)).append("\n");
    sb.append("    currencyConversion: ").append(toIndentedString(currencyConversion)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    customerInvoicing: ").append(toIndentedString(customerInvoicing)).append("\n");
    sb.append("    recurringBilling: ").append(toIndentedString(recurringBilling)).append("\n");
    sb.append("    paymentOrchestration: ").append(toIndentedString(paymentOrchestration)).append("\n");
    sb.append("    payouts: ").append(toIndentedString(payouts)).append("\n");
    sb.append("    differentialFee: ").append(toIndentedString(differentialFee)).append("\n");
    sb.append("    payByLink: ").append(toIndentedString(payByLink)).append("\n");
    sb.append("    unifiedCheckout: ").append(toIndentedString(unifiedCheckout)).append("\n");
    sb.append("    receivablesManager: ").append(toIndentedString(receivablesManager)).append("\n");
    sb.append("    serviceFee: ").append(toIndentedString(serviceFee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

