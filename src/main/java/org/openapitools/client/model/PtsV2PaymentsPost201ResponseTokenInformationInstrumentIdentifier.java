/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier.JSON_PROPERTY_ID,
  PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier.JSON_PROPERTY_STATE
})
@JsonTypeName("ptsV2PaymentsPost201Response_tokenInformation_instrumentIdentifier")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier() {
  }

  public PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the Instrument Identifier token that was created as part of a bundled TOKEN_CREATE action. 
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier state(String state) {
    
    this.state = state;
    return this;
  }

  /**
   * Issuers state for the card number. Valid values: - ACTIVE - CLOSED : The account has been closed. 
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier ptsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier = (PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier) o;
    return Objects.equals(this.id, ptsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier.id) &&
        Objects.equals(this.state, ptsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseTokenInformationInstrumentIdentifier {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

