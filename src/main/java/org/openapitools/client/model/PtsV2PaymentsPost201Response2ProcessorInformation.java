/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201Response2ProcessorInformation
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201Response2ProcessorInformation.JSON_PROPERTY_TRANSACTION_ID,
  PtsV2PaymentsPost201Response2ProcessorInformation.JSON_PROPERTY_PAYMENT_URL,
  PtsV2PaymentsPost201Response2ProcessorInformation.JSON_PROPERTY_RESPONSE_DETAILS,
  PtsV2PaymentsPost201Response2ProcessorInformation.JSON_PROPERTY_TOKEN,
  PtsV2PaymentsPost201Response2ProcessorInformation.JSON_PROPERTY_RESPONSE_CODE
})
@JsonTypeName("ptsV2PaymentsPost201Response_2_processorInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201Response2ProcessorInformation {
  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_PAYMENT_URL = "paymentUrl";
  private String paymentUrl;

  public static final String JSON_PROPERTY_RESPONSE_DETAILS = "responseDetails";
  private String responseDetails;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  private String responseCode;

  public PtsV2PaymentsPost201Response2ProcessorInformation() {
  }

  public PtsV2PaymentsPost201Response2ProcessorInformation transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Network transaction identifier (TID). You can use this value to identify a specific transaction when you are discussing the transaction with your processor. Not all processors provide this value.  Returned by the authorization service.  #### PIN debit Transaction identifier generated by the processor.  Returned by PIN debit credit.  #### GPX Processor transaction ID.  #### Cielo For Cielo, this value is the non-sequential unit (NSU) and is supported for all transactions. The value is generated by Cielo or the issuing bank.  #### Comercio Latino For Comercio Latino, this value is the proof of sale or non-sequential unit (NSU) number generated by the acquirers Cielo and Rede, or the issuing bank.  #### CyberSource through VisaNet and GPN For details about this value for CyberSource through VisaNet and GPN, see \&quot;processorInformation.networkTransactionId\&quot; in [REST API Fields](https://developer.cybersource.com/content/dam/docs/cybs/en-us/apifields/reference/all/rest/api-fields.pdf)  #### Moneris This value identifies the transaction on a host system. It contains the following information: - Terminal used to process the transaction - Shift during which the transaction took place - Batch number - Transaction number within the batch You must store this value. If you give the customer a receipt, display this value on the receipt.  **Example** For the value 66012345001069003: - Terminal ID &#x3D; 66012345 - Shift number &#x3D; 001 - Batch number &#x3D; 069 - Transaction number &#x3D; 003 
   * @return transactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public PtsV2PaymentsPost201Response2ProcessorInformation paymentUrl(String paymentUrl) {
    
    this.paymentUrl = paymentUrl;
    return this;
  }

  /**
   * Direct the customer to this URL to complete the payment.
   * @return paymentUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentUrl() {
    return paymentUrl;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentUrl(String paymentUrl) {
    this.paymentUrl = paymentUrl;
  }

  public PtsV2PaymentsPost201Response2ProcessorInformation responseDetails(String responseDetails) {
    
    this.responseDetails = responseDetails;
    return this;
  }

  /**
   * This field might contain information about a decline. This field is supported only for **CyberSource through VisaNet**. 
   * @return responseDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseDetails() {
    return responseDetails;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseDetails(String responseDetails) {
    this.responseDetails = responseDetails;
  }

  public PtsV2PaymentsPost201Response2ProcessorInformation token(String token) {
    
    this.token = token;
    return this;
  }

  /**
   * Payment gateway/processor assigned session token. 
   * @return token
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }

  public PtsV2PaymentsPost201Response2ProcessorInformation responseCode(String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * Transaction status from the processor. 
   * @return responseCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseCode(String responseCode) {
    this.responseCode = responseCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201Response2ProcessorInformation ptsV2PaymentsPost201Response2ProcessorInformation = (PtsV2PaymentsPost201Response2ProcessorInformation) o;
    return Objects.equals(this.transactionId, ptsV2PaymentsPost201Response2ProcessorInformation.transactionId) &&
        Objects.equals(this.paymentUrl, ptsV2PaymentsPost201Response2ProcessorInformation.paymentUrl) &&
        Objects.equals(this.responseDetails, ptsV2PaymentsPost201Response2ProcessorInformation.responseDetails) &&
        Objects.equals(this.token, ptsV2PaymentsPost201Response2ProcessorInformation.token) &&
        Objects.equals(this.responseCode, ptsV2PaymentsPost201Response2ProcessorInformation.responseCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, paymentUrl, responseDetails, token, responseCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201Response2ProcessorInformation {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    paymentUrl: ").append(toIndentedString(paymentUrl)).append("\n");
    sb.append("    responseDetails: ").append(toIndentedString(responseDetails)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

