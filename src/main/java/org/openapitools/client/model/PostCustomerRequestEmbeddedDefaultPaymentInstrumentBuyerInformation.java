/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation
 */
@JsonPropertyOrder({
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.JSON_PROPERTY_COMPANY_TAX_I_D,
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.JSON_PROPERTY_CURRENCY,
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.JSON_PROPERTY_DATE_OF_BIRTH,
  PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.JSON_PROPERTY_PERSONAL_IDENTIFICATION
})
@JsonTypeName("postCustomer_request__embedded_defaultPaymentInstrument_buyerInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation {
  public static final String JSON_PROPERTY_COMPANY_TAX_I_D = "companyTaxID";
  private String companyTaxID;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  private LocalDate dateOfBirth;

  public static final String JSON_PROPERTY_PERSONAL_IDENTIFICATION = "personalIdentification";
  private List<PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner> personalIdentification = new ArrayList<>();

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation() {
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation companyTaxID(String companyTaxID) {
    
    this.companyTaxID = companyTaxID;
    return this;
  }

  /**
   * Company&#39;s tax identifier. This is only used for eCheck service. 
   * @return companyTaxID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_TAX_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyTaxID() {
    return companyTaxID;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_TAX_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyTaxID(String companyTaxID) {
    this.companyTaxID = companyTaxID;
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation currency(String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Currency used for the order. Use the three-character I[ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)  For an authorization reversal (&#x60;reversalInformation&#x60;) or a capture (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60;), you must use the same currency that you used in your payment authorization request.  #### DCC for First Data Your local currency. For details, see the &#x60;currency&#x60; field description in [Dynamic Currency Conversion For First Data Using the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/DCC_FirstData_SCMP/DCC_FirstData_SCMP_API.pdf). 
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation dateOfBirth(LocalDate dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * Date of birth of the customer. Format: YYYY-MM-DD 
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation personalIdentification(List<PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner> personalIdentification) {
    
    this.personalIdentification = personalIdentification;
    return this;
  }

  public PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation addPersonalIdentificationItem(PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner personalIdentificationItem) {
    if (this.personalIdentification == null) {
      this.personalIdentification = new ArrayList<>();
    }
    this.personalIdentification.add(personalIdentificationItem);
    return this;
  }

  /**
   * Get personalIdentification
   * @return personalIdentification
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner> getPersonalIdentification() {
    return personalIdentification;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalIdentification(List<PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationInner> personalIdentification) {
    this.personalIdentification = personalIdentification;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation postCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation = (PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation) o;
    return Objects.equals(this.companyTaxID, postCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.companyTaxID) &&
        Objects.equals(this.currency, postCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.currency) &&
        Objects.equals(this.dateOfBirth, postCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.dateOfBirth) &&
        Objects.equals(this.personalIdentification, postCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation.personalIdentification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyTaxID, currency, dateOfBirth, personalIdentification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostCustomerRequestEmbeddedDefaultPaymentInstrumentBuyerInformation {\n");
    sb.append("    companyTaxID: ").append(toIndentedString(companyTaxID)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    personalIdentification: ").append(toIndentedString(personalIdentification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

