/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestIssuerInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuthReversalRequestProcessingInformation
 */
@JsonPropertyOrder({
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_PAYMENT_SOLUTION,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_RECONCILIATION_ID,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_LINK_ID,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_REPORT_GROUP,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_VISA_CHECKOUT_ID,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_ISSUER,
  AuthReversalRequestProcessingInformation.JSON_PROPERTY_ACTION_LIST
})
@JsonTypeName("authReversal_request_processingInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class AuthReversalRequestProcessingInformation {
  public static final String JSON_PROPERTY_PAYMENT_SOLUTION = "paymentSolution";
  private String paymentSolution;

  public static final String JSON_PROPERTY_RECONCILIATION_ID = "reconciliationId";
  private String reconciliationId;

  public static final String JSON_PROPERTY_LINK_ID = "linkId";
  private String linkId;

  public static final String JSON_PROPERTY_REPORT_GROUP = "reportGroup";
  private String reportGroup;

  public static final String JSON_PROPERTY_VISA_CHECKOUT_ID = "visaCheckoutId";
  private String visaCheckoutId;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private CreatePaymentRequestIssuerInformation issuer;

  public static final String JSON_PROPERTY_ACTION_LIST = "actionList";
  private List<String> actionList = new ArrayList<>();

  public AuthReversalRequestProcessingInformation() {
  }

  public AuthReversalRequestProcessingInformation paymentSolution(String paymentSolution) {
    
    this.paymentSolution = paymentSolution;
    return this;
  }

  /**
   * Type of digital payment solution for the transaction. Possible Values:   - &#x60;visacheckout&#x60;: Visa Checkout. This value is required for Visa Checkout transactions. For details, see &#x60;payment_solution&#x60; field description in [Visa Checkout Using the REST API.](https://developer.cybersource.com/content/dam/docs/cybs/en-us/apifields/reference/all/rest/api-fields.pdf)  - &#x60;001&#x60;: Apple Pay.  - &#x60;004&#x60;: Cybersource In-App Solution.  - &#x60;005&#x60;: Masterpass. This value is required for Masterpass transactions on OmniPay Direct.   - &#x60;006&#x60;: Android Pay.  - &#x60;007&#x60;: Chase Pay.  - &#x60;008&#x60;: Samsung Pay.  - &#x60;012&#x60;: Google Pay.  - &#x60;013&#x60;: Cybersource P2PE Decryption  - &#x60;014&#x60;: Mastercard credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - &#x60;015&#x60;: Visa credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - &#x60;027&#x60;: Click to Pay. 
   * @return paymentSolution
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_SOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentSolution() {
    return paymentSolution;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_SOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentSolution(String paymentSolution) {
    this.paymentSolution = paymentSolution;
  }

  public AuthReversalRequestProcessingInformation reconciliationId(String reconciliationId) {
    
    this.reconciliationId = reconciliationId;
    return this;
  }

  /**
   * Please check with Cybersource customer support to see if your merchant account is configured correctly so you can include this field in your request. * For Payouts: max length for FDCCompass is String (22). 
   * @return reconciliationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECONCILIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReconciliationId() {
    return reconciliationId;
  }


  @JsonProperty(JSON_PROPERTY_RECONCILIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReconciliationId(String reconciliationId) {
    this.reconciliationId = reconciliationId;
  }

  public AuthReversalRequestProcessingInformation linkId(String linkId) {
    
    this.linkId = linkId;
    return this;
  }

  /**
   * Value that links the current authorization request to the original authorization request. Set this value to the ID that was returned in the reply message from the original authorization request.  This value is used for:  - Partial authorizations - Split shipments 
   * @return linkId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkId() {
    return linkId;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkId(String linkId) {
    this.linkId = linkId;
  }

  public AuthReversalRequestProcessingInformation reportGroup(String reportGroup) {
    
    this.reportGroup = reportGroup;
    return this;
  }

  /**
   * Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**. 
   * @return reportGroup
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportGroup() {
    return reportGroup;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportGroup(String reportGroup) {
    this.reportGroup = reportGroup;
  }

  public AuthReversalRequestProcessingInformation visaCheckoutId(String visaCheckoutId) {
    
    this.visaCheckoutId = visaCheckoutId;
    return this;
  }

  /**
   * Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in the Visa Checkout **callID** field. 
   * @return visaCheckoutId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISA_CHECKOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisaCheckoutId() {
    return visaCheckoutId;
  }


  @JsonProperty(JSON_PROPERTY_VISA_CHECKOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisaCheckoutId(String visaCheckoutId) {
    this.visaCheckoutId = visaCheckoutId;
  }

  public AuthReversalRequestProcessingInformation issuer(CreatePaymentRequestIssuerInformation issuer) {
    
    this.issuer = issuer;
    return this;
  }

  /**
   * Get issuer
   * @return issuer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestIssuerInformation getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(CreatePaymentRequestIssuerInformation issuer) {
    this.issuer = issuer;
  }

  public AuthReversalRequestProcessingInformation actionList(List<String> actionList) {
    
    this.actionList = actionList;
    return this;
  }

  public AuthReversalRequestProcessingInformation addActionListItem(String actionListItem) {
    if (this.actionList == null) {
      this.actionList = new ArrayList<>();
    }
    this.actionList.add(actionListItem);
    return this;
  }

  /**
   * Array of actions (one or more) to be included in the reversal Possible value: - &#x60;AP_AUTH_REVERSAL&#x60;: Use this when you want to reverse an Alternative Payment Authorization. 
   * @return actionList
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getActionList() {
    return actionList;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionList(List<String> actionList) {
    this.actionList = actionList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthReversalRequestProcessingInformation authReversalRequestProcessingInformation = (AuthReversalRequestProcessingInformation) o;
    return Objects.equals(this.paymentSolution, authReversalRequestProcessingInformation.paymentSolution) &&
        Objects.equals(this.reconciliationId, authReversalRequestProcessingInformation.reconciliationId) &&
        Objects.equals(this.linkId, authReversalRequestProcessingInformation.linkId) &&
        Objects.equals(this.reportGroup, authReversalRequestProcessingInformation.reportGroup) &&
        Objects.equals(this.visaCheckoutId, authReversalRequestProcessingInformation.visaCheckoutId) &&
        Objects.equals(this.issuer, authReversalRequestProcessingInformation.issuer) &&
        Objects.equals(this.actionList, authReversalRequestProcessingInformation.actionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentSolution, reconciliationId, linkId, reportGroup, visaCheckoutId, issuer, actionList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthReversalRequestProcessingInformation {\n");
    sb.append("    paymentSolution: ").append(toIndentedString(paymentSolution)).append("\n");
    sb.append("    reconciliationId: ").append(toIndentedString(reconciliationId)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    reportGroup: ").append(toIndentedString(reportGroup)).append("\n");
    sb.append("    visaCheckoutId: ").append(toIndentedString(visaCheckoutId)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    actionList: ").append(toIndentedString(actionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

