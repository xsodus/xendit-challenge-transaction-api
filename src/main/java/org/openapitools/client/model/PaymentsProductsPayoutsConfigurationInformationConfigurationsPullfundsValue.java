/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Formatted as *{payoutsAcquirerName}. The property name field should be the same as the processor name for which the pull funds or push funds feature is being configured. Here is the list of valid processor names [TBD]
 */
@JsonPropertyOrder({
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_ACQUIRER_ORGANIZATION_ID,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_ACQUIRING_B_I_N,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_ALLOW_CRYPTO_CURRENCY_PURCHASE,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_CARD_ACCEPTOR_ID,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_ORIGINATOR_MVV,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_ORIGINATOR_NAME_ABBREVIATION,
  PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.JSON_PROPERTY_CARD_TERMINAL_ID
})
@JsonTypeName("paymentsProducts_payouts_configurationInformation_configurations_pullfunds_value")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue {
  public static final String JSON_PROPERTY_ACQUIRER_ORGANIZATION_ID = "acquirerOrganizationId";
  private String acquirerOrganizationId;

  public static final String JSON_PROPERTY_ACQUIRING_B_I_N = "acquiringBIN";
  private Integer acquiringBIN;

  public static final String JSON_PROPERTY_ALLOW_CRYPTO_CURRENCY_PURCHASE = "allowCryptoCurrencyPurchase";
  private Boolean allowCryptoCurrencyPurchase;

  public static final String JSON_PROPERTY_CARD_ACCEPTOR_ID = "cardAcceptorId";
  private String cardAcceptorId;

  public static final String JSON_PROPERTY_ORIGINATOR_MVV = "originatorMvv";
  private String originatorMvv;

  public static final String JSON_PROPERTY_ORIGINATOR_NAME_ABBREVIATION = "originatorNameAbbreviation";
  private String originatorNameAbbreviation;

  public static final String JSON_PROPERTY_CARD_TERMINAL_ID = "cardTerminalId";
  private String cardTerminalId;

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue() {
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue acquirerOrganizationId(String acquirerOrganizationId) {
    
    this.acquirerOrganizationId = acquirerOrganizationId;
    return this;
  }

  /**
   * Valid organization in OMS with an organizationInformation.type as \&quot;acquirer\&quot;.
   * @return acquirerOrganizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACQUIRER_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcquirerOrganizationId() {
    return acquirerOrganizationId;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerOrganizationId(String acquirerOrganizationId) {
    this.acquirerOrganizationId = acquirerOrganizationId;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue acquiringBIN(Integer acquiringBIN) {
    
    this.acquiringBIN = acquiringBIN;
    return this;
  }

  /**
   * This code identifies the financial institution acting as the acquirer of this transaction. The acquirer is the client or system user that signed the originator or installed the unattended cardholder- activated environment. When a processing center operates for multiple acquirers, this code is for the individual client or system user, not a code for the center.
   * @return acquiringBIN
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACQUIRING_B_I_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAcquiringBIN() {
    return acquiringBIN;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRING_B_I_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcquiringBIN(Integer acquiringBIN) {
    this.acquiringBIN = acquiringBIN;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue allowCryptoCurrencyPurchase(Boolean allowCryptoCurrencyPurchase) {
    
    this.allowCryptoCurrencyPurchase = allowCryptoCurrencyPurchase;
    return this;
  }

  /**
   * This configuration allows a transaction to be flagged for cryptocurrency funds transfer.
   * @return allowCryptoCurrencyPurchase
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_CRYPTO_CURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowCryptoCurrencyPurchase() {
    return allowCryptoCurrencyPurchase;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_CRYPTO_CURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowCryptoCurrencyPurchase(Boolean allowCryptoCurrencyPurchase) {
    this.allowCryptoCurrencyPurchase = allowCryptoCurrencyPurchase;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue cardAcceptorId(String cardAcceptorId) {
    
    this.cardAcceptorId = cardAcceptorId;
    return this;
  }

  /**
   * A unique identifier number for the originator of transfers that is unique to the processor or acquirer.
   * @return cardAcceptorId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCardAcceptorId() {
    return cardAcceptorId;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCardAcceptorId(String cardAcceptorId) {
    this.cardAcceptorId = cardAcceptorId;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue originatorMvv(String originatorMvv) {
    
    this.originatorMvv = originatorMvv;
    return this;
  }

  /**
   * Merchant Verification Value (MVV) is used to identify originators that participate in a variety of programs. The MVV is unique to the merchant.
   * @return originatorMvv
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINATOR_MVV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginatorMvv() {
    return originatorMvv;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINATOR_MVV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginatorMvv(String originatorMvv) {
    this.originatorMvv = originatorMvv;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue originatorNameAbbreviation(String originatorNameAbbreviation) {
    
    this.originatorNameAbbreviation = originatorNameAbbreviation;
    return this;
  }

  /**
   * A 4 character max name abbreviation for the originator.
   * @return originatorNameAbbreviation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINATOR_NAME_ABBREVIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginatorNameAbbreviation() {
    return originatorNameAbbreviation;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINATOR_NAME_ABBREVIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginatorNameAbbreviation(String originatorNameAbbreviation) {
    this.originatorNameAbbreviation = originatorNameAbbreviation;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue cardTerminalId(String cardTerminalId) {
    
    this.cardTerminalId = cardTerminalId;
    return this;
  }

  /**
   * This field contains a code that identifies a terminal at the card acceptor location. This field is used in all messages related to a transaction. If sending transactions from a card not present environment, use the same value for all transactions.
   * @return cardTerminalId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARD_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCardTerminalId() {
    return cardTerminalId;
  }


  @JsonProperty(JSON_PROPERTY_CARD_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCardTerminalId(String cardTerminalId) {
    this.cardTerminalId = cardTerminalId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue = (PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue) o;
    return Objects.equals(this.acquirerOrganizationId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.acquirerOrganizationId) &&
        Objects.equals(this.acquiringBIN, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.acquiringBIN) &&
        Objects.equals(this.allowCryptoCurrencyPurchase, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.allowCryptoCurrencyPurchase) &&
        Objects.equals(this.cardAcceptorId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.cardAcceptorId) &&
        Objects.equals(this.originatorMvv, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.originatorMvv) &&
        Objects.equals(this.originatorNameAbbreviation, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.originatorNameAbbreviation) &&
        Objects.equals(this.cardTerminalId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue.cardTerminalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirerOrganizationId, acquiringBIN, allowCryptoCurrencyPurchase, cardAcceptorId, originatorMvv, originatorNameAbbreviation, cardTerminalId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfundsValue {\n");
    sb.append("    acquirerOrganizationId: ").append(toIndentedString(acquirerOrganizationId)).append("\n");
    sb.append("    acquiringBIN: ").append(toIndentedString(acquiringBIN)).append("\n");
    sb.append("    allowCryptoCurrencyPurchase: ").append(toIndentedString(allowCryptoCurrencyPurchase)).append("\n");
    sb.append("    cardAcceptorId: ").append(toIndentedString(cardAcceptorId)).append("\n");
    sb.append("    originatorMvv: ").append(toIndentedString(originatorMvv)).append("\n");
    sb.append("    originatorNameAbbreviation: ").append(toIndentedString(originatorNameAbbreviation)).append("\n");
    sb.append("    cardTerminalId: ").append(toIndentedString(cardTerminalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

