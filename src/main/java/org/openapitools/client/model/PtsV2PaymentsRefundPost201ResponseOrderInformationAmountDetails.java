/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails
 */
@JsonPropertyOrder({
  PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.JSON_PROPERTY_SETTLEMENT_AMOUNT,
  PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.JSON_PROPERTY_SETTLEMENT_CURRENCY,
  PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.JSON_PROPERTY_EXCHANGE_RATE,
  PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.JSON_PROPERTY_FOREIGN_AMOUNT,
  PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.JSON_PROPERTY_FOREIGN_CURRENCY
})
@JsonTypeName("ptsV2PaymentsRefundPost201Response_orderInformation_amountDetails")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails {
  public static final String JSON_PROPERTY_SETTLEMENT_AMOUNT = "settlementAmount";
  private String settlementAmount;

  public static final String JSON_PROPERTY_SETTLEMENT_CURRENCY = "settlementCurrency";
  private String settlementCurrency;

  public static final String JSON_PROPERTY_EXCHANGE_RATE = "exchangeRate";
  private String exchangeRate;

  public static final String JSON_PROPERTY_FOREIGN_AMOUNT = "foreignAmount";
  private String foreignAmount;

  public static final String JSON_PROPERTY_FOREIGN_CURRENCY = "foreignCurrency";
  private String foreignCurrency;

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails() {
  }

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails settlementAmount(String settlementAmount) {
    
    this.settlementAmount = settlementAmount;
    return this;
  }

  /**
   * This is a multicurrency field. It contains the transaction amount (field 4), converted to the Currency used to bill the cardholder&#39;s account. This field is returned for OCT transactions. 
   * @return settlementAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSettlementAmount() {
    return settlementAmount;
  }


  @JsonProperty(JSON_PROPERTY_SETTLEMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementAmount(String settlementAmount) {
    this.settlementAmount = settlementAmount;
  }

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails settlementCurrency(String settlementCurrency) {
    
    this.settlementCurrency = settlementCurrency;
    return this;
  }

  /**
   * This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer to bill the cardholder&#39;s account. This field is returned for OCT transactions. 
   * @return settlementCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSettlementCurrency() {
    return settlementCurrency;
  }


  @JsonProperty(JSON_PROPERTY_SETTLEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
  }

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails exchangeRate(String exchangeRate) {
    
    this.exchangeRate = exchangeRate;
    return this;
  }

  /**
   * Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places. 
   * @return exchangeRate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeRate() {
    return exchangeRate;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeRate(String exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails foreignAmount(String foreignAmount) {
    
    this.foreignAmount = foreignAmount;
    return this;
  }

  /**
   * Set this field to the converted amount that was returned by the DCC provider. 
   * @return foreignAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignAmount() {
    return foreignAmount;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignAmount(String foreignAmount) {
    this.foreignAmount = foreignAmount;
  }

  public PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails foreignCurrency(String foreignCurrency) {
    
    this.foreignCurrency = foreignCurrency;
    return this;
  }

  /**
   * Set this field to the converted amount that was returned by the DCC provider. 
   * @return foreignCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignCurrency() {
    return foreignCurrency;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignCurrency(String foreignCurrency) {
    this.foreignCurrency = foreignCurrency;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails = (PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails) o;
    return Objects.equals(this.settlementAmount, ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.settlementAmount) &&
        Objects.equals(this.settlementCurrency, ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.settlementCurrency) &&
        Objects.equals(this.exchangeRate, ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.exchangeRate) &&
        Objects.equals(this.foreignAmount, ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.foreignAmount) &&
        Objects.equals(this.foreignCurrency, ptsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails.foreignCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(settlementAmount, settlementCurrency, exchangeRate, foreignAmount, foreignCurrency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsRefundPost201ResponseOrderInformationAmountDetails {\n");
    sb.append("    settlementAmount: ").append(toIndentedString(settlementAmount)).append("\n");
    sb.append("    settlementCurrency: ").append(toIndentedString(settlementCurrency)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    foreignAmount: ").append(toIndentedString(foreignAmount)).append("\n");
    sb.append("    foreignCurrency: ").append(toIndentedString(foreignCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

