/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestBuyerInformationPersonalIdentificationInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CheckPayerAuthEnrollmentRequestBuyerInformation
 */
@JsonPropertyOrder({
  CheckPayerAuthEnrollmentRequestBuyerInformation.JSON_PROPERTY_MERCHANT_CUSTOMER_ID,
  CheckPayerAuthEnrollmentRequestBuyerInformation.JSON_PROPERTY_PERSONAL_IDENTIFICATION,
  CheckPayerAuthEnrollmentRequestBuyerInformation.JSON_PROPERTY_MOBILE_PHONE,
  CheckPayerAuthEnrollmentRequestBuyerInformation.JSON_PROPERTY_WORK_PHONE
})
@JsonTypeName("checkPayerAuthEnrollment_request_buyerInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CheckPayerAuthEnrollmentRequestBuyerInformation {
  public static final String JSON_PROPERTY_MERCHANT_CUSTOMER_ID = "merchantCustomerId";
  private String merchantCustomerId;

  public static final String JSON_PROPERTY_PERSONAL_IDENTIFICATION = "personalIdentification";
  private List<CreatePaymentRequestBuyerInformationPersonalIdentificationInner> personalIdentification = new ArrayList<>();

  public static final String JSON_PROPERTY_MOBILE_PHONE = "mobilePhone";
  private Integer mobilePhone;

  public static final String JSON_PROPERTY_WORK_PHONE = "workPhone";
  private Integer workPhone;

  public CheckPayerAuthEnrollmentRequestBuyerInformation() {
  }

  public CheckPayerAuthEnrollmentRequestBuyerInformation merchantCustomerId(String merchantCustomerId) {
    
    this.merchantCustomerId = merchantCustomerId;
    return this;
  }

  /**
   * Your identifier for the customer.  When a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.  #### Comercio Latino For recurring payments in Mexico, the value is the customer&#39;s contract number. Note Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.  #### Worldpay VAP For a follow-on credit with Worldpay VAP, CyberSource checks the following locations, in the order given, for a customer account ID value and uses the first value it finds: 1. &#x60;customer_account_id&#x60; value in the follow-on credit request 2. Customer account ID value that was used for the capture that is being credited 3. Customer account ID value that was used for the original authorization If a customer account ID value cannot be found in any of these locations, then no value is used. 
   * @return merchantCustomerId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantCustomerId() {
    return merchantCustomerId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantCustomerId(String merchantCustomerId) {
    this.merchantCustomerId = merchantCustomerId;
  }

  public CheckPayerAuthEnrollmentRequestBuyerInformation personalIdentification(List<CreatePaymentRequestBuyerInformationPersonalIdentificationInner> personalIdentification) {
    
    this.personalIdentification = personalIdentification;
    return this;
  }

  public CheckPayerAuthEnrollmentRequestBuyerInformation addPersonalIdentificationItem(CreatePaymentRequestBuyerInformationPersonalIdentificationInner personalIdentificationItem) {
    if (this.personalIdentification == null) {
      this.personalIdentification = new ArrayList<>();
    }
    this.personalIdentification.add(personalIdentificationItem);
    return this;
  }

  /**
   * This array contains detailed information about the buyer&#39;s form of persoanl identification.
   * @return personalIdentification
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreatePaymentRequestBuyerInformationPersonalIdentificationInner> getPersonalIdentification() {
    return personalIdentification;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalIdentification(List<CreatePaymentRequestBuyerInformationPersonalIdentificationInner> personalIdentification) {
    this.personalIdentification = personalIdentification;
  }

  public CheckPayerAuthEnrollmentRequestBuyerInformation mobilePhone(Integer mobilePhone) {
    
    this.mobilePhone = mobilePhone;
    return this;
  }

  /**
   * Cardholder&#39;s mobile phone number. **Important** Required for Visa Secure transactions in Brazil. Do not use this request field for any other types of transactions. 
   * @return mobilePhone
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMobilePhone() {
    return mobilePhone;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMobilePhone(Integer mobilePhone) {
    this.mobilePhone = mobilePhone;
  }

  public CheckPayerAuthEnrollmentRequestBuyerInformation workPhone(Integer workPhone) {
    
    this.workPhone = workPhone;
    return this;
  }

  /**
   * Cardholder&#39;s work phone number.
   * @return workPhone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORK_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWorkPhone() {
    return workPhone;
  }


  @JsonProperty(JSON_PROPERTY_WORK_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkPhone(Integer workPhone) {
    this.workPhone = workPhone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckPayerAuthEnrollmentRequestBuyerInformation checkPayerAuthEnrollmentRequestBuyerInformation = (CheckPayerAuthEnrollmentRequestBuyerInformation) o;
    return Objects.equals(this.merchantCustomerId, checkPayerAuthEnrollmentRequestBuyerInformation.merchantCustomerId) &&
        Objects.equals(this.personalIdentification, checkPayerAuthEnrollmentRequestBuyerInformation.personalIdentification) &&
        Objects.equals(this.mobilePhone, checkPayerAuthEnrollmentRequestBuyerInformation.mobilePhone) &&
        Objects.equals(this.workPhone, checkPayerAuthEnrollmentRequestBuyerInformation.workPhone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantCustomerId, personalIdentification, mobilePhone, workPhone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckPayerAuthEnrollmentRequestBuyerInformation {\n");
    sb.append("    merchantCustomerId: ").append(toIndentedString(merchantCustomerId)).append("\n");
    sb.append("    personalIdentification: ").append(toIndentedString(personalIdentification)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

