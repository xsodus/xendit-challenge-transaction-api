/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestOrderInformationInvoiceDetails
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_INVOICE_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_BARCODE_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_EXPIRATION_DATE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_ORDER_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_ORDER_DATE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_CONTACT_NAME,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_TAXABLE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_COMMODITY_CODE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_MERCHANDISE_CODE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_REFERENCE_DATA_CODE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_REFERENCE_DATA_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_SALES_SLIP_NUMBER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_INVOICE_DATE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_COST_CENTER,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_ISSUER_MESSAGE,
  CreatePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PRODUCT_DESCRIPTION
})
@JsonTypeName("createPayment_request_orderInformation_invoiceDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformationInvoiceDetails {
  public static final String JSON_PROPERTY_INVOICE_NUMBER = "invoiceNumber";
  private String invoiceNumber;

  public static final String JSON_PROPERTY_BARCODE_NUMBER = "barcodeNumber";
  private String barcodeNumber;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private String expirationDate;

  public static final String JSON_PROPERTY_PURCHASE_ORDER_NUMBER = "purchaseOrderNumber";
  private String purchaseOrderNumber;

  public static final String JSON_PROPERTY_PURCHASE_ORDER_DATE = "purchaseOrderDate";
  private String purchaseOrderDate;

  public static final String JSON_PROPERTY_PURCHASE_CONTACT_NAME = "purchaseContactName";
  private String purchaseContactName;

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  private Boolean taxable;

  public static final String JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER = "vatInvoiceReferenceNumber";
  private String vatInvoiceReferenceNumber;

  public static final String JSON_PROPERTY_COMMODITY_CODE = "commodityCode";
  private String commodityCode;

  public static final String JSON_PROPERTY_MERCHANDISE_CODE = "merchandiseCode";
  private Integer merchandiseCode;

  public static final String JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM = "transactionAdviceAddendum";
  private List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum = new ArrayList<>();

  public static final String JSON_PROPERTY_REFERENCE_DATA_CODE = "referenceDataCode";
  private String referenceDataCode;

  public static final String JSON_PROPERTY_REFERENCE_DATA_NUMBER = "referenceDataNumber";
  private String referenceDataNumber;

  public static final String JSON_PROPERTY_SALES_SLIP_NUMBER = "salesSlipNumber";
  private Integer salesSlipNumber;

  public static final String JSON_PROPERTY_INVOICE_DATE = "invoiceDate";
  private String invoiceDate;

  public static final String JSON_PROPERTY_COST_CENTER = "costCenter";
  private String costCenter;

  public static final String JSON_PROPERTY_ISSUER_MESSAGE = "issuerMessage";
  private String issuerMessage;

  public static final String JSON_PROPERTY_PRODUCT_DESCRIPTION = "productDescription";
  private String productDescription;

  public CreatePaymentRequestOrderInformationInvoiceDetails() {
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails invoiceNumber(String invoiceNumber) {
    
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Invoice Number.
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceNumber() {
    return invoiceNumber;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails barcodeNumber(String barcodeNumber) {
    
    this.barcodeNumber = barcodeNumber;
    return this;
  }

  /**
   * Barcode Number.
   * @return barcodeNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BARCODE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBarcodeNumber() {
    return barcodeNumber;
  }


  @JsonProperty(JSON_PROPERTY_BARCODE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBarcodeNumber(String barcodeNumber) {
    this.barcodeNumber = barcodeNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails expirationDate(String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

  /**
   * Expiration Date.
   * @return expirationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails purchaseOrderNumber(String purchaseOrderNumber) {
    
    this.purchaseOrderNumber = purchaseOrderNumber;
    return this;
  }

  /**
   * Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource recommends that you do not populate the field with all zeros or nines. 
   * @return purchaseOrderNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseOrderNumber() {
    return purchaseOrderNumber;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails purchaseOrderDate(String purchaseOrderDate) {
    
    this.purchaseOrderDate = purchaseOrderDate;
    return this;
  }

  /**
   * Date the order was processed. &#x60;Format: YYYY-MM-DD&#x60;. 
   * @return purchaseOrderDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseOrderDate() {
    return purchaseOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseOrderDate(String purchaseOrderDate) {
    this.purchaseOrderDate = purchaseOrderDate;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails purchaseContactName(String purchaseContactName) {
    
    this.purchaseContactName = purchaseContactName;
    return this;
  }

  /**
   * The name of the individual or the company contacted for company authorized purchases. 
   * @return purchaseContactName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_CONTACT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseContactName() {
    return purchaseContactName;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_CONTACT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseContactName(String purchaseContactName) {
    this.purchaseContactName = purchaseContactName;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails taxable(Boolean taxable) {
    
    this.taxable = taxable;
    return this;
  }

  /**
   * Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values &gt; 0.  If you do not include any &#x60;lineItems[].taxAmount&#x60; values in your request, CyberSource does not include &#x60;invoiceDetails.taxable&#x60; in the data it sends to the processor.  Possible values:  - **true**  - **false** 
   * @return taxable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails vatInvoiceReferenceNumber(String vatInvoiceReferenceNumber) {
    
    this.vatInvoiceReferenceNumber = vatInvoiceReferenceNumber;
    return this;
  }

  /**
   * VAT invoice number associated with the transaction. 
   * @return vatInvoiceReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVatInvoiceReferenceNumber() {
    return vatInvoiceReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatInvoiceReferenceNumber(String vatInvoiceReferenceNumber) {
    this.vatInvoiceReferenceNumber = vatInvoiceReferenceNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails commodityCode(String commodityCode) {
    
    this.commodityCode = commodityCode;
    return this;
  }

  /**
   * International description code of the overall order&#39;s goods or services or the Categorizes purchases for VAT reporting. Contact your acquirer for a list of codes. 
   * @return commodityCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMODITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommodityCode() {
    return commodityCode;
  }


  @JsonProperty(JSON_PROPERTY_COMMODITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommodityCode(String commodityCode) {
    this.commodityCode = commodityCode;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails merchandiseCode(Integer merchandiseCode) {
    
    this.merchandiseCode = merchandiseCode;
    return this;
  }

  /**
   * Identifier for the merchandise. This field is supported only on the processors listed in this field description.  #### American Express Direct Possible value: - 1000: Gift card  #### CyberSource through VisaNet This value must be right justified. In Japan, this value is called a _goods code_.  #### JCN Gateway This value must be right justified. In Japan, this value is called a _goods code_. 
   * @return merchandiseCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANDISE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMerchandiseCode() {
    return merchandiseCode;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANDISE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchandiseCode(Integer merchandiseCode) {
    this.merchandiseCode = merchandiseCode;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails transactionAdviceAddendum(List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum) {
    
    this.transactionAdviceAddendum = transactionAdviceAddendum;
    return this;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails addTransactionAdviceAddendumItem(CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner transactionAdviceAddendumItem) {
    if (this.transactionAdviceAddendum == null) {
      this.transactionAdviceAddendum = new ArrayList<>();
    }
    this.transactionAdviceAddendum.add(transactionAdviceAddendumItem);
    return this;
  }

  /**
   * Get transactionAdviceAddendum
   * @return transactionAdviceAddendum
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> getTransactionAdviceAddendum() {
    return transactionAdviceAddendum;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionAdviceAddendum(List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum) {
    this.transactionAdviceAddendum = transactionAdviceAddendum;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails referenceDataCode(String referenceDataCode) {
    
    this.referenceDataCode = referenceDataCode;
    return this;
  }

  /**
   * Code that identifies the value of the &#x60;referenceDataNumber&#x60; field.  This field is a pass-through, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. 
   * @return referenceDataCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_DATA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceDataCode() {
    return referenceDataCode;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_DATA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceDataCode(String referenceDataCode) {
    this.referenceDataCode = referenceDataCode;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails referenceDataNumber(String referenceDataNumber) {
    
    this.referenceDataNumber = referenceDataNumber;
    return this;
  }

  /**
   * Reference number. The meaning of this value is identified by the value of the &#x60;referenceDataCode&#x60; field.  This field is a pass-through, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. 
   * @return referenceDataNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_DATA_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceDataNumber() {
    return referenceDataNumber;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_DATA_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceDataNumber(String referenceDataNumber) {
    this.referenceDataNumber = referenceDataNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails salesSlipNumber(Integer salesSlipNumber) {
    
    this.salesSlipNumber = salesSlipNumber;
    return this;
  }

  /**
   * Transaction identifier that is generated. You have the option of printing the sales slip number on the receipt. This field is supported only on Cybersource through Visanet and JCN gateway.  Optional field.  #### Card Present processing message If you included this field in the request, the returned value is the value that you sent in the request. If you did not include this field in the request, the system generated this value for you.  The difference between this reply field and the &#x60;processorInformation.systemTraceAuditNumber&#x60; field is that the system generates the system trace audit number (STAN), and you must print the receipt number on the receipt; whereas you can generate the sales slip number, and you can choose to print the sales slip number on the receipt. 
   * maximum: 99999
   * @return salesSlipNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALES_SLIP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSalesSlipNumber() {
    return salesSlipNumber;
  }


  @JsonProperty(JSON_PROPERTY_SALES_SLIP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesSlipNumber(Integer salesSlipNumber) {
    this.salesSlipNumber = salesSlipNumber;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails invoiceDate(String invoiceDate) {
    
    this.invoiceDate = invoiceDate;
    return this;
  }

  /**
   * Date of the tax calculation. Use format YYYYMMDD. You can provide a date in the past if you are calculating tax for a refund and want to know what the tax was on the date the order was placed. You can provide a date in the future if you are calculating the tax for a future date, such as an upcoming tax holiday.  The default is the date, in Pacific time, that the bank receives the request. Keep this in mind if you are in a different time zone and want the tax calculated with the rates that are applicable on a specific date.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. 
   * @return invoiceDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceDate() {
    return invoiceDate;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceDate(String invoiceDate) {
    this.invoiceDate = invoiceDate;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails costCenter(String costCenter) {
    
    this.costCenter = costCenter;
    return this;
  }

  /**
   * Cost centre of the merchant
   * @return costCenter
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COST_CENTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCostCenter() {
    return costCenter;
  }


  @JsonProperty(JSON_PROPERTY_COST_CENTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostCenter(String costCenter) {
    this.costCenter = costCenter;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails issuerMessage(String issuerMessage) {
    
    this.issuerMessage = issuerMessage;
    return this;
  }

  /**
   * Text message from the issuer. If you give the customer a receipt, display this value on the receipt.
   * @return issuerMessage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerMessage() {
    return issuerMessage;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerMessage(String issuerMessage) {
    this.issuerMessage = issuerMessage;
  }

  public CreatePaymentRequestOrderInformationInvoiceDetails productDescription(String productDescription) {
    
    this.productDescription = productDescription;
    return this;
  }

  /**
   * Brief description of item.
   * @return productDescription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductDescription() {
    return productDescription;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductDescription(String productDescription) {
    this.productDescription = productDescription;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformationInvoiceDetails createPaymentRequestOrderInformationInvoiceDetails = (CreatePaymentRequestOrderInformationInvoiceDetails) o;
    return Objects.equals(this.invoiceNumber, createPaymentRequestOrderInformationInvoiceDetails.invoiceNumber) &&
        Objects.equals(this.barcodeNumber, createPaymentRequestOrderInformationInvoiceDetails.barcodeNumber) &&
        Objects.equals(this.expirationDate, createPaymentRequestOrderInformationInvoiceDetails.expirationDate) &&
        Objects.equals(this.purchaseOrderNumber, createPaymentRequestOrderInformationInvoiceDetails.purchaseOrderNumber) &&
        Objects.equals(this.purchaseOrderDate, createPaymentRequestOrderInformationInvoiceDetails.purchaseOrderDate) &&
        Objects.equals(this.purchaseContactName, createPaymentRequestOrderInformationInvoiceDetails.purchaseContactName) &&
        Objects.equals(this.taxable, createPaymentRequestOrderInformationInvoiceDetails.taxable) &&
        Objects.equals(this.vatInvoiceReferenceNumber, createPaymentRequestOrderInformationInvoiceDetails.vatInvoiceReferenceNumber) &&
        Objects.equals(this.commodityCode, createPaymentRequestOrderInformationInvoiceDetails.commodityCode) &&
        Objects.equals(this.merchandiseCode, createPaymentRequestOrderInformationInvoiceDetails.merchandiseCode) &&
        Objects.equals(this.transactionAdviceAddendum, createPaymentRequestOrderInformationInvoiceDetails.transactionAdviceAddendum) &&
        Objects.equals(this.referenceDataCode, createPaymentRequestOrderInformationInvoiceDetails.referenceDataCode) &&
        Objects.equals(this.referenceDataNumber, createPaymentRequestOrderInformationInvoiceDetails.referenceDataNumber) &&
        Objects.equals(this.salesSlipNumber, createPaymentRequestOrderInformationInvoiceDetails.salesSlipNumber) &&
        Objects.equals(this.invoiceDate, createPaymentRequestOrderInformationInvoiceDetails.invoiceDate) &&
        Objects.equals(this.costCenter, createPaymentRequestOrderInformationInvoiceDetails.costCenter) &&
        Objects.equals(this.issuerMessage, createPaymentRequestOrderInformationInvoiceDetails.issuerMessage) &&
        Objects.equals(this.productDescription, createPaymentRequestOrderInformationInvoiceDetails.productDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceNumber, barcodeNumber, expirationDate, purchaseOrderNumber, purchaseOrderDate, purchaseContactName, taxable, vatInvoiceReferenceNumber, commodityCode, merchandiseCode, transactionAdviceAddendum, referenceDataCode, referenceDataNumber, salesSlipNumber, invoiceDate, costCenter, issuerMessage, productDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformationInvoiceDetails {\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    barcodeNumber: ").append(toIndentedString(barcodeNumber)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    purchaseOrderNumber: ").append(toIndentedString(purchaseOrderNumber)).append("\n");
    sb.append("    purchaseOrderDate: ").append(toIndentedString(purchaseOrderDate)).append("\n");
    sb.append("    purchaseContactName: ").append(toIndentedString(purchaseContactName)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    vatInvoiceReferenceNumber: ").append(toIndentedString(vatInvoiceReferenceNumber)).append("\n");
    sb.append("    commodityCode: ").append(toIndentedString(commodityCode)).append("\n");
    sb.append("    merchandiseCode: ").append(toIndentedString(merchandiseCode)).append("\n");
    sb.append("    transactionAdviceAddendum: ").append(toIndentedString(transactionAdviceAddendum)).append("\n");
    sb.append("    referenceDataCode: ").append(toIndentedString(referenceDataCode)).append("\n");
    sb.append("    referenceDataNumber: ").append(toIndentedString(referenceDataNumber)).append("\n");
    sb.append("    salesSlipNumber: ").append(toIndentedString(salesSlipNumber)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    issuerMessage: ").append(toIndentedString(issuerMessage)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

