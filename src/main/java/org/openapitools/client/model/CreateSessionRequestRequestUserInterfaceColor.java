/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSessionRequestRequestUserInterfaceColor
 */
@JsonPropertyOrder({
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_BORDER,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_BORDER_SELECTED,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_BUTTON,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_BUTTON_TEXT,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_CHECKBOX,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_CHECKBOX_CHECK_MARK,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_HEADER,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_LINK,
  CreateSessionRequestRequestUserInterfaceColor.JSON_PROPERTY_TEXT
})
@JsonTypeName("CreateSessionRequest_request_userInterface_color")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateSessionRequestRequestUserInterfaceColor {
  public static final String JSON_PROPERTY_BORDER = "border";
  private String border;

  public static final String JSON_PROPERTY_BORDER_SELECTED = "borderSelected";
  private String borderSelected;

  public static final String JSON_PROPERTY_BUTTON = "button";
  private String button;

  public static final String JSON_PROPERTY_BUTTON_TEXT = "buttonText";
  private String buttonText;

  public static final String JSON_PROPERTY_CHECKBOX = "checkbox";
  private String checkbox;

  public static final String JSON_PROPERTY_CHECKBOX_CHECK_MARK = "checkboxCheckMark";
  private String checkboxCheckMark;

  public static final String JSON_PROPERTY_HEADER = "header";
  private String header;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public CreateSessionRequestRequestUserInterfaceColor() {
  }

  public CreateSessionRequestRequestUserInterfaceColor border(String border) {
    
    this.border = border;
    return this;
  }

  /**
   * Border Color 
   * @return border
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBorder() {
    return border;
  }


  @JsonProperty(JSON_PROPERTY_BORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBorder(String border) {
    this.border = border;
  }

  public CreateSessionRequestRequestUserInterfaceColor borderSelected(String borderSelected) {
    
    this.borderSelected = borderSelected;
    return this;
  }

  /**
   * Selected Border Color 
   * @return borderSelected
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BORDER_SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBorderSelected() {
    return borderSelected;
  }


  @JsonProperty(JSON_PROPERTY_BORDER_SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBorderSelected(String borderSelected) {
    this.borderSelected = borderSelected;
  }

  public CreateSessionRequestRequestUserInterfaceColor button(String button) {
    
    this.button = button;
    return this;
  }

  /**
   * Button Color 
   * @return button
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUTTON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getButton() {
    return button;
  }


  @JsonProperty(JSON_PROPERTY_BUTTON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setButton(String button) {
    this.button = button;
  }

  public CreateSessionRequestRequestUserInterfaceColor buttonText(String buttonText) {
    
    this.buttonText = buttonText;
    return this;
  }

  /**
   * Button Text Color 
   * @return buttonText
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUTTON_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getButtonText() {
    return buttonText;
  }


  @JsonProperty(JSON_PROPERTY_BUTTON_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setButtonText(String buttonText) {
    this.buttonText = buttonText;
  }

  public CreateSessionRequestRequestUserInterfaceColor checkbox(String checkbox) {
    
    this.checkbox = checkbox;
    return this;
  }

  /**
   * Checkbox Color 
   * @return checkbox
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECKBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckbox() {
    return checkbox;
  }


  @JsonProperty(JSON_PROPERTY_CHECKBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckbox(String checkbox) {
    this.checkbox = checkbox;
  }

  public CreateSessionRequestRequestUserInterfaceColor checkboxCheckMark(String checkboxCheckMark) {
    
    this.checkboxCheckMark = checkboxCheckMark;
    return this;
  }

  /**
   * Checkbox Checkmark Color 
   * @return checkboxCheckMark
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECKBOX_CHECK_MARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckboxCheckMark() {
    return checkboxCheckMark;
  }


  @JsonProperty(JSON_PROPERTY_CHECKBOX_CHECK_MARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckboxCheckMark(String checkboxCheckMark) {
    this.checkboxCheckMark = checkboxCheckMark;
  }

  public CreateSessionRequestRequestUserInterfaceColor header(String header) {
    
    this.header = header;
    return this;
  }

  /**
   * Header Color 
   * @return header
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeader() {
    return header;
  }


  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeader(String header) {
    this.header = header;
  }

  public CreateSessionRequestRequestUserInterfaceColor link(String link) {
    
    this.link = link;
    return this;
  }

  /**
   * Link Color 
   * @return link
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(String link) {
    this.link = link;
  }

  public CreateSessionRequestRequestUserInterfaceColor text(String text) {
    
    this.text = text;
    return this;
  }

  /**
   * Text Color 
   * @return text
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSessionRequestRequestUserInterfaceColor createSessionRequestRequestUserInterfaceColor = (CreateSessionRequestRequestUserInterfaceColor) o;
    return Objects.equals(this.border, createSessionRequestRequestUserInterfaceColor.border) &&
        Objects.equals(this.borderSelected, createSessionRequestRequestUserInterfaceColor.borderSelected) &&
        Objects.equals(this.button, createSessionRequestRequestUserInterfaceColor.button) &&
        Objects.equals(this.buttonText, createSessionRequestRequestUserInterfaceColor.buttonText) &&
        Objects.equals(this.checkbox, createSessionRequestRequestUserInterfaceColor.checkbox) &&
        Objects.equals(this.checkboxCheckMark, createSessionRequestRequestUserInterfaceColor.checkboxCheckMark) &&
        Objects.equals(this.header, createSessionRequestRequestUserInterfaceColor.header) &&
        Objects.equals(this.link, createSessionRequestRequestUserInterfaceColor.link) &&
        Objects.equals(this.text, createSessionRequestRequestUserInterfaceColor.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(border, borderSelected, button, buttonText, checkbox, checkboxCheckMark, header, link, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSessionRequestRequestUserInterfaceColor {\n");
    sb.append("    border: ").append(toIndentedString(border)).append("\n");
    sb.append("    borderSelected: ").append(toIndentedString(borderSelected)).append("\n");
    sb.append("    button: ").append(toIndentedString(button)).append("\n");
    sb.append("    buttonText: ").append(toIndentedString(buttonText)).append("\n");
    sb.append("    checkbox: ").append(toIndentedString(checkbox)).append("\n");
    sb.append("    checkboxCheckMark: ").append(toIndentedString(checkboxCheckMark)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

