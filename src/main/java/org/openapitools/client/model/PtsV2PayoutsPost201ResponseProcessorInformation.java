/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PayoutsPost201ResponseProcessorInformation
 */
@JsonPropertyOrder({
  PtsV2PayoutsPost201ResponseProcessorInformation.JSON_PROPERTY_APPROVAL_CODE,
  PtsV2PayoutsPost201ResponseProcessorInformation.JSON_PROPERTY_RESPONSE_CODE,
  PtsV2PayoutsPost201ResponseProcessorInformation.JSON_PROPERTY_TRANSACTION_ID,
  PtsV2PayoutsPost201ResponseProcessorInformation.JSON_PROPERTY_SYSTEM_TRACE_AUDIT_NUMBER,
  PtsV2PayoutsPost201ResponseProcessorInformation.JSON_PROPERTY_RESPONSE_CODE_SOURCE
})
@JsonTypeName("ptsV2PayoutsPost201Response_processorInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PayoutsPost201ResponseProcessorInformation {
  public static final String JSON_PROPERTY_APPROVAL_CODE = "approvalCode";
  private String approvalCode;

  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  private String responseCode;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_SYSTEM_TRACE_AUDIT_NUMBER = "systemTraceAuditNumber";
  private String systemTraceAuditNumber;

  public static final String JSON_PROPERTY_RESPONSE_CODE_SOURCE = "responseCodeSource";
  private String responseCodeSource;

  public PtsV2PayoutsPost201ResponseProcessorInformation() {
  }

  public PtsV2PayoutsPost201ResponseProcessorInformation approvalCode(String approvalCode) {
    
    this.approvalCode = approvalCode;
    return this;
  }

  /**
   * Issuer-generated approval code for the transaction.
   * @return approvalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApprovalCode() {
    return approvalCode;
  }


  @JsonProperty(JSON_PROPERTY_APPROVAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovalCode(String approvalCode) {
    this.approvalCode = approvalCode;
  }

  public PtsV2PayoutsPost201ResponseProcessorInformation responseCode(String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * Transaction status from the processor.
   * @return responseCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseCode(String responseCode) {
    this.responseCode = responseCode;
  }

  public PtsV2PayoutsPost201ResponseProcessorInformation transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Network transaction identifier (TID). This value can be used to identify a specific transaction when you are discussing the transaction with your processor. 
   * @return transactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public PtsV2PayoutsPost201ResponseProcessorInformation systemTraceAuditNumber(String systemTraceAuditNumber) {
    
    this.systemTraceAuditNumber = systemTraceAuditNumber;
    return this;
  }

  /**
   * This field is returned only for **American Express Direct** and **CyberSource through VisaNet**. Returned by authorization and incremental authorization services.  #### American Express Direct  System trace audit number (STAN). This value identifies the transaction and is useful when investigating a chargeback dispute.  #### CyberSource through VisaNet  System trace number that must be printed on the customer&#39;s receipt. 
   * @return systemTraceAuditNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYSTEM_TRACE_AUDIT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSystemTraceAuditNumber() {
    return systemTraceAuditNumber;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEM_TRACE_AUDIT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystemTraceAuditNumber(String systemTraceAuditNumber) {
    this.systemTraceAuditNumber = systemTraceAuditNumber;
  }

  public PtsV2PayoutsPost201ResponseProcessorInformation responseCodeSource(String responseCodeSource) {
    
    this.responseCodeSource = responseCodeSource;
    return this;
  }

  /**
   * Used by Visa only and contains the response source/reason code that identifies the source of the response decision. 
   * @return responseCodeSource
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseCodeSource() {
    return responseCodeSource;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseCodeSource(String responseCodeSource) {
    this.responseCodeSource = responseCodeSource;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PayoutsPost201ResponseProcessorInformation ptsV2PayoutsPost201ResponseProcessorInformation = (PtsV2PayoutsPost201ResponseProcessorInformation) o;
    return Objects.equals(this.approvalCode, ptsV2PayoutsPost201ResponseProcessorInformation.approvalCode) &&
        Objects.equals(this.responseCode, ptsV2PayoutsPost201ResponseProcessorInformation.responseCode) &&
        Objects.equals(this.transactionId, ptsV2PayoutsPost201ResponseProcessorInformation.transactionId) &&
        Objects.equals(this.systemTraceAuditNumber, ptsV2PayoutsPost201ResponseProcessorInformation.systemTraceAuditNumber) &&
        Objects.equals(this.responseCodeSource, ptsV2PayoutsPost201ResponseProcessorInformation.responseCodeSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvalCode, responseCode, transactionId, systemTraceAuditNumber, responseCodeSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PayoutsPost201ResponseProcessorInformation {\n");
    sb.append("    approvalCode: ").append(toIndentedString(approvalCode)).append("\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    systemTraceAuditNumber: ").append(toIndentedString(systemTraceAuditNumber)).append("\n");
    sb.append("    responseCodeSource: ").append(toIndentedString(responseCodeSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

