/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsRegistrationRequestConsumerAuthenticationInformation
 */
@JsonPropertyOrder({
  BillingAgreementsRegistrationRequestConsumerAuthenticationInformation.JSON_PROPERTY_AUTHENTICATION_TRANSACTION_CONTEXT_ID,
  BillingAgreementsRegistrationRequestConsumerAuthenticationInformation.JSON_PROPERTY_CAVV,
  BillingAgreementsRegistrationRequestConsumerAuthenticationInformation.JSON_PROPERTY_TRANSACTION_TOKEN,
  BillingAgreementsRegistrationRequestConsumerAuthenticationInformation.JSON_PROPERTY_XID
})
@JsonTypeName("billingAgreementsRegistration_request_consumerAuthenticationInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsRegistrationRequestConsumerAuthenticationInformation {
  public static final String JSON_PROPERTY_AUTHENTICATION_TRANSACTION_CONTEXT_ID = "authenticationTransactionContextId";
  private String authenticationTransactionContextId;

  public static final String JSON_PROPERTY_CAVV = "cavv";
  private String cavv;

  public static final String JSON_PROPERTY_TRANSACTION_TOKEN = "transactionToken";
  private String transactionToken;

  public static final String JSON_PROPERTY_XID = "xid";
  private String xid;

  public BillingAgreementsRegistrationRequestConsumerAuthenticationInformation() {
  }

  public BillingAgreementsRegistrationRequestConsumerAuthenticationInformation authenticationTransactionContextId(String authenticationTransactionContextId) {
    
    this.authenticationTransactionContextId = authenticationTransactionContextId;
    return this;
  }

  /**
   * Payer authentication transaction identifier passed to link the validation and authorization calls. 
   * @return authenticationTransactionContextId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TRANSACTION_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticationTransactionContextId() {
    return authenticationTransactionContextId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TRANSACTION_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationTransactionContextId(String authenticationTransactionContextId) {
    this.authenticationTransactionContextId = authenticationTransactionContextId;
  }

  public BillingAgreementsRegistrationRequestConsumerAuthenticationInformation cavv(String cavv) {
    
    this.cavv = cavv;
    return this;
  }

  /**
   * Unique identifier generated by the card-issuing bank for Visa, American Express, JCB, Diners Club, and Discover transactions after the customer is authenticated. The value is in base64. When you request the card authorization service, CyberSource automatically converts the value, not the field name, to the format required by your payment processor. 
   * @return cavv
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAVV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCavv() {
    return cavv;
  }


  @JsonProperty(JSON_PROPERTY_CAVV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCavv(String cavv) {
    this.cavv = cavv;
  }

  public BillingAgreementsRegistrationRequestConsumerAuthenticationInformation transactionToken(String transactionToken) {
    
    this.transactionToken = transactionToken;
    return this;
  }

  /**
   * Web based token used to authenticate consumer with Rupay authentication provider. 
   * @return transactionToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionToken() {
    return transactionToken;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionToken(String transactionToken) {
    this.transactionToken = transactionToken;
  }

  public BillingAgreementsRegistrationRequestConsumerAuthenticationInformation xid(String xid) {
    
    this.xid = xid;
    return this;
  }

  /**
   * Transaction identifier generated by CyberSource for successful enrollment or validation checks. Use this value, which is in base64, to match an outgoing PAReq with an incoming PARes. CyberSource forwards the XID with the card authorization service to these payment processors in these cases: - Barclays - Streamline (when the **ecommerceIndicator**&#x60;&#x3D;spa&#x60;) 
   * @return xid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_XID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getXid() {
    return xid;
  }


  @JsonProperty(JSON_PROPERTY_XID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXid(String xid) {
    this.xid = xid;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsRegistrationRequestConsumerAuthenticationInformation billingAgreementsRegistrationRequestConsumerAuthenticationInformation = (BillingAgreementsRegistrationRequestConsumerAuthenticationInformation) o;
    return Objects.equals(this.authenticationTransactionContextId, billingAgreementsRegistrationRequestConsumerAuthenticationInformation.authenticationTransactionContextId) &&
        Objects.equals(this.cavv, billingAgreementsRegistrationRequestConsumerAuthenticationInformation.cavv) &&
        Objects.equals(this.transactionToken, billingAgreementsRegistrationRequestConsumerAuthenticationInformation.transactionToken) &&
        Objects.equals(this.xid, billingAgreementsRegistrationRequestConsumerAuthenticationInformation.xid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticationTransactionContextId, cavv, transactionToken, xid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsRegistrationRequestConsumerAuthenticationInformation {\n");
    sb.append("    authenticationTransactionContextId: ").append(toIndentedString(authenticationTransactionContextId)).append("\n");
    sb.append("    cavv: ").append(toIndentedString(cavv)).append("\n");
    sb.append("    transactionToken: ").append(toIndentedString(transactionToken)).append("\n");
    sb.append("    xid: ").append(toIndentedString(xid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

