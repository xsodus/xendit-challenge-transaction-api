/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestPaymentInformationEWallet
 */
@JsonPropertyOrder({
  CreatePaymentRequestPaymentInformationEWallet.JSON_PROPERTY_ACCOUNT_ID,
  CreatePaymentRequestPaymentInformationEWallet.JSON_PROPERTY_FUNDING_SOURCE
})
@JsonTypeName("createPayment_request_paymentInformation_eWallet")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestPaymentInformationEWallet {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_FUNDING_SOURCE = "fundingSource";
  private String fundingSource;

  public CreatePaymentRequestPaymentInformationEWallet() {
  }

  public CreatePaymentRequestPaymentInformationEWallet accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

  /**
   * The ID of the customer, passed in the return_url field by PayPal after customer approval.
   * @return accountId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CreatePaymentRequestPaymentInformationEWallet fundingSource(String fundingSource) {
    
    this.fundingSource = fundingSource;
    return this;
  }

  /**
   * Payment method for the unit purchase. Possible values: - &#x60;UNRESTRICTED (default)â€”this value is only available if configured by PayPal for the merchant.&#x60; - &#x60;INSTANT&#x60; 
   * @return fundingSource
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNDING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFundingSource() {
    return fundingSource;
  }


  @JsonProperty(JSON_PROPERTY_FUNDING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundingSource(String fundingSource) {
    this.fundingSource = fundingSource;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestPaymentInformationEWallet createPaymentRequestPaymentInformationEWallet = (CreatePaymentRequestPaymentInformationEWallet) o;
    return Objects.equals(this.accountId, createPaymentRequestPaymentInformationEWallet.accountId) &&
        Objects.equals(this.fundingSource, createPaymentRequestPaymentInformationEWallet.fundingSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, fundingSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestPaymentInformationEWallet {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    fundingSource: ").append(toIndentedString(fundingSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

