/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationLineItemsInnerPassenger;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner
 */
@JsonPropertyOrder({
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_TOTAL_AMOUNT,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_UNIT_PRICE,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_QUANTITY,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_GIFT_CARD_CURRENCY,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_S_K_U,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_DESCRIPTION,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_NAME,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_PASSENGER,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_DESTINATION_TYPES,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_TAX_AMOUNT,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_ADDRESS1,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_ADDRESS2,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_CITY,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_COUNTRY_CODE,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_FIRST_NAME,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_LAST_NAME,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_MIDDLE_NAME,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_PHONE,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_POSTAL_CODE,
  CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner.JSON_PROPERTY_SHIPPING_STATE
})
@JsonTypeName("checkPayerAuthEnrollment_request_orderInformation_lineItems_inner")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner {
  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private String totalAmount;

  public static final String JSON_PROPERTY_UNIT_PRICE = "unitPrice";
  private String unitPrice;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_GIFT_CARD_CURRENCY = "giftCardCurrency";
  private Integer giftCardCurrency;

  public static final String JSON_PROPERTY_PRODUCT_S_K_U = "productSKU";
  private String productSKU;

  public static final String JSON_PROPERTY_PRODUCT_DESCRIPTION = "productDescription";
  private String productDescription;

  public static final String JSON_PROPERTY_PRODUCT_NAME = "productName";
  private String productName;

  public static final String JSON_PROPERTY_PASSENGER = "passenger";
  private CreatePaymentRequestOrderInformationLineItemsInnerPassenger passenger;

  public static final String JSON_PROPERTY_SHIPPING_DESTINATION_TYPES = "shippingDestinationTypes";
  private String shippingDestinationTypes;

  public static final String JSON_PROPERTY_TAX_AMOUNT = "taxAmount";
  private String taxAmount;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS1 = "shippingAddress1";
  private String shippingAddress1;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS2 = "shippingAddress2";
  private String shippingAddress2;

  public static final String JSON_PROPERTY_SHIPPING_CITY = "shippingCity";
  private String shippingCity;

  public static final String JSON_PROPERTY_SHIPPING_COUNTRY_CODE = "shippingCountryCode";
  private String shippingCountryCode;

  public static final String JSON_PROPERTY_SHIPPING_FIRST_NAME = "shippingFirstName";
  private String shippingFirstName;

  public static final String JSON_PROPERTY_SHIPPING_LAST_NAME = "shippingLastName";
  private String shippingLastName;

  public static final String JSON_PROPERTY_SHIPPING_MIDDLE_NAME = "shippingMiddleName";
  private String shippingMiddleName;

  public static final String JSON_PROPERTY_SHIPPING_PHONE = "shippingPhone";
  private Integer shippingPhone;

  public static final String JSON_PROPERTY_SHIPPING_POSTAL_CODE = "shippingPostalCode";
  private Integer shippingPostalCode;

  public static final String JSON_PROPERTY_SHIPPING_STATE = "shippingState";
  private String shippingState;

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner() {
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Total amount for the item. Normally calculated as the unit price times quantity.  When &#x60;orderInformation.lineItems[].productCode&#x60; is \&quot;gift_card\&quot;, this is the purchase amount total for prepaid gift cards in major units.  Example: 123.45 USD &#x3D; 123 
   * @return totalAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner unitPrice(String unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * Per-item price of the product. This value for this field cannot be negative.  You must include either this field or the request-level field &#x60;orderInformation.amountDetails.totalAmount&#x60; in your request.  You can include a decimal point (.), but you cannot include any other special characters. The value is truncated to the correct number of decimal places.  #### DCC with a Third-Party Provider Set this field to the converted amount that was returned by the DCC provider. You must include either the 1st line item in the order and this field, or the request-level field &#x60;orderInformation.amountDetails.totalAmount&#x60; in your request.  #### Tax Calculation Required field for U.S., Canadian, international and value added taxes.  #### Zero Amount Authorizations If your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen.  #### Maximum Field Lengths For GPN and JCN Gateway: Decimal (10) All other processors: Decimal (15) 
   * @return unitPrice
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUnitPrice() {
    return unitPrice;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnitPrice(String unitPrice) {
    this.unitPrice = unitPrice;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

  /**
   * Number of units for this order. Must be a non-negative integer.  The default is &#x60;1&#x60;. For an authorization or capture transaction (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60; or &#x60;false&#x60;), this field is required when &#x60;orderInformation.lineItems[].productCode&#x60; is not &#x60;default&#x60; or one of the other values related to shipping and/or handling.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. 
   * minimum: 1
   * maximum: 999999999
   * @return quantity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner giftCardCurrency(Integer giftCardCurrency) {
    
    this.giftCardCurrency = giftCardCurrency;
    return this;
  }

  /**
   * When &#x60;orderInformation.lineItems[].productCode&#x60; is \&quot;gift_card\&quot;, this is the currency used for the gift card purchase.  For the possible values, see the [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf) 
   * @return giftCardCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GIFT_CARD_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGiftCardCurrency() {
    return giftCardCurrency;
  }


  @JsonProperty(JSON_PROPERTY_GIFT_CARD_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGiftCardCurrency(Integer giftCardCurrency) {
    this.giftCardCurrency = giftCardCurrency;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner productSKU(String productSKU) {
    
    this.productSKU = productSKU;
    return this;
  }

  /**
   * Product identifier code. Also known as the Stock Keeping Unit (SKU) code for the product.  For an authorization or capture transaction (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60; or &#x60;false&#x60;), this field is required when &#x60;orderInformation.lineItems[].productCode&#x60; is not set to **default** or one of the other values that are related to shipping and/or handling.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. For an authorization or capture transaction (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60; or &#x60;false&#x60;), this field is required when &#x60;orderInformation.lineItems[].productCode&#x60; is not &#x60;default&#x60; or one of the values related to shipping and/or handling. 
   * @return productSKU
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_S_K_U)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductSKU() {
    return productSKU;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_S_K_U)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductSKU(String productSKU) {
    this.productSKU = productSKU;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner productDescription(String productDescription) {
    
    this.productDescription = productDescription;
    return this;
  }

  /**
   * Brief description of item.
   * @return productDescription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductDescription() {
    return productDescription;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductDescription(String productDescription) {
    this.productDescription = productDescription;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner productName(String productName) {
    
    this.productName = productName;
    return this;
  }

  /**
   * For an authorization or capture transaction (&#x60;processingOptions.capture&#x60; is &#x60;true&#x60; or &#x60;false&#x60;), this field is required when &#x60;orderInformation.lineItems[].productCode&#x60; is not &#x60;default&#x60; or one of the other values that are related to shipping and/or handling.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. 
   * @return productName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductName() {
    return productName;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductName(String productName) {
    this.productName = productName;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner passenger(CreatePaymentRequestOrderInformationLineItemsInnerPassenger passenger) {
    
    this.passenger = passenger;
    return this;
  }

  /**
   * Get passenger
   * @return passenger
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSENGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestOrderInformationLineItemsInnerPassenger getPassenger() {
    return passenger;
  }


  @JsonProperty(JSON_PROPERTY_PASSENGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassenger(CreatePaymentRequestOrderInformationLineItemsInnerPassenger passenger) {
    this.passenger = passenger;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingDestinationTypes(String shippingDestinationTypes) {
    
    this.shippingDestinationTypes = shippingDestinationTypes;
    return this;
  }

  /**
   * Destination to where the item will be shipped. Example: Commercial, Residential, Store 
   * @return shippingDestinationTypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_DESTINATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingDestinationTypes() {
    return shippingDestinationTypes;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_DESTINATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingDestinationTypes(String shippingDestinationTypes) {
    this.shippingDestinationTypes = shippingDestinationTypes;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner taxAmount(String taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must be in the same currency. The tax amount field is additive.  The following example uses a two-exponent currency such as USD:   1. You include each line item in your request.  ..- 1st line item has amount&#x3D;10.00, quantity&#x3D;1, and taxAmount&#x3D;0.80  ..- 2nd line item has amount&#x3D;20.00, quantity&#x3D;1, and taxAmount&#x3D;1.60  2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.  Optional field.  #### Airlines processing Tax portion of the order amount. This value cannot exceed 99999999999999 (fourteen 9s). Format: English characters only. Optional request field for a line item.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes.  Note if you send this field in your tax request, the value in the field will override the tax engine 
   * @return taxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxAmount() {
    return taxAmount;
  }


  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxAmount(String taxAmount) {
    this.taxAmount = taxAmount;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingAddress1(String shippingAddress1) {
    
    this.shippingAddress1 = shippingAddress1;
    return this;
  }

  /**
   * Address where item will be shipped
   * @return shippingAddress1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingAddress1() {
    return shippingAddress1;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress1(String shippingAddress1) {
    this.shippingAddress1 = shippingAddress1;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingAddress2(String shippingAddress2) {
    
    this.shippingAddress2 = shippingAddress2;
    return this;
  }

  /**
   * Address where item will be shipped
   * @return shippingAddress2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingAddress2() {
    return shippingAddress2;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress2(String shippingAddress2) {
    this.shippingAddress2 = shippingAddress2;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingCity(String shippingCity) {
    
    this.shippingCity = shippingCity;
    return this;
  }

  /**
   * City where item will be shipped
   * @return shippingCity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingCity() {
    return shippingCity;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingCity(String shippingCity) {
    this.shippingCity = shippingCity;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingCountryCode(String shippingCountryCode) {
    
    this.shippingCountryCode = shippingCountryCode;
    return this;
  }

  /**
   * Country where item will be shipped
   * @return shippingCountryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingCountryCode() {
    return shippingCountryCode;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingCountryCode(String shippingCountryCode) {
    this.shippingCountryCode = shippingCountryCode;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingFirstName(String shippingFirstName) {
    
    this.shippingFirstName = shippingFirstName;
    return this;
  }

  /**
   * Customer&#39;s first name
   * @return shippingFirstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingFirstName() {
    return shippingFirstName;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingFirstName(String shippingFirstName) {
    this.shippingFirstName = shippingFirstName;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingLastName(String shippingLastName) {
    
    this.shippingLastName = shippingLastName;
    return this;
  }

  /**
   * Customer&#39;s last name
   * @return shippingLastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingLastName() {
    return shippingLastName;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingLastName(String shippingLastName) {
    this.shippingLastName = shippingLastName;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingMiddleName(String shippingMiddleName) {
    
    this.shippingMiddleName = shippingMiddleName;
    return this;
  }

  /**
   * Customer&#39;s middle name
   * @return shippingMiddleName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingMiddleName() {
    return shippingMiddleName;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingMiddleName(String shippingMiddleName) {
    this.shippingMiddleName = shippingMiddleName;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingPhone(Integer shippingPhone) {
    
    this.shippingPhone = shippingPhone;
    return this;
  }

  /**
   * Phone number where item will be shipped
   * @return shippingPhone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getShippingPhone() {
    return shippingPhone;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingPhone(Integer shippingPhone) {
    this.shippingPhone = shippingPhone;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingPostalCode(Integer shippingPostalCode) {
    
    this.shippingPostalCode = shippingPostalCode;
    return this;
  }

  /**
   * Postal code where item will be shipped
   * @return shippingPostalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getShippingPostalCode() {
    return shippingPostalCode;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingPostalCode(Integer shippingPostalCode) {
    this.shippingPostalCode = shippingPostalCode;
  }

  public CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner shippingState(String shippingState) {
    
    this.shippingState = shippingState;
    return this;
  }

  /**
   * State where item will be shipped
   * @return shippingState
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingState() {
    return shippingState;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingState(String shippingState) {
    this.shippingState = shippingState;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner = (CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner) o;
    return Objects.equals(this.totalAmount, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.totalAmount) &&
        Objects.equals(this.unitPrice, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.unitPrice) &&
        Objects.equals(this.quantity, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.quantity) &&
        Objects.equals(this.giftCardCurrency, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.giftCardCurrency) &&
        Objects.equals(this.productSKU, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.productSKU) &&
        Objects.equals(this.productDescription, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.productDescription) &&
        Objects.equals(this.productName, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.productName) &&
        Objects.equals(this.passenger, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.passenger) &&
        Objects.equals(this.shippingDestinationTypes, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingDestinationTypes) &&
        Objects.equals(this.taxAmount, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.taxAmount) &&
        Objects.equals(this.shippingAddress1, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingAddress1) &&
        Objects.equals(this.shippingAddress2, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingAddress2) &&
        Objects.equals(this.shippingCity, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingCity) &&
        Objects.equals(this.shippingCountryCode, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingCountryCode) &&
        Objects.equals(this.shippingFirstName, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingFirstName) &&
        Objects.equals(this.shippingLastName, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingLastName) &&
        Objects.equals(this.shippingMiddleName, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingMiddleName) &&
        Objects.equals(this.shippingPhone, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingPhone) &&
        Objects.equals(this.shippingPostalCode, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingPostalCode) &&
        Objects.equals(this.shippingState, checkPayerAuthEnrollmentRequestOrderInformationLineItemsInner.shippingState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalAmount, unitPrice, quantity, giftCardCurrency, productSKU, productDescription, productName, passenger, shippingDestinationTypes, taxAmount, shippingAddress1, shippingAddress2, shippingCity, shippingCountryCode, shippingFirstName, shippingLastName, shippingMiddleName, shippingPhone, shippingPostalCode, shippingState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckPayerAuthEnrollmentRequestOrderInformationLineItemsInner {\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    giftCardCurrency: ").append(toIndentedString(giftCardCurrency)).append("\n");
    sb.append("    productSKU: ").append(toIndentedString(productSKU)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    passenger: ").append(toIndentedString(passenger)).append("\n");
    sb.append("    shippingDestinationTypes: ").append(toIndentedString(shippingDestinationTypes)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    shippingAddress1: ").append(toIndentedString(shippingAddress1)).append("\n");
    sb.append("    shippingAddress2: ").append(toIndentedString(shippingAddress2)).append("\n");
    sb.append("    shippingCity: ").append(toIndentedString(shippingCity)).append("\n");
    sb.append("    shippingCountryCode: ").append(toIndentedString(shippingCountryCode)).append("\n");
    sb.append("    shippingFirstName: ").append(toIndentedString(shippingFirstName)).append("\n");
    sb.append("    shippingLastName: ").append(toIndentedString(shippingLastName)).append("\n");
    sb.append("    shippingMiddleName: ").append(toIndentedString(shippingMiddleName)).append("\n");
    sb.append("    shippingPhone: ").append(toIndentedString(shippingPhone)).append("\n");
    sb.append("    shippingPostalCode: ").append(toIndentedString(shippingPostalCode)).append("\n");
    sb.append("    shippingState: ").append(toIndentedString(shippingState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

