/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateCreditRequestSenderInformationAccount
 */
@JsonPropertyOrder({
  CreateCreditRequestSenderInformationAccount.JSON_PROPERTY_NUMBER,
  CreateCreditRequestSenderInformationAccount.JSON_PROPERTY_FUNDS_SOURCE
})
@JsonTypeName("createCredit_request_senderInformation_account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateCreditRequestSenderInformationAccount {
  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_FUNDS_SOURCE = "fundsSource";
  private String fundsSource;

  public CreateCreditRequestSenderInformationAccount() {
  }

  public CreateCreditRequestSenderInformationAccount number(String number) {
    
    this.number = number;
    return this;
  }

  /**
   * Account number of the sender of the funds. For Gaming Payment of Winnings transactions this is the merchant account number. * Required for Mastercard Payment of Winnings (POW) transactions. * Must contain only ASCII characters in range 32-122. * Must not be greater than 50 characters. * Required for POW on Barclays. 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }

  public CreateCreditRequestSenderInformationAccount fundsSource(String fundsSource) {
    
    this.fundsSource = fundsSource;
    return this;
  }

  /**
   * Source of funds for the sender. For Gaming Payment of Winnings transactions this is the merchant account type. * Required for Mastercard Payment of Winnings (POW) transactions. * Valid values:   * 00 - Other   * 01 - RTN + Bank Account   * 02 - IBAN   * 03 - Card Account   * 04 - Email   * 05 - PhoneNumber   * 06 - Bank account number (BAN) + Bank Identification Code (BIC)   * 07 - Wallet ID   * 08 - Social Network ID 
   * @return fundsSource
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNDS_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFundsSource() {
    return fundsSource;
  }


  @JsonProperty(JSON_PROPERTY_FUNDS_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundsSource(String fundsSource) {
    this.fundsSource = fundsSource;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCreditRequestSenderInformationAccount createCreditRequestSenderInformationAccount = (CreateCreditRequestSenderInformationAccount) o;
    return Objects.equals(this.number, createCreditRequestSenderInformationAccount.number) &&
        Objects.equals(this.fundsSource, createCreditRequestSenderInformationAccount.fundsSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, fundsSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCreditRequestSenderInformationAccount {\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    fundsSource: ").append(toIndentedString(fundsSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

