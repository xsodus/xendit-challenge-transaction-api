/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationBank;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationCard;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationCustomer;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationDirectDebit;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationEWallet;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationFluidData;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationInstrumentIdentifier;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationLegacyToken;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationOptions;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationPaymentAccountReference;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationPaymentInstrument;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationPaymentType;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationSepa;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationShippingAddress;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationTokenizedCard;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestPaymentInformation
 */
@JsonPropertyOrder({
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_CARD,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_TOKENIZED_CARD,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_DIRECT_DEBIT,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_FLUID_DATA,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_CUSTOMER,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_INSTRUMENT,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_INSTRUMENT_IDENTIFIER,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_SHIPPING_ADDRESS,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_LEGACY_TOKEN,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_BANK,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_OPTIONS,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_TYPE,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_INITIATION_CHANNEL,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_SEPA,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_E_WALLET,
  CreatePaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE
})
@JsonTypeName("createPayment_request_paymentInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestPaymentInformation {
  public static final String JSON_PROPERTY_CARD = "card";
  private CreatePaymentRequestPaymentInformationCard card;

  public static final String JSON_PROPERTY_TOKENIZED_CARD = "tokenizedCard";
  private CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard;

  public static final String JSON_PROPERTY_DIRECT_DEBIT = "directDebit";
  private CreatePaymentRequestPaymentInformationDirectDebit directDebit;

  public static final String JSON_PROPERTY_FLUID_DATA = "fluidData";
  private CreatePaymentRequestPaymentInformationFluidData fluidData;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CreatePaymentRequestPaymentInformationCustomer customer;

  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT = "paymentInstrument";
  private CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument;

  public static final String JSON_PROPERTY_INSTRUMENT_IDENTIFIER = "instrumentIdentifier";
  private CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shippingAddress";
  private CreatePaymentRequestPaymentInformationShippingAddress shippingAddress;

  public static final String JSON_PROPERTY_LEGACY_TOKEN = "legacyToken";
  private CreatePaymentRequestPaymentInformationLegacyToken legacyToken;

  public static final String JSON_PROPERTY_BANK = "bank";
  private CreatePaymentRequestPaymentInformationBank bank;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private CreatePaymentRequestPaymentInformationOptions options;

  public static final String JSON_PROPERTY_PAYMENT_TYPE = "paymentType";
  private CreatePaymentRequestPaymentInformationPaymentType paymentType;

  public static final String JSON_PROPERTY_INITIATION_CHANNEL = "initiationChannel";
  private String initiationChannel;

  public static final String JSON_PROPERTY_SEPA = "sepa";
  private CreatePaymentRequestPaymentInformationSepa sepa;

  public static final String JSON_PROPERTY_E_WALLET = "eWallet";
  private CreatePaymentRequestPaymentInformationEWallet eWallet;

  public static final String JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE = "paymentAccountReference";
  private CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference;

  public CreatePaymentRequestPaymentInformation() {
  }

  public CreatePaymentRequestPaymentInformation card(CreatePaymentRequestPaymentInformationCard card) {
    
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationCard getCard() {
    return card;
  }


  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCard(CreatePaymentRequestPaymentInformationCard card) {
    this.card = card;
  }

  public CreatePaymentRequestPaymentInformation tokenizedCard(CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard) {
    
    this.tokenizedCard = tokenizedCard;
    return this;
  }

  /**
   * Get tokenizedCard
   * @return tokenizedCard
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationTokenizedCard getTokenizedCard() {
    return tokenizedCard;
  }


  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenizedCard(CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard) {
    this.tokenizedCard = tokenizedCard;
  }

  public CreatePaymentRequestPaymentInformation directDebit(CreatePaymentRequestPaymentInformationDirectDebit directDebit) {
    
    this.directDebit = directDebit;
    return this;
  }

  /**
   * Get directDebit
   * @return directDebit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationDirectDebit getDirectDebit() {
    return directDebit;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectDebit(CreatePaymentRequestPaymentInformationDirectDebit directDebit) {
    this.directDebit = directDebit;
  }

  public CreatePaymentRequestPaymentInformation fluidData(CreatePaymentRequestPaymentInformationFluidData fluidData) {
    
    this.fluidData = fluidData;
    return this;
  }

  /**
   * Get fluidData
   * @return fluidData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLUID_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationFluidData getFluidData() {
    return fluidData;
  }


  @JsonProperty(JSON_PROPERTY_FLUID_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFluidData(CreatePaymentRequestPaymentInformationFluidData fluidData) {
    this.fluidData = fluidData;
  }

  public CreatePaymentRequestPaymentInformation customer(CreatePaymentRequestPaymentInformationCustomer customer) {
    
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationCustomer getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(CreatePaymentRequestPaymentInformationCustomer customer) {
    this.customer = customer;
  }

  public CreatePaymentRequestPaymentInformation paymentInstrument(CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument) {
    
    this.paymentInstrument = paymentInstrument;
    return this;
  }

  /**
   * Get paymentInstrument
   * @return paymentInstrument
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationPaymentInstrument getPaymentInstrument() {
    return paymentInstrument;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrument(CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument) {
    this.paymentInstrument = paymentInstrument;
  }

  public CreatePaymentRequestPaymentInformation instrumentIdentifier(CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier) {
    
    this.instrumentIdentifier = instrumentIdentifier;
    return this;
  }

  /**
   * Get instrumentIdentifier
   * @return instrumentIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationInstrumentIdentifier getInstrumentIdentifier() {
    return instrumentIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrumentIdentifier(CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier) {
    this.instrumentIdentifier = instrumentIdentifier;
  }

  public CreatePaymentRequestPaymentInformation shippingAddress(CreatePaymentRequestPaymentInformationShippingAddress shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationShippingAddress getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(CreatePaymentRequestPaymentInformationShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public CreatePaymentRequestPaymentInformation legacyToken(CreatePaymentRequestPaymentInformationLegacyToken legacyToken) {
    
    this.legacyToken = legacyToken;
    return this;
  }

  /**
   * Get legacyToken
   * @return legacyToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGACY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationLegacyToken getLegacyToken() {
    return legacyToken;
  }


  @JsonProperty(JSON_PROPERTY_LEGACY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegacyToken(CreatePaymentRequestPaymentInformationLegacyToken legacyToken) {
    this.legacyToken = legacyToken;
  }

  public CreatePaymentRequestPaymentInformation bank(CreatePaymentRequestPaymentInformationBank bank) {
    
    this.bank = bank;
    return this;
  }

  /**
   * Get bank
   * @return bank
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationBank getBank() {
    return bank;
  }


  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBank(CreatePaymentRequestPaymentInformationBank bank) {
    this.bank = bank;
  }

  public CreatePaymentRequestPaymentInformation options(CreatePaymentRequestPaymentInformationOptions options) {
    
    this.options = options;
    return this;
  }

  /**
   * Get options
   * @return options
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationOptions getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(CreatePaymentRequestPaymentInformationOptions options) {
    this.options = options;
  }

  public CreatePaymentRequestPaymentInformation paymentType(CreatePaymentRequestPaymentInformationPaymentType paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Get paymentType
   * @return paymentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationPaymentType getPaymentType() {
    return paymentType;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentType(CreatePaymentRequestPaymentInformationPaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public CreatePaymentRequestPaymentInformation initiationChannel(String initiationChannel) {
    
    this.initiationChannel = initiationChannel;
    return this;
  }

  /**
   * Mastercard-defined code that indicates how the account information was obtained.  - &#x60;00&#x60;: Card - &#x60;01&#x60;: Mobile Network Operator (MNO) controlled removable secure element (SIM or UICC) personalized for use with a mobile phone or smartphone - &#x60;02&#x60;: Key fob - &#x60;03&#x60;: Watch using a contactless chip or a fixed (non-removable) secure element not controlled by the MNO - &#x60;04&#x60;: Mobile tag - &#x60;05&#x60;: Wristband - &#x60;06&#x60;: Mobile phone case or sleeve - &#x60;07&#x60;: Mobile phone or smartphone with a fixed (non-removable) secure element controlled by the MNO,for example, code division multiple access (CDMA) - &#x60;08&#x60;: Removable secure element not controlled by the MNO, for example, memory card personalized forused with a mobile phone or smartphone - &#x60;09&#x60;: Mobile Phone or smartphone with a fixed (non-removable) secure element not controlled by the MNO - &#x60;10&#x60;: MNO controlled removable secure element (SIM or UICC) personalized for use with a tablet or e-book - &#x60;11&#x60;: Tablet or e-book with a fixed (non-removable) secure element controlled by the MNO - &#x60;12&#x60;: Removable secure element not controlled by the MNO, for example, memory card personalized foruse with a tablet or e-book - &#x60;13&#x60;: Tablet or e-book with fixed (non-removable) secure element not controlled by the MNO - &#x60;14&#x60;: Mobile phone or smartphone with a payment application running in a host processor - &#x60;15&#x60;: Tablet or e-book with a payment application running in a host processor - &#x60;16&#x60;: Mobile phone or smartphone with a payment application running in the Trusted ExecutionEnvironment (TEE) of a host processor - &#x60;17&#x60;: Tablet or e-book with a payment application running in the TEE of a host processor - &#x60;18&#x60;: Watch with a payment application running in the TEE of a host processor - &#x60;19&#x60;: Watch with a payment application running in a host processor  Values from 20–99 exclusively indicate the form factor only without also indicating the storage technology  - &#x60;20&#x60;: Card - &#x60;21&#x60;: Phone e.g. Mobile Phone - &#x60;22&#x60;: Tablet/e-reader - &#x60;23&#x60;: Watch/Wristband e.g. Watch or wristband, including a fitness band, smart strap, disposable band, watch add-on, and security/ID band - &#x60;24&#x60;: Sticker - &#x60;25&#x60;: PC - &#x60;26&#x60;: Device Peripheral e.g. mobile phone case or sleeve - &#x60;27&#x60;: Tag e.g. key fob or mobile tag - &#x60;28&#x60;: Jewelry e.g. ring, bracelet, necklace and cuff links - &#x60;29&#x60;: Fashion Accessory e.g. handbag, bag charm and glasses - &#x60;30&#x60;: Garment e.g. dress - &#x60;31&#x60;: Domestic Appliance e.g refrigerator, washing machine - &#x60;32&#x60;: Vehicle e.g. vehicle, including vehicle attached devices - &#x60;33&#x60;: Media/Gaming Device e.g. media or gaming device, including a set top box, media player and television  34–99 are reserved for future form factors. Any value in this range may occur within form factor and transaction data without prior notice.  This field is supported only for Mastercard on CyberSource through VisaNet. When initiation channel is not provided via this API field, the value is extracted from EMV tag 9F6E for Mastercard transactions. To enable this feature please call support.  #### Used by **Authorization** Optional field. 
   * @return initiationChannel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIATION_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInitiationChannel() {
    return initiationChannel;
  }


  @JsonProperty(JSON_PROPERTY_INITIATION_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitiationChannel(String initiationChannel) {
    this.initiationChannel = initiationChannel;
  }

  public CreatePaymentRequestPaymentInformation sepa(CreatePaymentRequestPaymentInformationSepa sepa) {
    
    this.sepa = sepa;
    return this;
  }

  /**
   * Get sepa
   * @return sepa
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationSepa getSepa() {
    return sepa;
  }


  @JsonProperty(JSON_PROPERTY_SEPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSepa(CreatePaymentRequestPaymentInformationSepa sepa) {
    this.sepa = sepa;
  }

  public CreatePaymentRequestPaymentInformation eWallet(CreatePaymentRequestPaymentInformationEWallet eWallet) {
    
    this.eWallet = eWallet;
    return this;
  }

  /**
   * Get eWallet
   * @return eWallet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_E_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationEWallet geteWallet() {
    return eWallet;
  }


  @JsonProperty(JSON_PROPERTY_E_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void seteWallet(CreatePaymentRequestPaymentInformationEWallet eWallet) {
    this.eWallet = eWallet;
  }

  public CreatePaymentRequestPaymentInformation paymentAccountReference(CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference) {
    
    this.paymentAccountReference = paymentAccountReference;
    return this;
  }

  /**
   * Get paymentAccountReference
   * @return paymentAccountReference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationPaymentAccountReference getPaymentAccountReference() {
    return paymentAccountReference;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentAccountReference(CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference) {
    this.paymentAccountReference = paymentAccountReference;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestPaymentInformation createPaymentRequestPaymentInformation = (CreatePaymentRequestPaymentInformation) o;
    return Objects.equals(this.card, createPaymentRequestPaymentInformation.card) &&
        Objects.equals(this.tokenizedCard, createPaymentRequestPaymentInformation.tokenizedCard) &&
        Objects.equals(this.directDebit, createPaymentRequestPaymentInformation.directDebit) &&
        Objects.equals(this.fluidData, createPaymentRequestPaymentInformation.fluidData) &&
        Objects.equals(this.customer, createPaymentRequestPaymentInformation.customer) &&
        Objects.equals(this.paymentInstrument, createPaymentRequestPaymentInformation.paymentInstrument) &&
        Objects.equals(this.instrumentIdentifier, createPaymentRequestPaymentInformation.instrumentIdentifier) &&
        Objects.equals(this.shippingAddress, createPaymentRequestPaymentInformation.shippingAddress) &&
        Objects.equals(this.legacyToken, createPaymentRequestPaymentInformation.legacyToken) &&
        Objects.equals(this.bank, createPaymentRequestPaymentInformation.bank) &&
        Objects.equals(this.options, createPaymentRequestPaymentInformation.options) &&
        Objects.equals(this.paymentType, createPaymentRequestPaymentInformation.paymentType) &&
        Objects.equals(this.initiationChannel, createPaymentRequestPaymentInformation.initiationChannel) &&
        Objects.equals(this.sepa, createPaymentRequestPaymentInformation.sepa) &&
        Objects.equals(this.eWallet, createPaymentRequestPaymentInformation.eWallet) &&
        Objects.equals(this.paymentAccountReference, createPaymentRequestPaymentInformation.paymentAccountReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, tokenizedCard, directDebit, fluidData, customer, paymentInstrument, instrumentIdentifier, shippingAddress, legacyToken, bank, options, paymentType, initiationChannel, sepa, eWallet, paymentAccountReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestPaymentInformation {\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    tokenizedCard: ").append(toIndentedString(tokenizedCard)).append("\n");
    sb.append("    directDebit: ").append(toIndentedString(directDebit)).append("\n");
    sb.append("    fluidData: ").append(toIndentedString(fluidData)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    paymentInstrument: ").append(toIndentedString(paymentInstrument)).append("\n");
    sb.append("    instrumentIdentifier: ").append(toIndentedString(instrumentIdentifier)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    legacyToken: ").append(toIndentedString(legacyToken)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    initiationChannel: ").append(toIndentedString(initiationChannel)).append("\n");
    sb.append("    sepa: ").append(toIndentedString(sepa)).append("\n");
    sb.append("    eWallet: ").append(toIndentedString(eWallet)).append("\n");
    sb.append("    paymentAccountReference: ").append(toIndentedString(paymentAccountReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

