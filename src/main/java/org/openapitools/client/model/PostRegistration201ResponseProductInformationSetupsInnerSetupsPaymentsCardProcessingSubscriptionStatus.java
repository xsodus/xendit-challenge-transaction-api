/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus
 */
@JsonPropertyOrder({
  PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.JSON_PROPERTY_SUBMIT_TIME_UTC,
  PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.JSON_PROPERTY_STATUS,
  PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.JSON_PROPERTY_REASON,
  PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.JSON_PROPERTY_DETAILS,
  PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.JSON_PROPERTY_MESSAGE
})
@JsonTypeName("postRegistration_201_response_productInformationSetups_inner_setups_payments_cardProcessing_subscriptionStatus")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus {
  public static final String JSON_PROPERTY_SUBMIT_TIME_UTC = "submitTimeUtc";
  private String submitTimeUtc;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUCCESS("SUCCESS"),
    
    FAILURE("FAILURE"),
    
    PARTIAL("PARTIAL"),
    
    PENDING("PENDING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * Gets or Sets reason
   */
  public enum ReasonEnum {
    DEPENDENT_PRODUCT_NOT_CONTRACTED("DEPENDENT_PRODUCT_NOT_CONTRACTED"),
    
    DEPENDENT_FEATURE_NOT_CHOSEN("DEPENDENT_FEATURE_NOT_CHOSEN"),
    
    MISSING_DATA("MISSING_DATA"),
    
    INVALID_DATA("INVALID_DATA"),
    
    DUPLICATE_FIELD("DUPLICATE_FIELD");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonEnum fromValue(String value) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON = "reason";
  private ReasonEnum reason;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private List<Map<String, String>> details = new ArrayList<>();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus() {
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus submitTimeUtc(String submitTimeUtc) {
    
    this.submitTimeUtc = submitTimeUtc;
    return this;
  }

  /**
   * Time of request in UTC. &#x60;Format: YYYY-MM-DDThh:mm:ssZ&#x60;  Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @return submitTimeUtc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMIT_TIME_UTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubmitTimeUtc() {
    return submitTimeUtc;
  }


  @JsonProperty(JSON_PROPERTY_SUBMIT_TIME_UTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmitTimeUtc(String submitTimeUtc) {
    this.submitTimeUtc = submitTimeUtc;
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus reason(ReasonEnum reason) {
    
    this.reason = reason;
    return this;
  }

  /**
   * Get reason
   * @return reason
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReasonEnum getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus details(List<Map<String, String>> details) {
    
    this.details = details;
    return this;
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus addDetailsItem(Map<String, String> detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, String>> getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(List<Map<String, String>> details) {
    this.details = details;
  }

  public PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus message(String message) {
    
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus = (PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus) o;
    return Objects.equals(this.submitTimeUtc, postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.submitTimeUtc) &&
        Objects.equals(this.status, postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.status) &&
        Objects.equals(this.reason, postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.reason) &&
        Objects.equals(this.details, postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.details) &&
        Objects.equals(this.message, postRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(submitTimeUtc, status, reason, details, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRegistration201ResponseProductInformationSetupsInnerSetupsPaymentsCardProcessingSubscriptionStatus {\n");
    sb.append("    submitTimeUtc: ").append(toIndentedString(submitTimeUtc)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

