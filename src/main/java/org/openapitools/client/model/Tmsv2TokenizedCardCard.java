/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The latest card details associated with the network token
 */
@JsonPropertyOrder({
  Tmsv2TokenizedCardCard.JSON_PROPERTY_SUFFIX,
  Tmsv2TokenizedCardCard.JSON_PROPERTY_EXPIRATION_MONTH,
  Tmsv2TokenizedCardCard.JSON_PROPERTY_EXPIRATION_YEAR
})
@JsonTypeName("tmsv2TokenizedCard_card")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class Tmsv2TokenizedCardCard {
  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public static final String JSON_PROPERTY_EXPIRATION_MONTH = "expirationMonth";
  private String expirationMonth;

  public static final String JSON_PROPERTY_EXPIRATION_YEAR = "expirationYear";
  private String expirationYear;

  public Tmsv2TokenizedCardCard() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public Tmsv2TokenizedCardCard(
    @JsonProperty(JSON_PROPERTY_SUFFIX) String suffix, 
    @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH) String expirationMonth, 
    @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR) String expirationYear
  ) {
    this();
    this.suffix = suffix;
    this.expirationMonth = expirationMonth;
    this.expirationYear = expirationYear;
  }

  /**
   * The customer&#39;s latest payment card number suffix 
   * @return suffix
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }



  /**
   *  Two-digit month in which the customer&#39;s latest payment card expires.  Format: &#x60;MM&#x60;.  Possible Values: &#x60;01&#x60; through &#x60;12&#x60;. 
   * @return expirationMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationMonth() {
    return expirationMonth;
  }



  /**
   * Four-digit year in which the customer&#39;s latest payment card expires.  Format: &#x60;YYYY&#x60;. 
   * @return expirationYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationYear() {
    return expirationYear;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tmsv2TokenizedCardCard tmsv2TokenizedCardCard = (Tmsv2TokenizedCardCard) o;
    return Objects.equals(this.suffix, tmsv2TokenizedCardCard.suffix) &&
        Objects.equals(this.expirationMonth, tmsv2TokenizedCardCard.expirationMonth) &&
        Objects.equals(this.expirationYear, tmsv2TokenizedCardCard.expirationYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suffix, expirationMonth, expirationYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tmsv2TokenizedCardCard {\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    expirationMonth: ").append(toIndentedString(expirationMonth)).append("\n");
    sb.append("    expirationYear: ").append(toIndentedString(expirationYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

