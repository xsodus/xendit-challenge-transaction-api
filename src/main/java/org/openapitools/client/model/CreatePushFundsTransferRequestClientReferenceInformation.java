/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePushFundsTransferRequestClientReferenceInformation
 */
@JsonPropertyOrder({
  CreatePushFundsTransferRequestClientReferenceInformation.JSON_PROPERTY_CODE,
  CreatePushFundsTransferRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_NAME,
  CreatePushFundsTransferRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_VERSION,
  CreatePushFundsTransferRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_USER
})
@JsonTypeName("createPushFundsTransfer_request_clientReferenceInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePushFundsTransferRequestClientReferenceInformation {
  public static final String JSON_PROPERTY_CODE = "code";
  private JsonNullable<String> code = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_APPLICATION_NAME = "applicationName";
  private JsonNullable<String> applicationName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_APPLICATION_VERSION = "applicationVersion";
  private JsonNullable<String> applicationVersion = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_APPLICATION_USER = "applicationUser";
  private JsonNullable<String> applicationUser = JsonNullable.<String>undefined();

  public CreatePushFundsTransferRequestClientReferenceInformation() {
  }

  public CreatePushFundsTransferRequestClientReferenceInformation code(String code) {
    this.code = JsonNullable.<String>of(code);
    
    return this;
  }

  /**
   * Merchant-generated order reference or tracking number. It is recommended that you send a unique value for each transaction so that you can perform meaningful searches for the transaction. 
   * @return code
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCode() {
        return code.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCode_JsonNullable() {
    return code;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE)
  public void setCode_JsonNullable(JsonNullable<String> code) {
    this.code = code;
  }

  public void setCode(String code) {
    this.code = JsonNullable.<String>of(code);
  }

  public CreatePushFundsTransferRequestClientReferenceInformation applicationName(String applicationName) {
    this.applicationName = JsonNullable.<String>of(applicationName);
    
    return this;
  }

  /**
   * The name of the Connection Method client (such as Virtual Terminal or SOAP Toolkit API) that the merchant uses to send a transaction request to CyberSource. 
   * @return applicationName
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getApplicationName() {
        return applicationName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getApplicationName_JsonNullable() {
    return applicationName;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  public void setApplicationName_JsonNullable(JsonNullable<String> applicationName) {
    this.applicationName = applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = JsonNullable.<String>of(applicationName);
  }

  public CreatePushFundsTransferRequestClientReferenceInformation applicationVersion(String applicationVersion) {
    this.applicationVersion = JsonNullable.<String>of(applicationVersion);
    
    return this;
  }

  /**
   * Version of the CyberSource application or integration used for a transaction. 
   * @return applicationVersion
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getApplicationVersion() {
        return applicationVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLICATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getApplicationVersion_JsonNullable() {
    return applicationVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLICATION_VERSION)
  public void setApplicationVersion_JsonNullable(JsonNullable<String> applicationVersion) {
    this.applicationVersion = applicationVersion;
  }

  public void setApplicationVersion(String applicationVersion) {
    this.applicationVersion = JsonNullable.<String>of(applicationVersion);
  }

  public CreatePushFundsTransferRequestClientReferenceInformation applicationUser(String applicationUser) {
    this.applicationUser = JsonNullable.<String>of(applicationUser);
    
    return this;
  }

  /**
   * The entity that is responsible for running the transaction and submitting the processing request to CyberSource. This could be a person, a system, or a connection method. 
   * @return applicationUser
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getApplicationUser() {
        return applicationUser.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLICATION_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getApplicationUser_JsonNullable() {
    return applicationUser;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLICATION_USER)
  public void setApplicationUser_JsonNullable(JsonNullable<String> applicationUser) {
    this.applicationUser = applicationUser;
  }

  public void setApplicationUser(String applicationUser) {
    this.applicationUser = JsonNullable.<String>of(applicationUser);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePushFundsTransferRequestClientReferenceInformation createPushFundsTransferRequestClientReferenceInformation = (CreatePushFundsTransferRequestClientReferenceInformation) o;
    return equalsNullable(this.code, createPushFundsTransferRequestClientReferenceInformation.code) &&
        equalsNullable(this.applicationName, createPushFundsTransferRequestClientReferenceInformation.applicationName) &&
        equalsNullable(this.applicationVersion, createPushFundsTransferRequestClientReferenceInformation.applicationVersion) &&
        equalsNullable(this.applicationUser, createPushFundsTransferRequestClientReferenceInformation.applicationUser);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(code), hashCodeNullable(applicationName), hashCodeNullable(applicationVersion), hashCodeNullable(applicationUser));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePushFundsTransferRequestClientReferenceInformation {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    applicationVersion: ").append(toIndentedString(applicationVersion)).append("\n");
    sb.append("    applicationUser: ").append(toIndentedString(applicationUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

