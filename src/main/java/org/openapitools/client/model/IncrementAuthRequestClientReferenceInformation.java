/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.IncrementAuthRequestClientReferenceInformationPartner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IncrementAuthRequestClientReferenceInformation
 */
@JsonPropertyOrder({
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_CODE,
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_PARTNER,
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_NAME,
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_VERSION,
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_APPLICATION_USER,
  IncrementAuthRequestClientReferenceInformation.JSON_PROPERTY_TRANSACTION_ID
})
@JsonTypeName("incrementAuth_request_clientReferenceInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class IncrementAuthRequestClientReferenceInformation {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_PARTNER = "partner";
  private IncrementAuthRequestClientReferenceInformationPartner partner;

  public static final String JSON_PROPERTY_APPLICATION_NAME = "applicationName";
  private String applicationName;

  public static final String JSON_PROPERTY_APPLICATION_VERSION = "applicationVersion";
  private String applicationVersion;

  public static final String JSON_PROPERTY_APPLICATION_USER = "applicationUser";
  private String applicationUser;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public IncrementAuthRequestClientReferenceInformation() {
  }

  public IncrementAuthRequestClientReferenceInformation code(String code) {
    
    this.code = code;
    return this;
  }

  /**
   * Merchant-generated order reference or tracking number. It is recommended that you send a unique value for each transaction so that you can perform meaningful searches for the transaction.  #### Used by **Authorization** Required field.  #### PIN Debit Requests for PIN debit reversals need to use the same merchant reference number that was used in the transaction that is being reversed.  Required field for all PIN Debit requests (purchase, credit, and reversal).  #### FDC Nashville Global Certain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports. 
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }

  public IncrementAuthRequestClientReferenceInformation partner(IncrementAuthRequestClientReferenceInformationPartner partner) {
    
    this.partner = partner;
    return this;
  }

  /**
   * Get partner
   * @return partner
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IncrementAuthRequestClientReferenceInformationPartner getPartner() {
    return partner;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartner(IncrementAuthRequestClientReferenceInformationPartner partner) {
    this.partner = partner;
  }

  public IncrementAuthRequestClientReferenceInformation applicationName(String applicationName) {
    
    this.applicationName = applicationName;
    return this;
  }

  /**
   * The name of the Connection Method client (such as Virtual Terminal or SOAP Toolkit API) that the merchant uses to send a transaction request to CyberSource. 
   * @return applicationName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationName() {
    return applicationName;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public IncrementAuthRequestClientReferenceInformation applicationVersion(String applicationVersion) {
    
    this.applicationVersion = applicationVersion;
    return this;
  }

  /**
   * Version of the CyberSource application or integration used for a transaction. 
   * @return applicationVersion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationVersion() {
    return applicationVersion;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationVersion(String applicationVersion) {
    this.applicationVersion = applicationVersion;
  }

  public IncrementAuthRequestClientReferenceInformation applicationUser(String applicationUser) {
    
    this.applicationUser = applicationUser;
    return this;
  }

  /**
   * The entity that is responsible for running the transaction and submitting the processing request to CyberSource. This could be a person, a system, or a connection method. 
   * @return applicationUser
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATION_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationUser() {
    return applicationUser;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationUser(String applicationUser) {
    this.applicationUser = applicationUser;
  }

  public IncrementAuthRequestClientReferenceInformation transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Identifier that you assign to the transaction. Normally generated by a client server to identify a unique API request.  **Note** Use this field only if you want to support merchant-initiated reversal and void operations.  #### Used by **Authorization, Authorization Reversal, Capture, Credit, and Void** Optional field.  #### PIN Debit For a PIN debit reversal, your request must include a request ID or a merchant transaction identifier. Optional field for PIN debit purchase or credit requests. 
   * @return transactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IncrementAuthRequestClientReferenceInformation incrementAuthRequestClientReferenceInformation = (IncrementAuthRequestClientReferenceInformation) o;
    return Objects.equals(this.code, incrementAuthRequestClientReferenceInformation.code) &&
        Objects.equals(this.partner, incrementAuthRequestClientReferenceInformation.partner) &&
        Objects.equals(this.applicationName, incrementAuthRequestClientReferenceInformation.applicationName) &&
        Objects.equals(this.applicationVersion, incrementAuthRequestClientReferenceInformation.applicationVersion) &&
        Objects.equals(this.applicationUser, incrementAuthRequestClientReferenceInformation.applicationUser) &&
        Objects.equals(this.transactionId, incrementAuthRequestClientReferenceInformation.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, partner, applicationName, applicationVersion, applicationUser, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IncrementAuthRequestClientReferenceInformation {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    applicationVersion: ").append(toIndentedString(applicationVersion)).append("\n");
    sb.append("    applicationUser: ").append(toIndentedString(applicationUser)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

