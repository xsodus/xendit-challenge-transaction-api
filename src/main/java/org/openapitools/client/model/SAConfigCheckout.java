/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SAConfigCheckout
 */
@JsonPropertyOrder({
  SAConfigCheckout.JSON_PROPERTY_DISPLAY_TAX_AMOUNT,
  SAConfigCheckout.JSON_PROPERTY_TEMPLATE_TYPE,
  SAConfigCheckout.JSON_PROPERTY_RETURN_TO_MERCHANT_SITE_URL
})
@JsonTypeName("SAConfig_checkout")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class SAConfigCheckout {
  public static final String JSON_PROPERTY_DISPLAY_TAX_AMOUNT = "displayTaxAmount";
  private Boolean displayTaxAmount;

  public static final String JSON_PROPERTY_TEMPLATE_TYPE = "templateType";
  private String templateType;

  public static final String JSON_PROPERTY_RETURN_TO_MERCHANT_SITE_URL = "returnToMerchantSiteUrl";
  private String returnToMerchantSiteUrl;

  public SAConfigCheckout() {
  }

  public SAConfigCheckout displayTaxAmount(Boolean displayTaxAmount) {
    
    this.displayTaxAmount = displayTaxAmount;
    return this;
  }

  /**
   * Toggles whether or not the tax amount is displayed on the Hosted Checkout.
   * @return displayTaxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayTaxAmount() {
    return displayTaxAmount;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayTaxAmount(Boolean displayTaxAmount) {
    this.displayTaxAmount = displayTaxAmount;
  }

  public SAConfigCheckout templateType(String templateType) {
    
    this.templateType = templateType;
    return this;
  }

  /**
   * Specifies whether the Hosted Checkout is displayed as a single page form or multi page checkout.   Valid values:  &#x60;multi&#x60;  &#x60;single&#x60; 
   * @return templateType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPLATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplateType() {
    return templateType;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateType(String templateType) {
    this.templateType = templateType;
  }

  public SAConfigCheckout returnToMerchantSiteUrl(String returnToMerchantSiteUrl) {
    
    this.returnToMerchantSiteUrl = returnToMerchantSiteUrl;
    return this;
  }

  /**
   * URL of the website linked to from the Secure Acceptance receipt page. Only used if the profile does not have custom receipt pages configured.
   * @return returnToMerchantSiteUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_TO_MERCHANT_SITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnToMerchantSiteUrl() {
    return returnToMerchantSiteUrl;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_TO_MERCHANT_SITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnToMerchantSiteUrl(String returnToMerchantSiteUrl) {
    this.returnToMerchantSiteUrl = returnToMerchantSiteUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SAConfigCheckout saConfigCheckout = (SAConfigCheckout) o;
    return Objects.equals(this.displayTaxAmount, saConfigCheckout.displayTaxAmount) &&
        Objects.equals(this.templateType, saConfigCheckout.templateType) &&
        Objects.equals(this.returnToMerchantSiteUrl, saConfigCheckout.returnToMerchantSiteUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayTaxAmount, templateType, returnToMerchantSiteUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SAConfigCheckout {\n");
    sb.append("    displayTaxAmount: ").append(toIndentedString(displayTaxAmount)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("    returnToMerchantSiteUrl: ").append(toIndentedString(returnToMerchantSiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

