/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponseRiskInformationScore
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponseRiskInformationScore.JSON_PROPERTY_FACTOR_CODES,
  PtsV2PaymentsPost201ResponseRiskInformationScore.JSON_PROPERTY_MODEL_USED,
  PtsV2PaymentsPost201ResponseRiskInformationScore.JSON_PROPERTY_RESULT
})
@JsonTypeName("ptsV2PaymentsPost201Response_riskInformation_score")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponseRiskInformationScore {
  public static final String JSON_PROPERTY_FACTOR_CODES = "factorCodes";
  private List<String> factorCodes = new ArrayList<>();

  public static final String JSON_PROPERTY_MODEL_USED = "modelUsed";
  private String modelUsed;

  public static final String JSON_PROPERTY_RESULT = "result";
  private String result;

  public PtsV2PaymentsPost201ResponseRiskInformationScore() {
  }

  public PtsV2PaymentsPost201ResponseRiskInformationScore factorCodes(List<String> factorCodes) {
    
    this.factorCodes = factorCodes;
    return this;
  }

  public PtsV2PaymentsPost201ResponseRiskInformationScore addFactorCodesItem(String factorCodesItem) {
    if (this.factorCodes == null) {
      this.factorCodes = new ArrayList<>();
    }
    this.factorCodes.add(factorCodesItem);
    return this;
  }

  /**
   * Get factorCodes
   * @return factorCodes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACTOR_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFactorCodes() {
    return factorCodes;
  }


  @JsonProperty(JSON_PROPERTY_FACTOR_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFactorCodes(List<String> factorCodes) {
    this.factorCodes = factorCodes;
  }

  public PtsV2PaymentsPost201ResponseRiskInformationScore modelUsed(String modelUsed) {
    
    this.modelUsed = modelUsed;
    return this;
  }

  /**
   * Name of the score model used for the transaction. If you did not include a custom model in your request, this field contains the name of CyberSource&#39;s default model.  For all possible values, see the &#x60;score_model_used&#x60; field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** &gt; **Documentation** &gt; **Guides** &gt; _Decision Manager Using the SCMP API Developer Guide_ (PDF link). 
   * @return modelUsed
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModelUsed() {
    return modelUsed;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelUsed(String modelUsed) {
    this.modelUsed = modelUsed;
  }

  public PtsV2PaymentsPost201ResponseRiskInformationScore result(String result) {
    
    this.result = result;
    return this;
  }

  /**
   * Total score calculated for this order. The value cannot be negative.  For all possible values, see the &#x60;score_score_result&#x60; field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** &gt; **Documentation** &gt; **Guides** &gt; _Decision Manager Using the SCMP API Developer Guide_ (PDF link). 
   * @return result
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResult() {
    return result;
  }


  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResult(String result) {
    this.result = result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseRiskInformationScore ptsV2PaymentsPost201ResponseRiskInformationScore = (PtsV2PaymentsPost201ResponseRiskInformationScore) o;
    return Objects.equals(this.factorCodes, ptsV2PaymentsPost201ResponseRiskInformationScore.factorCodes) &&
        Objects.equals(this.modelUsed, ptsV2PaymentsPost201ResponseRiskInformationScore.modelUsed) &&
        Objects.equals(this.result, ptsV2PaymentsPost201ResponseRiskInformationScore.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(factorCodes, modelUsed, result);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseRiskInformationScore {\n");
    sb.append("    factorCodes: ").append(toIndentedString(factorCodes)).append("\n");
    sb.append("    modelUsed: ").append(toIndentedString(modelUsed)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

