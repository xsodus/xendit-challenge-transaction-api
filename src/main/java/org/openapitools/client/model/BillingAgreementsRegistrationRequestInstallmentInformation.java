/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsRegistrationRequestInstallmentInformation
 */
@JsonPropertyOrder({
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_ALERT_PREFERENCE,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_FIRST_INSTALLMENT_DATE,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_IDENTIFIER,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_LAST_INSTALLMENT_DATE,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_MAX_AMOUNT,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_MIN_AMOUNT,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_PAYMENT_TYPE,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_PREFERRED_DAY,
  BillingAgreementsRegistrationRequestInstallmentInformation.JSON_PROPERTY_SEQUENCE
})
@JsonTypeName("billingAgreementsRegistration_request_installmentInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsRegistrationRequestInstallmentInformation {
  public static final String JSON_PROPERTY_ALERT_PREFERENCE = "alertPreference";
  private String alertPreference;

  public static final String JSON_PROPERTY_FIRST_INSTALLMENT_DATE = "firstInstallmentDate";
  private String firstInstallmentDate;

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public static final String JSON_PROPERTY_LAST_INSTALLMENT_DATE = "lastInstallmentDate";
  private String lastInstallmentDate;

  public static final String JSON_PROPERTY_MAX_AMOUNT = "maxAmount";
  private String maxAmount;

  public static final String JSON_PROPERTY_MIN_AMOUNT = "minAmount";
  private String minAmount;

  public static final String JSON_PROPERTY_PAYMENT_TYPE = "paymentType";
  private String paymentType;

  public static final String JSON_PROPERTY_PREFERRED_DAY = "preferredDay";
  private String preferredDay;

  public static final String JSON_PROPERTY_SEQUENCE = "sequence";
  private Integer sequence;

  public BillingAgreementsRegistrationRequestInstallmentInformation() {
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation alertPreference(String alertPreference) {
    
    this.alertPreference = alertPreference;
    return this;
  }

  /**
   * Applicable only for SI. Required in case the authentication is initiated for SI registration. Valid Values: - &#x60;SMS&#x60; - &#x60;EMAIL&#x60; - &#x60;BOTH&#x60; 
   * @return alertPreference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALERT_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlertPreference() {
    return alertPreference;
  }


  @JsonProperty(JSON_PROPERTY_ALERT_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlertPreference(String alertPreference) {
    this.alertPreference = alertPreference;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation firstInstallmentDate(String firstInstallmentDate) {
    
    this.firstInstallmentDate = firstInstallmentDate;
    return this;
  }

  /**
   * Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a string of six zeros (000000) to the processor.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file: - Record: CP01 TCR9 - Position: 42-47 - Field: Date of First Installment 
   * @return firstInstallmentDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstInstallmentDate() {
    return firstInstallmentDate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstInstallmentDate(String firstInstallmentDate) {
    this.firstInstallmentDate = firstInstallmentDate;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

  /**
   * Standing Instruction/Installment identifier. 
   * @return identifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation lastInstallmentDate(String lastInstallmentDate) {
    
    this.lastInstallmentDate = lastInstallmentDate;
    return this;
  }

  /**
   * End date of the SI transactions. Cannot be later than card expiry date. Ideally this can be set to expiry date. Required in case the authentication is initiated for SI registration. 
   * @return lastInstallmentDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastInstallmentDate() {
    return lastInstallmentDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastInstallmentDate(String lastInstallmentDate) {
    this.lastInstallmentDate = lastInstallmentDate;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation maxAmount(String maxAmount) {
    
    this.maxAmount = maxAmount;
    return this;
  }

  /**
   * Maximum Amount for which SI can be initiated. Required in case the authentication is initiated for SI registration. 
   * @return maxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaxAmount() {
    return maxAmount;
  }


  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxAmount(String maxAmount) {
    this.maxAmount = maxAmount;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation minAmount(String minAmount) {
    
    this.minAmount = minAmount;
    return this;
  }

  /**
   * Minimum Amount for which SI can be initiated. Required in case the authentication is initiated for SI registration. 
   * @return minAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMinAmount() {
    return minAmount;
  }


  @JsonProperty(JSON_PROPERTY_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinAmount(String minAmount) {
    this.minAmount = minAmount;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation paymentType(String paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Payment plan for the installments.  Possible values: - 0 (default): Regular installment. This value is not allowed for airline transactions. - 1: Installment payment with down payment. - 2: Installment payment without down payment. This value is supported only for airline transactions. - 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions. - 4: Down payment only; regular installment payment will follow. - 5: Boarding fee only. This value is supported only for airline transactions.  This field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 9 - Field: Merchant Installment Supporting Information 
   * @return paymentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentType() {
    return paymentType;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation preferredDay(String preferredDay) {
    
    this.preferredDay = preferredDay;
    return this;
  }

  /**
   * Preferred date for initiating the SI transaction every month. This field need not be sent in case the SI has to be initiated as and when required, e.g., topping up the wallet, etc. 
   * @return preferredDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFERRED_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreferredDay() {
    return preferredDay;
  }


  @JsonProperty(JSON_PROPERTY_PREFERRED_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferredDay(String preferredDay) {
    this.preferredDay = preferredDay;
  }

  public BillingAgreementsRegistrationRequestInstallmentInformation sequence(Integer sequence) {
    
    this.sequence = sequence;
    return this;
  }

  /**
   * Installment number when making payments in installments. Used along with &#x60;totalCount&#x60; to track which payment is being processed.  For example, the second of 5 payments would be passed to CyberSource as &#x60;sequence&#x60; &#x3D; 2 and &#x60;totalCount&#x60; &#x3D; 5.  #### Chase Paymentech Solutions and FDC Compass This field is optional because this value is required in the merchant descriptors.  #### CyberSource through VisaNet When you do not include this field in a request for a Crediario installment payment, CyberSource sends a value of 0 to the processor.  For Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP01 TCR9 - Position: 38-40 - Field: Installment Payment Number  * The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant&#39;s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies. 
   * maximum: 99
   * @return sequence
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequence() {
    return sequence;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsRegistrationRequestInstallmentInformation billingAgreementsRegistrationRequestInstallmentInformation = (BillingAgreementsRegistrationRequestInstallmentInformation) o;
    return Objects.equals(this.alertPreference, billingAgreementsRegistrationRequestInstallmentInformation.alertPreference) &&
        Objects.equals(this.firstInstallmentDate, billingAgreementsRegistrationRequestInstallmentInformation.firstInstallmentDate) &&
        Objects.equals(this.identifier, billingAgreementsRegistrationRequestInstallmentInformation.identifier) &&
        Objects.equals(this.lastInstallmentDate, billingAgreementsRegistrationRequestInstallmentInformation.lastInstallmentDate) &&
        Objects.equals(this.maxAmount, billingAgreementsRegistrationRequestInstallmentInformation.maxAmount) &&
        Objects.equals(this.minAmount, billingAgreementsRegistrationRequestInstallmentInformation.minAmount) &&
        Objects.equals(this.paymentType, billingAgreementsRegistrationRequestInstallmentInformation.paymentType) &&
        Objects.equals(this.preferredDay, billingAgreementsRegistrationRequestInstallmentInformation.preferredDay) &&
        Objects.equals(this.sequence, billingAgreementsRegistrationRequestInstallmentInformation.sequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertPreference, firstInstallmentDate, identifier, lastInstallmentDate, maxAmount, minAmount, paymentType, preferredDay, sequence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsRegistrationRequestInstallmentInformation {\n");
    sb.append("    alertPreference: ").append(toIndentedString(alertPreference)).append("\n");
    sb.append("    firstInstallmentDate: ").append(toIndentedString(firstInstallmentDate)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    lastInstallmentDate: ").append(toIndentedString(lastInstallmentDate)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    minAmount: ").append(toIndentedString(minAmount)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    preferredDay: ").append(toIndentedString(preferredDay)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

