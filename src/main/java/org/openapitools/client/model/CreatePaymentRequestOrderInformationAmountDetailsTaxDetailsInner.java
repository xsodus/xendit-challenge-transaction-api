/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_TYPE,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_AMOUNT,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_RATE,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_CODE,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_TAX_ID,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_APPLIED,
  CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner.JSON_PROPERTY_EXEMPTION_CODE
})
@JsonTypeName("createPayment_request_orderInformation_amountDetails_taxDetails_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_RATE = "rate";
  private String rate;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_TAX_ID = "taxId";
  private String taxId;

  public static final String JSON_PROPERTY_APPLIED = "applied";
  private Boolean applied;

  public static final String JSON_PROPERTY_EXEMPTION_CODE = "exemptionCode";
  private String exemptionCode;

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner() {
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Indicates the type of tax data for the _taxDetails_ object.  Possible values:  - &#x60;alternate&#x60; - &#x60;local&#x60; - &#x60;national&#x60; - &#x60;vat&#x60; - &#x60;other&#x60; - &#x60;green&#x60; 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner amount(String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Indicates the amount of tax based on the &#x60;type&#x60; field as described in the table below:  | type      | type description | | ------------- |:-------------:| | &#x60;alternate&#x60; | Total amount of alternate tax for the order. | | &#x60;local&#x60;     | Sales tax for the order. | | &#x60;national&#x60;  | National tax for the order. | | &#x60;vat&#x60;       | Total amount of value added tax (VAT) included in the order. | | &#x60;other&#x60;     | Other tax. | | &#x60;green&#x60;     | Green tax amount for Korean Processing. | 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner rate(String rate) {
    
    this.rate = rate;
    return this;
  }

  /**
   * Rate of VAT or other tax for the order.  Example 0.040 (&#x3D;4%)  Valid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional decimal places will be truncated) 
   * @return rate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(String rate) {
    this.rate = rate;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner code(String code) {
    
    this.code = code;
    return this;
  }

  /**
   * Type of tax being applied to the item.  #### FDC Nashville Global - &#x60;alternate_tax_type_applied&#x60; - &#x60;alternate_tax_type_identifier&#x60;  #### Worldpay VAP - &#x60;alternate_tax_type_identifier&#x60;  #### RBS WorldPay Atlanta - &#x60;tax_type_applied&#x60;  #### TSYS Acquiring Solutions - &#x60;tax_type_applied&#x60; - &#x60;local_tax_indicator&#x60;  #### Chase Paymentech Solutions - &#x60;tax_type_applied&#x60;  #### Elavon Americas - &#x60;local_tax_indicator&#x60;  #### FDC Compass - &#x60;tax_type_applied&#x60;  #### OmniPay Direct - &#x60;local_tax_indicator&#x60; 
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

  /**
   * Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value, including zero. You may send this field without sending alternate tax amount. 
   * @return taxId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxId() {
    return taxId;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner applied(Boolean applied) {
    
    this.applied = applied;
    return this;
  }

  /**
   * Flag that indicates whether the alternate tax amount (&#x60;orderInformation.amountDetails.taxDetails[].amount&#x60;) is included in the request.  Possible values: - &#x60;false&#x60;: alternate tax amount is not included in the request. - &#x60;true&#x60;: alternate tax amount is included in the request. 
   * @return applied
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApplied() {
    return applied;
  }


  @JsonProperty(JSON_PROPERTY_APPLIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplied(Boolean applied) {
    this.applied = applied;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner exemptionCode(String exemptionCode) {
    
    this.exemptionCode = exemptionCode;
    return this;
  }

  /**
   * Status code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. 
   * @return exemptionCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXEMPTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExemptionCode() {
    return exemptionCode;
  }


  @JsonProperty(JSON_PROPERTY_EXEMPTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExemptionCode(String exemptionCode) {
    this.exemptionCode = exemptionCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner = (CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner) o;
    return Objects.equals(this.type, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.type) &&
        Objects.equals(this.amount, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.amount) &&
        Objects.equals(this.rate, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.rate) &&
        Objects.equals(this.code, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.code) &&
        Objects.equals(this.taxId, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.taxId) &&
        Objects.equals(this.applied, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.applied) &&
        Objects.equals(this.exemptionCode, createPaymentRequestOrderInformationAmountDetailsTaxDetailsInner.exemptionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, amount, rate, code, taxId, applied, exemptionCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformationAmountDetailsTaxDetailsInner {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    applied: ").append(toIndentedString(applied)).append("\n");
    sb.append("    exemptionCode: ").append(toIndentedString(exemptionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

