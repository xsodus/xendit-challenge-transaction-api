/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateCreditRequestProcessingInformationJapanPaymentOptions
 */
@JsonPropertyOrder({
  CreateCreditRequestProcessingInformationJapanPaymentOptions.JSON_PROPERTY_PAYMENT_METHOD,
  CreateCreditRequestProcessingInformationJapanPaymentOptions.JSON_PROPERTY_INSTALLMENTS
})
@JsonTypeName("createCredit_request_processingInformation_japanPaymentOptions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateCreditRequestProcessingInformationJapanPaymentOptions {
  public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
  private String paymentMethod;

  public static final String JSON_PROPERTY_INSTALLMENTS = "installments";
  private String installments;

  public CreateCreditRequestProcessingInformationJapanPaymentOptions() {
  }

  public CreateCreditRequestProcessingInformationJapanPaymentOptions paymentMethod(String paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

  /**
   * This value is a 2-digit code indicating the payment method. Use Payment Method Code value that applies to the tranasction. - 10 (One-time payment) - 21, 22, 23, 24  (Bonus(one-time)payment) - 61 (Installment payment) - 31, 32, 33, 34  (Integrated (Bonus + Installment)payment) - 80 (Revolving payment) 
   * @return paymentMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentMethod() {
    return paymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public CreateCreditRequestProcessingInformationJapanPaymentOptions installments(String installments) {
    
    this.installments = installments;
    return this;
  }

  /**
   * Number of Installments. 
   * @return installments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTALLMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstallments() {
    return installments;
  }


  @JsonProperty(JSON_PROPERTY_INSTALLMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallments(String installments) {
    this.installments = installments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCreditRequestProcessingInformationJapanPaymentOptions createCreditRequestProcessingInformationJapanPaymentOptions = (CreateCreditRequestProcessingInformationJapanPaymentOptions) o;
    return Objects.equals(this.paymentMethod, createCreditRequestProcessingInformationJapanPaymentOptions.paymentMethod) &&
        Objects.equals(this.installments, createCreditRequestProcessingInformationJapanPaymentOptions.installments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethod, installments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCreditRequestProcessingInformationJapanPaymentOptions {\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    installments: ").append(toIndentedString(installments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

