/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Payment Processing connection used to support eCheck, aka ACH, payment methods. Example - \&quot;bofaach\&quot;
 */
@JsonPropertyOrder({
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_COMPANY_ENTRY_DESCRIPTION,
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_COMPANY_ID,
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_BATCH_GROUP,
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_ENABLE_ACCUITY_FOR_AVS,
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_ACCUITY_CHECK_TYPE,
  ECheckConfigCommonProcessorsValue.JSON_PROPERTY_SET_COMPLETED_STATE
})
@JsonTypeName("ECheckConfig_common_processors_value")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ECheckConfigCommonProcessorsValue {
  public static final String JSON_PROPERTY_COMPANY_ENTRY_DESCRIPTION = "companyEntryDescription";
  private String companyEntryDescription;

  public static final String JSON_PROPERTY_COMPANY_ID = "companyId";
  private String companyId;

  public static final String JSON_PROPERTY_BATCH_GROUP = "batchGroup";
  private String batchGroup;

  public static final String JSON_PROPERTY_ENABLE_ACCUITY_FOR_AVS = "enableAccuityForAvs";
  private Boolean enableAccuityForAvs = true;

  public static final String JSON_PROPERTY_ACCUITY_CHECK_TYPE = "accuityCheckType";
  private Object accuityCheckType;

  public static final String JSON_PROPERTY_SET_COMPLETED_STATE = "setCompletedState";
  private Boolean setCompletedState = false;

  public ECheckConfigCommonProcessorsValue() {
  }

  public ECheckConfigCommonProcessorsValue companyEntryDescription(String companyEntryDescription) {
    
    this.companyEntryDescription = companyEntryDescription;
    return this;
  }

  /**
   * *EXISTING* Company (merchant) defined description of entry to receive.  For e.g. PAYROLL, GAS BILL, INS PREM. This field is alphanumeric
   * @return companyEntryDescription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ENTRY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompanyEntryDescription() {
    return companyEntryDescription;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ENTRY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyEntryDescription(String companyEntryDescription) {
    this.companyEntryDescription = companyEntryDescription;
  }

  public ECheckConfigCommonProcessorsValue companyId(String companyId) {
    
    this.companyId = companyId;
    return this;
  }

  /**
   * *EXISTING* company ID assigned to merchant by Acquiring bank. This field is alphanumeric
   * @return companyId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }

  public ECheckConfigCommonProcessorsValue batchGroup(String batchGroup) {
    
    this.batchGroup = batchGroup;
    return this;
  }

  /**
   * *EXISTING* Capture requests are grouped into a batch bound for your payment processor. The batch time can be identified by reading the last 2-digits as military time. E.g., &lt;processor&gt;_16 &#x3D; your processing cutoff is 4PM PST. Please note if you are in a different location you may then need to convert time zone as well.
   * @return batchGroup
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BATCH_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBatchGroup() {
    return batchGroup;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBatchGroup(String batchGroup) {
    this.batchGroup = batchGroup;
  }

  public ECheckConfigCommonProcessorsValue enableAccuityForAvs(Boolean enableAccuityForAvs) {
    
    this.enableAccuityForAvs = enableAccuityForAvs;
    return this;
  }

  /**
   * *NEW* Accuity is the original validation service that checks the account/routing number for formatting issues. Used by WF and set to \&quot;Yes\&quot; unless told otherwise
   * @return enableAccuityForAvs
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_ACCUITY_FOR_AVS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableAccuityForAvs() {
    return enableAccuityForAvs;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_ACCUITY_FOR_AVS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAccuityForAvs(Boolean enableAccuityForAvs) {
    this.enableAccuityForAvs = enableAccuityForAvs;
  }

  public ECheckConfigCommonProcessorsValue accuityCheckType(Object accuityCheckType) {
    
    this.accuityCheckType = accuityCheckType;
    return this;
  }

  /**
   * *NEW*
   * @return accuityCheckType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCUITY_CHECK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAccuityCheckType() {
    return accuityCheckType;
  }


  @JsonProperty(JSON_PROPERTY_ACCUITY_CHECK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccuityCheckType(Object accuityCheckType) {
    this.accuityCheckType = accuityCheckType;
  }

  public ECheckConfigCommonProcessorsValue setCompletedState(Boolean setCompletedState) {
    
    this.setCompletedState = setCompletedState;
    return this;
  }

  /**
   * *Moved* When set to Yes we will automatically update transactions to a completed status X-number of days after the transaction comes through; if no failure notification is received. When set to No means we will not update transaction status in this manner. For BAMS/Bank of America merchants, they should be set to No unless we are explicitly asked to set a merchant to YES.
   * @return setCompletedState
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SET_COMPLETED_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSetCompletedState() {
    return setCompletedState;
  }


  @JsonProperty(JSON_PROPERTY_SET_COMPLETED_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetCompletedState(Boolean setCompletedState) {
    this.setCompletedState = setCompletedState;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECheckConfigCommonProcessorsValue echeckConfigCommonProcessorsValue = (ECheckConfigCommonProcessorsValue) o;
    return Objects.equals(this.companyEntryDescription, echeckConfigCommonProcessorsValue.companyEntryDescription) &&
        Objects.equals(this.companyId, echeckConfigCommonProcessorsValue.companyId) &&
        Objects.equals(this.batchGroup, echeckConfigCommonProcessorsValue.batchGroup) &&
        Objects.equals(this.enableAccuityForAvs, echeckConfigCommonProcessorsValue.enableAccuityForAvs) &&
        Objects.equals(this.accuityCheckType, echeckConfigCommonProcessorsValue.accuityCheckType) &&
        Objects.equals(this.setCompletedState, echeckConfigCommonProcessorsValue.setCompletedState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyEntryDescription, companyId, batchGroup, enableAccuityForAvs, accuityCheckType, setCompletedState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECheckConfigCommonProcessorsValue {\n");
    sb.append("    companyEntryDescription: ").append(toIndentedString(companyEntryDescription)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    batchGroup: ").append(toIndentedString(batchGroup)).append("\n");
    sb.append("    enableAccuityForAvs: ").append(toIndentedString(enableAccuityForAvs)).append("\n");
    sb.append("    accuityCheckType: ").append(toIndentedString(accuityCheckType)).append("\n");
    sb.append("    setCompletedState: ").append(toIndentedString(setCompletedState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

