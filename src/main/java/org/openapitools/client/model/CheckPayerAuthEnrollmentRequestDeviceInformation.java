/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestDeviceInformationRawDataInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CheckPayerAuthEnrollmentRequestDeviceInformation
 */
@JsonPropertyOrder({
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_IP_ADDRESS,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_RAW_DATA,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_ACCEPT_BROWSER_VALUE,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_ACCEPT_CONTENT,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_LANGUAGE,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_JAVA_ENABLED,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_JAVA_SCRIPT_ENABLED,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_COLOR_DEPTH,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_SCREEN_HEIGHT,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_SCREEN_WIDTH,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_HTTP_BROWSER_TIME_DIFFERENCE,
  CheckPayerAuthEnrollmentRequestDeviceInformation.JSON_PROPERTY_USER_AGENT_BROWSER_VALUE
})
@JsonTypeName("checkPayerAuthEnrollment_request_deviceInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CheckPayerAuthEnrollmentRequestDeviceInformation {
  public static final String JSON_PROPERTY_IP_ADDRESS = "ipAddress";
  private String ipAddress;

  public static final String JSON_PROPERTY_RAW_DATA = "rawData";
  private List<CreatePaymentRequestDeviceInformationRawDataInner> rawData = new ArrayList<>();

  public static final String JSON_PROPERTY_HTTP_ACCEPT_BROWSER_VALUE = "httpAcceptBrowserValue";
  private String httpAcceptBrowserValue;

  public static final String JSON_PROPERTY_HTTP_ACCEPT_CONTENT = "httpAcceptContent";
  private String httpAcceptContent;

  public static final String JSON_PROPERTY_HTTP_BROWSER_LANGUAGE = "httpBrowserLanguage";
  private String httpBrowserLanguage;

  public static final String JSON_PROPERTY_HTTP_BROWSER_JAVA_ENABLED = "httpBrowserJavaEnabled";
  private Boolean httpBrowserJavaEnabled;

  public static final String JSON_PROPERTY_HTTP_BROWSER_JAVA_SCRIPT_ENABLED = "httpBrowserJavaScriptEnabled";
  private Boolean httpBrowserJavaScriptEnabled;

  public static final String JSON_PROPERTY_HTTP_BROWSER_COLOR_DEPTH = "httpBrowserColorDepth";
  private String httpBrowserColorDepth;

  public static final String JSON_PROPERTY_HTTP_BROWSER_SCREEN_HEIGHT = "httpBrowserScreenHeight";
  private String httpBrowserScreenHeight;

  public static final String JSON_PROPERTY_HTTP_BROWSER_SCREEN_WIDTH = "httpBrowserScreenWidth";
  private String httpBrowserScreenWidth;

  public static final String JSON_PROPERTY_HTTP_BROWSER_TIME_DIFFERENCE = "httpBrowserTimeDifference";
  private String httpBrowserTimeDifference;

  public static final String JSON_PROPERTY_USER_AGENT_BROWSER_VALUE = "userAgentBrowserValue";
  private String userAgentBrowserValue;

  public CheckPayerAuthEnrollmentRequestDeviceInformation() {
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * IP address of the customer.  #### Used by **Authorization, Capture, and Credit** Optional field. 
   * @return ipAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation rawData(List<CreatePaymentRequestDeviceInformationRawDataInner> rawData) {
    
    this.rawData = rawData;
    return this;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation addRawDataItem(CreatePaymentRequestDeviceInformationRawDataInner rawDataItem) {
    if (this.rawData == null) {
      this.rawData = new ArrayList<>();
    }
    this.rawData.add(rawDataItem);
    return this;
  }

  /**
   * Get rawData
   * @return rawData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RAW_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreatePaymentRequestDeviceInformationRawDataInner> getRawData() {
    return rawData;
  }


  @JsonProperty(JSON_PROPERTY_RAW_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRawData(List<CreatePaymentRequestDeviceInformationRawDataInner> rawData) {
    this.rawData = rawData;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpAcceptBrowserValue(String httpAcceptBrowserValue) {
    
    this.httpAcceptBrowserValue = httpAcceptBrowserValue;
    return this;
  }

  /**
   * Value of the Accept header sent by the customer&#39;s web browser. **Note** If the customer&#39;s browser provides a value, you must include it in your request. 
   * @return httpAcceptBrowserValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTTP_ACCEPT_BROWSER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHttpAcceptBrowserValue() {
    return httpAcceptBrowserValue;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_ACCEPT_BROWSER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpAcceptBrowserValue(String httpAcceptBrowserValue) {
    this.httpAcceptBrowserValue = httpAcceptBrowserValue;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpAcceptContent(String httpAcceptContent) {
    
    this.httpAcceptContent = httpAcceptContent;
    return this;
  }

  /**
   * The exact content of the HTTP accept header. 
   * @return httpAcceptContent
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_ACCEPT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpAcceptContent() {
    return httpAcceptContent;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_ACCEPT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpAcceptContent(String httpAcceptContent) {
    this.httpAcceptContent = httpAcceptContent;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserLanguage(String httpBrowserLanguage) {
    
    this.httpBrowserLanguage = httpBrowserLanguage;
    return this;
  }

  /**
   * Value represents the browser language as defined in IETF BCP47. Example:en-US, refer  https://en.wikipedia.org/wiki/IETF_language_tag for more details. 
   * @return httpBrowserLanguage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpBrowserLanguage() {
    return httpBrowserLanguage;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserLanguage(String httpBrowserLanguage) {
    this.httpBrowserLanguage = httpBrowserLanguage;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserJavaEnabled(Boolean httpBrowserJavaEnabled) {
    
    this.httpBrowserJavaEnabled = httpBrowserJavaEnabled;
    return this;
  }

  /**
   * A Boolean value that represents the ability of the cardholder browser to execute Java. Value is returned from the navigator.javaEnabled property. Possible Values:True/False 
   * @return httpBrowserJavaEnabled
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_JAVA_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHttpBrowserJavaEnabled() {
    return httpBrowserJavaEnabled;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_JAVA_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserJavaEnabled(Boolean httpBrowserJavaEnabled) {
    this.httpBrowserJavaEnabled = httpBrowserJavaEnabled;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserJavaScriptEnabled(Boolean httpBrowserJavaScriptEnabled) {
    
    this.httpBrowserJavaScriptEnabled = httpBrowserJavaScriptEnabled;
    return this;
  }

  /**
   * A Boolean value that represents the ability of the cardholder browser to execute JavaScript. Possible Values:True/False. **Note**: Merchants should be able to know the values from fingerprint details of cardholder&#39;s browser. 
   * @return httpBrowserJavaScriptEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_JAVA_SCRIPT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHttpBrowserJavaScriptEnabled() {
    return httpBrowserJavaScriptEnabled;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_JAVA_SCRIPT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpBrowserJavaScriptEnabled(Boolean httpBrowserJavaScriptEnabled) {
    this.httpBrowserJavaScriptEnabled = httpBrowserJavaScriptEnabled;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserColorDepth(String httpBrowserColorDepth) {
    
    this.httpBrowserColorDepth = httpBrowserColorDepth;
    return this;
  }

  /**
   * Value represents the bit depth of the color palette for displaying images, in bits per pixel. Example : 24, refer https://en.wikipedia.org/wiki/Color_depth for more details 
   * @return httpBrowserColorDepth
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_COLOR_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpBrowserColorDepth() {
    return httpBrowserColorDepth;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_COLOR_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserColorDepth(String httpBrowserColorDepth) {
    this.httpBrowserColorDepth = httpBrowserColorDepth;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserScreenHeight(String httpBrowserScreenHeight) {
    
    this.httpBrowserScreenHeight = httpBrowserScreenHeight;
    return this;
  }

  /**
   * Total height of the Cardholder&#39;s scree in pixels, example: 864. 
   * @return httpBrowserScreenHeight
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_SCREEN_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpBrowserScreenHeight() {
    return httpBrowserScreenHeight;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_SCREEN_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserScreenHeight(String httpBrowserScreenHeight) {
    this.httpBrowserScreenHeight = httpBrowserScreenHeight;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserScreenWidth(String httpBrowserScreenWidth) {
    
    this.httpBrowserScreenWidth = httpBrowserScreenWidth;
    return this;
  }

  /**
   * Total width of the cardholder&#39;s screen in pixels. Example: 1536. 
   * @return httpBrowserScreenWidth
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_SCREEN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpBrowserScreenWidth() {
    return httpBrowserScreenWidth;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_SCREEN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserScreenWidth(String httpBrowserScreenWidth) {
    this.httpBrowserScreenWidth = httpBrowserScreenWidth;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation httpBrowserTimeDifference(String httpBrowserTimeDifference) {
    
    this.httpBrowserTimeDifference = httpBrowserTimeDifference;
    return this;
  }

  /**
   * Time difference between UTC time and the cardholder browser local time, in minutes, Example:300 
   * @return httpBrowserTimeDifference
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_TIME_DIFFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHttpBrowserTimeDifference() {
    return httpBrowserTimeDifference;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_BROWSER_TIME_DIFFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHttpBrowserTimeDifference(String httpBrowserTimeDifference) {
    this.httpBrowserTimeDifference = httpBrowserTimeDifference;
  }

  public CheckPayerAuthEnrollmentRequestDeviceInformation userAgentBrowserValue(String userAgentBrowserValue) {
    
    this.userAgentBrowserValue = userAgentBrowserValue;
    return this;
  }

  /**
   * Value of the User-Agent header sent by the customer&#39;s web browser. Note If the customer&#39;s browser provides a value, you must include it in your request. 
   * @return userAgentBrowserValue
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_AGENT_BROWSER_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserAgentBrowserValue() {
    return userAgentBrowserValue;
  }


  @JsonProperty(JSON_PROPERTY_USER_AGENT_BROWSER_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserAgentBrowserValue(String userAgentBrowserValue) {
    this.userAgentBrowserValue = userAgentBrowserValue;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckPayerAuthEnrollmentRequestDeviceInformation checkPayerAuthEnrollmentRequestDeviceInformation = (CheckPayerAuthEnrollmentRequestDeviceInformation) o;
    return Objects.equals(this.ipAddress, checkPayerAuthEnrollmentRequestDeviceInformation.ipAddress) &&
        Objects.equals(this.rawData, checkPayerAuthEnrollmentRequestDeviceInformation.rawData) &&
        Objects.equals(this.httpAcceptBrowserValue, checkPayerAuthEnrollmentRequestDeviceInformation.httpAcceptBrowserValue) &&
        Objects.equals(this.httpAcceptContent, checkPayerAuthEnrollmentRequestDeviceInformation.httpAcceptContent) &&
        Objects.equals(this.httpBrowserLanguage, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserLanguage) &&
        Objects.equals(this.httpBrowserJavaEnabled, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserJavaEnabled) &&
        Objects.equals(this.httpBrowserJavaScriptEnabled, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserJavaScriptEnabled) &&
        Objects.equals(this.httpBrowserColorDepth, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserColorDepth) &&
        Objects.equals(this.httpBrowserScreenHeight, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserScreenHeight) &&
        Objects.equals(this.httpBrowserScreenWidth, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserScreenWidth) &&
        Objects.equals(this.httpBrowserTimeDifference, checkPayerAuthEnrollmentRequestDeviceInformation.httpBrowserTimeDifference) &&
        Objects.equals(this.userAgentBrowserValue, checkPayerAuthEnrollmentRequestDeviceInformation.userAgentBrowserValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipAddress, rawData, httpAcceptBrowserValue, httpAcceptContent, httpBrowserLanguage, httpBrowserJavaEnabled, httpBrowserJavaScriptEnabled, httpBrowserColorDepth, httpBrowserScreenHeight, httpBrowserScreenWidth, httpBrowserTimeDifference, userAgentBrowserValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckPayerAuthEnrollmentRequestDeviceInformation {\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    rawData: ").append(toIndentedString(rawData)).append("\n");
    sb.append("    httpAcceptBrowserValue: ").append(toIndentedString(httpAcceptBrowserValue)).append("\n");
    sb.append("    httpAcceptContent: ").append(toIndentedString(httpAcceptContent)).append("\n");
    sb.append("    httpBrowserLanguage: ").append(toIndentedString(httpBrowserLanguage)).append("\n");
    sb.append("    httpBrowserJavaEnabled: ").append(toIndentedString(httpBrowserJavaEnabled)).append("\n");
    sb.append("    httpBrowserJavaScriptEnabled: ").append(toIndentedString(httpBrowserJavaScriptEnabled)).append("\n");
    sb.append("    httpBrowserColorDepth: ").append(toIndentedString(httpBrowserColorDepth)).append("\n");
    sb.append("    httpBrowserScreenHeight: ").append(toIndentedString(httpBrowserScreenHeight)).append("\n");
    sb.append("    httpBrowserScreenWidth: ").append(toIndentedString(httpBrowserScreenWidth)).append("\n");
    sb.append("    httpBrowserTimeDifference: ").append(toIndentedString(httpBrowserTimeDifference)).append("\n");
    sb.append("    userAgentBrowserValue: ").append(toIndentedString(userAgentBrowserValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

