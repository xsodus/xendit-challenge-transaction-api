/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TssV2TransactionsGet200ResponseOrderInformationLineItemsInner
 */
@JsonPropertyOrder({
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_CODE,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_NAME,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_PRODUCT_SKU,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_TAX_AMOUNT,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_QUANTITY,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_UNIT_PRICE,
  TssV2TransactionsGet200ResponseOrderInformationLineItemsInner.JSON_PROPERTY_FULFILLMENT_TYPE
})
@JsonTypeName("tssV2TransactionsGet200Response_orderInformation_lineItems_inner")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TssV2TransactionsGet200ResponseOrderInformationLineItemsInner {
  public static final String JSON_PROPERTY_PRODUCT_CODE = "productCode";
  private String productCode;

  public static final String JSON_PROPERTY_PRODUCT_NAME = "productName";
  private String productName;

  public static final String JSON_PROPERTY_PRODUCT_SKU = "productSku";
  private String productSku;

  public static final String JSON_PROPERTY_TAX_AMOUNT = "taxAmount";
  private String taxAmount;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_UNIT_PRICE = "unitPrice";
  private String unitPrice;

  public static final String JSON_PROPERTY_FULFILLMENT_TYPE = "fulfillmentType";
  private String fulfillmentType;

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner() {
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

  /**
   * Type of product. This value is used to determine the category that the product is in: electronic, handling, physical, service, or shipping. The default value is **default**.  For a payment, when you set this field to a value other than default or any of the values related to shipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required. 
   * @return productCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductCode() {
    return productCode;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner productName(String productName) {
    
    this.productName = productName;
    return this;
  }

  /**
   * For PAYMENT and CAPTURE API, this field is required when above _productCode_ is not **default** or one of the values related to shipping and handling. 
   * @return productName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductName() {
    return productName;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductName(String productName) {
    this.productName = productName;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner productSku(String productSku) {
    
    this.productSku = productSku;
    return this;
  }

  /**
   * Identification code for the product. For Payment and Capture APIs, this field is required when above &#x60;productCode&#x60; is not **default** or one of the values related to shipping and/or handling. 
   * @return productSku
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductSku() {
    return productSku;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductSku(String productSku) {
    this.productSku = productSku;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner taxAmount(String taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must be in the same currency. The tax amount field is additive.  The following example uses a two-exponent currency such as USD:  1. You include each line item in your request.     - 1st line item has &#x60;amount&#x3D;10.00&#x60;, &#x60;quantity&#x3D;1&#x60;, and &#x60;taxAmount&#x3D;0.80&#x60;     - 2nd line item has &#x60;amount&#x3D;20.00&#x60;, &#x60;quantity&#x3D;1&#x60;, and &#x60;taxAmount&#x3D;1.60&#x60; 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.  This field is frequently used for Level II and Level III transactions. 
   * @return taxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxAmount() {
    return taxAmount;
  }


  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxAmount(String taxAmount) {
    this.taxAmount = taxAmount;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

  /**
   * For a payment or capture, this field is required when _productCode_ is not **default** or one of the values related to shipping and handling. 
   * minimum: 1
   * maximum: 999999999
   * @return quantity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner unitPrice(String unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you cannot include any other special characters. CyberSource truncates the amount to the correct number of decimal places. 
   * @return unitPrice
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitPrice() {
    return unitPrice;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitPrice(String unitPrice) {
    this.unitPrice = unitPrice;
  }

  public TssV2TransactionsGet200ResponseOrderInformationLineItemsInner fulfillmentType(String fulfillmentType) {
    
    this.fulfillmentType = fulfillmentType;
    return this;
  }

  /**
   * The description for this field is not available.
   * @return fulfillmentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULFILLMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFulfillmentType() {
    return fulfillmentType;
  }


  @JsonProperty(JSON_PROPERTY_FULFILLMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFulfillmentType(String fulfillmentType) {
    this.fulfillmentType = fulfillmentType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2TransactionsGet200ResponseOrderInformationLineItemsInner tssV2TransactionsGet200ResponseOrderInformationLineItemsInner = (TssV2TransactionsGet200ResponseOrderInformationLineItemsInner) o;
    return Objects.equals(this.productCode, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.productCode) &&
        Objects.equals(this.productName, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.productName) &&
        Objects.equals(this.productSku, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.productSku) &&
        Objects.equals(this.taxAmount, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.taxAmount) &&
        Objects.equals(this.quantity, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.quantity) &&
        Objects.equals(this.unitPrice, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.unitPrice) &&
        Objects.equals(this.fulfillmentType, tssV2TransactionsGet200ResponseOrderInformationLineItemsInner.fulfillmentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productCode, productName, productSku, taxAmount, quantity, unitPrice, fulfillmentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2TransactionsGet200ResponseOrderInformationLineItemsInner {\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productSku: ").append(toIndentedString(productSku)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    fulfillmentType: ").append(toIndentedString(fulfillmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

