/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo
 */
@JsonPropertyOrder({
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_TITLE,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_FIRST_NAME,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_MIDDLE_NAME,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_LAST_NAME,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_NAME_SUFFIX,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_ADDRESS1,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_ADDRESS2,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_LOCALITY,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_POSTAL_CODE,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_COUNTRY,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_EMAIL,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_PHONE_NUMBER,
  PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo.JSON_PROPERTY_VERIFICATION_STATUS
})
@JsonTypeName("ptsV2PaymentsOrderPost201Response_orderInformation_billTo")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_NAME_SUFFIX = "nameSuffix";
  private String nameSuffix;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  public static final String JSON_PROPERTY_VERIFICATION_STATUS = "verificationStatus";
  private String verificationStatus;

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo() {
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo title(String title) {
    
    this.title = title;
    return this;
  }

  /**
   * Title. 
   * @return title
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * Customer&#39;s first name. This name must be the same as the name on the card.  **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.  #### SEPA Required for Create Mandate and Import Mandate #### BACS Required for Import Mandate  #### CyberSource Latin American Processing **Important** For an authorization request, CyberSource Latin American Processing concatenates &#x60;orderInformation.billTo.firstName&#x60; and &#x60;orderInformation.billTo.lastName&#x60;. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\ **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called _CyberSource Latin American Processing_. It is not for any other Latin American processors that CyberSource supports.  #### CyberSource through VisaNet Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.  #### For Payouts: This field may be sent only for FDC Compass.  #### Chase Paymentech Solutions Optional field.  ####  Credit Mutuel-CIC Optional field.  #### OmniPay Direct Optional field.  #### SIX Optional field.  #### TSYS Acquiring Solutions Required when &#x60;processingInformation.billPaymentOptions.billPayment&#x3D;true&#x60; and &#x60;pointOfSaleInformation.entryMode&#x3D;keyed&#x60;.  #### Worldpay VAP Optional field.  #### All other processors Not used. 
   * @return firstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

  /**
   * Customer&#39;s middle name. 
   * @return middleName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Customer&#39;s last name. This name must be the same as the name on the card.  **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.  #### SEPA Required for Create Mandate and Import Mandate #### BACS Required for Import Mandate #### Chase Paymentech Solutions Optional field.  ####  Credit Mutuel-CIC Optional field.  #### CyberSource Latin American Processing **Important** For an authorization request, CyberSource Latin American Processing concatenates &#x60;orderInformation.billTo.firstName&#x60; and &#x60;orderInformation.billTo.lastName&#x60;. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\ **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.  #### CyberSource through VisaNet Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.  #### For Payouts: This field may be sent only for FDC Compass.  #### OmniPay Direct Optional field.  #### RBS WorldPay Atlanta Optional field.  #### SIX Optional field.  #### TSYS Acquiring Solutions Required when &#x60;processingInformation.billPaymentOptions.billPayment&#x3D;true&#x60; and &#x60;pointOfSaleInformation.entryMode&#x3D;keyed&#x60;.  #### Worldpay VAP Optional field.  #### All other processors Not used. 
   * @return lastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo nameSuffix(String nameSuffix) {
    
    this.nameSuffix = nameSuffix;
    return this;
  }

  /**
   * Customer&#39;s name suffix. 
   * @return nameSuffix
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNameSuffix() {
    return nameSuffix;
  }


  @JsonProperty(JSON_PROPERTY_NAME_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNameSuffix(String nameSuffix) {
    this.nameSuffix = nameSuffix;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * First line of the billing street address. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

  /**
   * Second line of the billing street address. 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * City of the billing address. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Postal code for the billing address. The postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code must follow this format: [5 digits][dash][4 digits] Example: 12345-6789 When the billing country is Canada, the 6-digit postal code must follow this format: [alpha][numeric][alpha][space][numeric][alpha][numeric] Example: A1B 2C3 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * State or province of the billing address. Use the State, Province, and Territory Codes for the United States and Canada. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country of the billing address. Use the two-character ISO Standard Country Codes. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo email(String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Customer&#39;s email address. 
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Customer&#39;s phone number.  It is recommended that you include the country code when the order is from outside the U.S.  #### Chase Paymentech Solutions Optional field.  ####  Credit Mutuel-CIC Optional field.  #### CyberSource through VisaNet Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.  #### For Payouts: This field may be sent only for FDC Compass.  #### OmniPay Direct Optional field.  #### SIX Optional field.  #### TSYS Acquiring Solutions Optional field.  #### Worldpay VAP Optional field.  #### All other processors Not used. 
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo verificationStatus(String verificationStatus) {
    
    this.verificationStatus = verificationStatus;
    return this;
  }

  /**
   * Whether buyer has verified their identity. Used in case of PayPal transactions.  Possible Values: * VERIFIED * UNVERIFIED 
   * @return verificationStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerificationStatus() {
    return verificationStatus;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationStatus(String verificationStatus) {
    this.verificationStatus = verificationStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo = (PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo) o;
    return Objects.equals(this.title, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.title) &&
        Objects.equals(this.firstName, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.firstName) &&
        Objects.equals(this.middleName, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.middleName) &&
        Objects.equals(this.lastName, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.lastName) &&
        Objects.equals(this.nameSuffix, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.nameSuffix) &&
        Objects.equals(this.address1, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.address1) &&
        Objects.equals(this.address2, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.address2) &&
        Objects.equals(this.locality, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.locality) &&
        Objects.equals(this.postalCode, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.postalCode) &&
        Objects.equals(this.administrativeArea, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.administrativeArea) &&
        Objects.equals(this.country, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.country) &&
        Objects.equals(this.email, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.email) &&
        Objects.equals(this.phoneNumber, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.phoneNumber) &&
        Objects.equals(this.verificationStatus, ptsV2PaymentsOrderPost201ResponseOrderInformationBillTo.verificationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, firstName, middleName, lastName, nameSuffix, address1, address2, locality, postalCode, administrativeArea, country, email, phoneNumber, verificationStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsOrderPost201ResponseOrderInformationBillTo {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    nameSuffix: ").append(toIndentedString(nameSuffix)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    verificationStatus: ").append(toIndentedString(verificationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

