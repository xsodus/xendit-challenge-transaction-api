/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CapturePaymentRequestPaymentInformationPaymentTypeMethod;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefundPaymentRequestPaymentInformationPaymentType
 */
@JsonPropertyOrder({
  RefundPaymentRequestPaymentInformationPaymentType.JSON_PROPERTY_NAME,
  RefundPaymentRequestPaymentInformationPaymentType.JSON_PROPERTY_SUB_TYPE_NAME,
  RefundPaymentRequestPaymentInformationPaymentType.JSON_PROPERTY_METHOD
})
@JsonTypeName("refundPayment_request_paymentInformation_paymentType")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class RefundPaymentRequestPaymentInformationPaymentType {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SUB_TYPE_NAME = "subTypeName";
  private String subTypeName;

  public static final String JSON_PROPERTY_METHOD = "method";
  private CapturePaymentRequestPaymentInformationPaymentTypeMethod method;

  public RefundPaymentRequestPaymentInformationPaymentType() {
  }

  public RefundPaymentRequestPaymentInformationPaymentType name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * A Payment Type is an agreed means for a payee to receive legal tender from a payer. The way one pays for a commercial financial transaction. Examples: Card, Bank Transfer, Digital, Direct Debit. Possible values: - &#x60;CARD&#x60; (use this for a PIN debit transaction) - &#x60;CHECK&#x60; (use this for all eCheck payment transactions - ECP Debit, ECP Follow-on Credit, ECP StandAlone Credit) - &#x60;bankTransfer&#x60; (use for Online Bank Transafer for methods such as P24, iDeal, Estonia Bank, KCP) - &#x60;localCard&#x60; (KCP Local card via Altpay) - &#x60;carrierBilling&#x60; (KCP Carrier Billing via Altpay) 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public RefundPaymentRequestPaymentInformationPaymentType subTypeName(String subTypeName) {
    
    this.subTypeName = subTypeName;
    return this;
  }

  /**
   * In case the APM supports multiple modes of initiation (e.g. Alipay via QR Code or Barcode) 
   * @return subTypeName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubTypeName() {
    return subTypeName;
  }


  @JsonProperty(JSON_PROPERTY_SUB_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubTypeName(String subTypeName) {
    this.subTypeName = subTypeName;
  }

  public RefundPaymentRequestPaymentInformationPaymentType method(CapturePaymentRequestPaymentInformationPaymentTypeMethod method) {
    
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CapturePaymentRequestPaymentInformationPaymentTypeMethod getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(CapturePaymentRequestPaymentInformationPaymentTypeMethod method) {
    this.method = method;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefundPaymentRequestPaymentInformationPaymentType refundPaymentRequestPaymentInformationPaymentType = (RefundPaymentRequestPaymentInformationPaymentType) o;
    return Objects.equals(this.name, refundPaymentRequestPaymentInformationPaymentType.name) &&
        Objects.equals(this.subTypeName, refundPaymentRequestPaymentInformationPaymentType.subTypeName) &&
        Objects.equals(this.method, refundPaymentRequestPaymentInformationPaymentType.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, subTypeName, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundPaymentRequestPaymentInformationPaymentType {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subTypeName: ").append(toIndentedString(subTypeName)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

