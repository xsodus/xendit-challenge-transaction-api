/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.BillingAgreementsRegistrationRequestPaymentInformationBankAccount;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsRegistrationRequestPaymentInformationBank
 */
@JsonPropertyOrder({
  BillingAgreementsRegistrationRequestPaymentInformationBank.JSON_PROPERTY_ACCOUNT,
  BillingAgreementsRegistrationRequestPaymentInformationBank.JSON_PROPERTY_IBAN,
  BillingAgreementsRegistrationRequestPaymentInformationBank.JSON_PROPERTY_SWIFT_CODE,
  BillingAgreementsRegistrationRequestPaymentInformationBank.JSON_PROPERTY_SCHEME
})
@JsonTypeName("billingAgreementsRegistration_request_paymentInformation_bank")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsRegistrationRequestPaymentInformationBank {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private BillingAgreementsRegistrationRequestPaymentInformationBankAccount account;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_SWIFT_CODE = "swiftCode";
  private String swiftCode;

  public static final String JSON_PROPERTY_SCHEME = "scheme";
  private String scheme;

  public BillingAgreementsRegistrationRequestPaymentInformationBank() {
  }

  public BillingAgreementsRegistrationRequestPaymentInformationBank account(BillingAgreementsRegistrationRequestPaymentInformationBankAccount account) {
    
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BillingAgreementsRegistrationRequestPaymentInformationBankAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(BillingAgreementsRegistrationRequestPaymentInformationBankAccount account) {
    this.account = account;
  }

  public BillingAgreementsRegistrationRequestPaymentInformationBank iban(String iban) {
    
    this.iban = iban;
    return this;
  }

  /**
   * International Bank Account Number (IBAN). #### SEPA Required for mandates services 
   * @return iban
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }

  public BillingAgreementsRegistrationRequestPaymentInformationBank swiftCode(String swiftCode) {
    
    this.swiftCode = swiftCode;
    return this;
  }

  /**
   * Bank&#39;s SWIFT code. You can use this field only when scoring a direct debit transaction. #### BACS Required for mandates services 
   * @return swiftCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWIFT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSwiftCode() {
    return swiftCode;
  }


  @JsonProperty(JSON_PROPERTY_SWIFT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
  }

  public BillingAgreementsRegistrationRequestPaymentInformationBank scheme(String scheme) {
    
    this.scheme = scheme;
    return this;
  }

  /**
   * The scheme that sets the rules for the direct debit process. Possible values:   - SEPA   - BACS #### SEPA/BACS Required for mandates services 
   * @return scheme
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScheme() {
    return scheme;
  }


  @JsonProperty(JSON_PROPERTY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheme(String scheme) {
    this.scheme = scheme;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsRegistrationRequestPaymentInformationBank billingAgreementsRegistrationRequestPaymentInformationBank = (BillingAgreementsRegistrationRequestPaymentInformationBank) o;
    return Objects.equals(this.account, billingAgreementsRegistrationRequestPaymentInformationBank.account) &&
        Objects.equals(this.iban, billingAgreementsRegistrationRequestPaymentInformationBank.iban) &&
        Objects.equals(this.swiftCode, billingAgreementsRegistrationRequestPaymentInformationBank.swiftCode) &&
        Objects.equals(this.scheme, billingAgreementsRegistrationRequestPaymentInformationBank.scheme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, iban, swiftCode, scheme);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsRegistrationRequestPaymentInformationBank {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    swiftCode: ").append(toIndentedString(swiftCode)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

