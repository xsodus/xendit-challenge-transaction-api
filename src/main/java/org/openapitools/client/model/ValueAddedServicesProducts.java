/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PaymentsProductsTax;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ValueAddedServicesProducts
 */
@JsonPropertyOrder({
  ValueAddedServicesProducts.JSON_PROPERTY_REPORTING,
  ValueAddedServicesProducts.JSON_PROPERTY_TRANSACTION_SEARCH
})
@JsonTypeName("valueAddedServicesProducts")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ValueAddedServicesProducts {
  public static final String JSON_PROPERTY_REPORTING = "reporting";
  private PaymentsProductsTax reporting;

  public static final String JSON_PROPERTY_TRANSACTION_SEARCH = "transactionSearch";
  private PaymentsProductsTax transactionSearch;

  public ValueAddedServicesProducts() {
  }

  public ValueAddedServicesProducts reporting(PaymentsProductsTax reporting) {
    
    this.reporting = reporting;
    return this;
  }

  /**
   * Get reporting
   * @return reporting
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getReporting() {
    return reporting;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReporting(PaymentsProductsTax reporting) {
    this.reporting = reporting;
  }

  public ValueAddedServicesProducts transactionSearch(PaymentsProductsTax transactionSearch) {
    
    this.transactionSearch = transactionSearch;
    return this;
  }

  /**
   * Get transactionSearch
   * @return transactionSearch
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentsProductsTax getTransactionSearch() {
    return transactionSearch;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionSearch(PaymentsProductsTax transactionSearch) {
    this.transactionSearch = transactionSearch;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValueAddedServicesProducts valueAddedServicesProducts = (ValueAddedServicesProducts) o;
    return Objects.equals(this.reporting, valueAddedServicesProducts.reporting) &&
        Objects.equals(this.transactionSearch, valueAddedServicesProducts.transactionSearch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reporting, transactionSearch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValueAddedServicesProducts {\n");
    sb.append("    reporting: ").append(toIndentedString(reporting)).append("\n");
    sb.append("    transactionSearch: ").append(toIndentedString(transactionSearch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

