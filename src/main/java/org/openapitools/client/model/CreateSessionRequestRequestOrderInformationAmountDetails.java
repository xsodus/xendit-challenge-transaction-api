/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSessionRequestRequestOrderInformationAmountDetails
 */
@JsonPropertyOrder({
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_TOTAL_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_CURRENCY,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_DISCOUNT_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_TAX_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_DUTY_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_EXCHANGE_RATE,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_EXCHANGE_RATE_TIME_STAMP,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_SETTLEMENT_CURRENCY,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_GIFTWRAP_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_HANDLING_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_SHIPPING_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_SHIPPING_DISCOUNT_AMOUNT,
  CreateSessionRequestRequestOrderInformationAmountDetails.JSON_PROPERTY_INSURANCE_AMOUNT
})
@JsonTypeName("CreateSessionRequest_request_orderInformation_amountDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateSessionRequestRequestOrderInformationAmountDetails {
  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private String totalAmount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_DISCOUNT_AMOUNT = "discountAmount";
  private String discountAmount;

  public static final String JSON_PROPERTY_TAX_AMOUNT = "taxAmount";
  private String taxAmount;

  public static final String JSON_PROPERTY_DUTY_AMOUNT = "dutyAmount";
  private String dutyAmount;

  public static final String JSON_PROPERTY_EXCHANGE_RATE = "exchangeRate";
  private String exchangeRate;

  public static final String JSON_PROPERTY_EXCHANGE_RATE_TIME_STAMP = "exchangeRateTimeStamp";
  private String exchangeRateTimeStamp;

  public static final String JSON_PROPERTY_SETTLEMENT_CURRENCY = "settlementCurrency";
  private String settlementCurrency;

  public static final String JSON_PROPERTY_GIFTWRAP_AMOUNT = "giftwrapAmount";
  private String giftwrapAmount;

  public static final String JSON_PROPERTY_HANDLING_AMOUNT = "handlingAmount";
  private String handlingAmount;

  public static final String JSON_PROPERTY_SHIPPING_AMOUNT = "shippingAmount";
  private String shippingAmount;

  public static final String JSON_PROPERTY_SHIPPING_DISCOUNT_AMOUNT = "shippingDiscountAmount";
  private String shippingDiscountAmount;

  public static final String JSON_PROPERTY_INSURANCE_AMOUNT = "insuranceAmount";
  private String insuranceAmount;

  public CreateSessionRequestRequestOrderInformationAmountDetails() {
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special characters. CyberSource truncates the amount to the correct number of decimal places.  **Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.  **Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths.  If your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen.   #### Card Present Required to include either this field or &#x60;orderInformation.lineItems[].unitPrice&#x60; for the order.  #### Invoicing Required for creating a new invoice.  #### PIN Debit Amount you requested for the PIN debit purchase. This value is returned for partial authorizations. The issuing bank can approve a partial amount if the balance on the debit card is less than the requested transaction amount.  Required field for PIN Debit purchase and PIN Debit credit requests. Optional field for PIN Debit reversal requests.  #### GPX This field is optional for reversing an authorization or credit; however, for all other processors, these fields are required.  #### DCC with a Third-Party Provider Set this field to the converted amount that was returned by the DCC provider. You must include either this field or the 1st line item in the order and the specific line-order amount in your request.   #### DCC for First Data Not used. 
   * @return totalAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails currency(String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Currency used for the order. Use the three-character [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)  #### Used by **Authorization** Required field.  **Authorization Reversal** For an authorization reversal (&#x60;reversalInformation&#x60;) or a capture (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60;), you must use the same currency that you used in your payment authorization request.  #### PIN Debit Currency for the amount you requested for the PIN debit purchase. This value is returned for partial authorizations. The issuing bank can approve a partial amount if the balance on the debit card is less than the requested transaction amount. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf). Returned by PIN debit purchase.  For PIN debit reversal requests, you must use the same currency that was used for the PIN debit purchase or PIN debit credit that you are reversing. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf).  Required field for PIN Debit purchase and PIN Debit credit requests. Optional field for PIN Debit reversal requests.  #### GPX This field is optional for reversing an authorization or credit.  #### DCC for First Data Your local currency.  #### Tax Calculation Required for international tax and value added tax only. Optional for U.S. and Canadian taxes. Your local currency. 
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails discountAmount(String discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * Total discount amount applied to the order. 
   * @return discountAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISCOUNT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscountAmount() {
    return discountAmount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscountAmount(String discountAmount) {
    this.discountAmount = discountAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails taxAmount(String taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Total tax amount for all the items in the order. 
   * @return taxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxAmount() {
    return taxAmount;
  }


  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxAmount(String taxAmount) {
    this.taxAmount = taxAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails dutyAmount(String dutyAmount) {
    
    this.dutyAmount = dutyAmount;
    return this;
  }

  /**
   * Total charges for any import or export duties included in the order. 
   * @return dutyAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDutyAmount() {
    return dutyAmount;
  }


  @JsonProperty(JSON_PROPERTY_DUTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDutyAmount(String dutyAmount) {
    this.dutyAmount = dutyAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails exchangeRate(String exchangeRate) {
    
    this.exchangeRate = exchangeRate;
    return this;
  }

  /**
   * Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places. 
   * @return exchangeRate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeRate() {
    return exchangeRate;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeRate(String exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails exchangeRateTimeStamp(String exchangeRateTimeStamp) {
    
    this.exchangeRateTimeStamp = exchangeRateTimeStamp;
    return this;
  }

  /**
   * Time stamp for the exchange rate. This value is returned by the DCC service.  Format: &#x60;YYYYMMDD~HH:MM&#x60;  where ~ denotes a space. 
   * @return exchangeRateTimeStamp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeRateTimeStamp() {
    return exchangeRateTimeStamp;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeRateTimeStamp(String exchangeRateTimeStamp) {
    this.exchangeRateTimeStamp = exchangeRateTimeStamp;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails settlementCurrency(String settlementCurrency) {
    
    this.settlementCurrency = settlementCurrency;
    return this;
  }

  /**
   * This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer to bill the cardholder&#39;s account. This field is returned for OCT transactions. 
   * @return settlementCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSettlementCurrency() {
    return settlementCurrency;
  }


  @JsonProperty(JSON_PROPERTY_SETTLEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails giftwrapAmount(String giftwrapAmount) {
    
    this.giftwrapAmount = giftwrapAmount;
    return this;
  }

  /**
   * giftwrap amount (RFU).
   * @return giftwrapAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GIFTWRAP_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGiftwrapAmount() {
    return giftwrapAmount;
  }


  @JsonProperty(JSON_PROPERTY_GIFTWRAP_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGiftwrapAmount(String giftwrapAmount) {
    this.giftwrapAmount = giftwrapAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails handlingAmount(String handlingAmount) {
    
    this.handlingAmount = handlingAmount;
    return this;
  }

  /**
   * handling amount (RFU)
   * @return handlingAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HANDLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHandlingAmount() {
    return handlingAmount;
  }


  @JsonProperty(JSON_PROPERTY_HANDLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHandlingAmount(String handlingAmount) {
    this.handlingAmount = handlingAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails shippingAmount(String shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

  /**
   * shipping amount (RFU)
   * @return shippingAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingAmount() {
    return shippingAmount;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAmount(String shippingAmount) {
    this.shippingAmount = shippingAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails shippingDiscountAmount(String shippingDiscountAmount) {
    
    this.shippingDiscountAmount = shippingDiscountAmount;
    return this;
  }

  /**
   * shipping discount amount (RFU)
   * @return shippingDiscountAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_DISCOUNT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShippingDiscountAmount() {
    return shippingDiscountAmount;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_DISCOUNT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingDiscountAmount(String shippingDiscountAmount) {
    this.shippingDiscountAmount = shippingDiscountAmount;
  }

  public CreateSessionRequestRequestOrderInformationAmountDetails insuranceAmount(String insuranceAmount) {
    
    this.insuranceAmount = insuranceAmount;
    return this;
  }

  /**
   * insurance amount (RFU)
   * @return insuranceAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSURANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInsuranceAmount() {
    return insuranceAmount;
  }


  @JsonProperty(JSON_PROPERTY_INSURANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsuranceAmount(String insuranceAmount) {
    this.insuranceAmount = insuranceAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSessionRequestRequestOrderInformationAmountDetails createSessionRequestRequestOrderInformationAmountDetails = (CreateSessionRequestRequestOrderInformationAmountDetails) o;
    return Objects.equals(this.totalAmount, createSessionRequestRequestOrderInformationAmountDetails.totalAmount) &&
        Objects.equals(this.currency, createSessionRequestRequestOrderInformationAmountDetails.currency) &&
        Objects.equals(this.discountAmount, createSessionRequestRequestOrderInformationAmountDetails.discountAmount) &&
        Objects.equals(this.taxAmount, createSessionRequestRequestOrderInformationAmountDetails.taxAmount) &&
        Objects.equals(this.dutyAmount, createSessionRequestRequestOrderInformationAmountDetails.dutyAmount) &&
        Objects.equals(this.exchangeRate, createSessionRequestRequestOrderInformationAmountDetails.exchangeRate) &&
        Objects.equals(this.exchangeRateTimeStamp, createSessionRequestRequestOrderInformationAmountDetails.exchangeRateTimeStamp) &&
        Objects.equals(this.settlementCurrency, createSessionRequestRequestOrderInformationAmountDetails.settlementCurrency) &&
        Objects.equals(this.giftwrapAmount, createSessionRequestRequestOrderInformationAmountDetails.giftwrapAmount) &&
        Objects.equals(this.handlingAmount, createSessionRequestRequestOrderInformationAmountDetails.handlingAmount) &&
        Objects.equals(this.shippingAmount, createSessionRequestRequestOrderInformationAmountDetails.shippingAmount) &&
        Objects.equals(this.shippingDiscountAmount, createSessionRequestRequestOrderInformationAmountDetails.shippingDiscountAmount) &&
        Objects.equals(this.insuranceAmount, createSessionRequestRequestOrderInformationAmountDetails.insuranceAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalAmount, currency, discountAmount, taxAmount, dutyAmount, exchangeRate, exchangeRateTimeStamp, settlementCurrency, giftwrapAmount, handlingAmount, shippingAmount, shippingDiscountAmount, insuranceAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSessionRequestRequestOrderInformationAmountDetails {\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    dutyAmount: ").append(toIndentedString(dutyAmount)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    exchangeRateTimeStamp: ").append(toIndentedString(exchangeRateTimeStamp)).append("\n");
    sb.append("    settlementCurrency: ").append(toIndentedString(settlementCurrency)).append("\n");
    sb.append("    giftwrapAmount: ").append(toIndentedString(giftwrapAmount)).append("\n");
    sb.append("    handlingAmount: ").append(toIndentedString(handlingAmount)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingDiscountAmount: ").append(toIndentedString(shippingDiscountAmount)).append("\n");
    sb.append("    insuranceAmount: ").append(toIndentedString(insuranceAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

