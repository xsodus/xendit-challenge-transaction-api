/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains all of the shipping-related fields for the invoice.
 */
@JsonPropertyOrder({
  CreateInvoiceRequestOrderInformationAmountDetailsFreight.JSON_PROPERTY_AMOUNT,
  CreateInvoiceRequestOrderInformationAmountDetailsFreight.JSON_PROPERTY_TAXABLE,
  CreateInvoiceRequestOrderInformationAmountDetailsFreight.JSON_PROPERTY_TAX_RATE
})
@JsonTypeName("createInvoice_request_orderInformation_amountDetails_freight")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateInvoiceRequestOrderInformationAmountDetailsFreight {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  private Boolean taxable;

  public static final String JSON_PROPERTY_TAX_RATE = "taxRate";
  private String taxRate;

  public CreateInvoiceRequestOrderInformationAmountDetailsFreight() {
  }

  public CreateInvoiceRequestOrderInformationAmountDetailsFreight amount(String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Total freight or shipping and handling charges for the order. When you include this field in your request, you must also include the **totalAmount** field. 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CreateInvoiceRequestOrderInformationAmountDetailsFreight taxable(Boolean taxable) {
    
    this.taxable = taxable;
    return this;
  }

  /**
   * Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values &gt; 0.  If you do not include any &#x60;lineItems[].taxAmount&#x60; values in your request, CyberSource does not include &#x60;invoiceDetails.taxable&#x60; in the data it sends to the processor.  Possible values:  - **true**  - **false** 
   * @return taxable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public CreateInvoiceRequestOrderInformationAmountDetailsFreight taxRate(String taxRate) {
    
    this.taxRate = taxRate;
    return this;
  }

  /**
   * Shipping Tax rate applied to the freight amount.  **Visa**: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional decimal places will be truncated).  **Mastercard**: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%). 
   * @return taxRate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxRate() {
    return taxRate;
  }


  @JsonProperty(JSON_PROPERTY_TAX_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxRate(String taxRate) {
    this.taxRate = taxRate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInvoiceRequestOrderInformationAmountDetailsFreight createInvoiceRequestOrderInformationAmountDetailsFreight = (CreateInvoiceRequestOrderInformationAmountDetailsFreight) o;
    return Objects.equals(this.amount, createInvoiceRequestOrderInformationAmountDetailsFreight.amount) &&
        Objects.equals(this.taxable, createInvoiceRequestOrderInformationAmountDetailsFreight.taxable) &&
        Objects.equals(this.taxRate, createInvoiceRequestOrderInformationAmountDetailsFreight.taxRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, taxable, taxRate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInvoiceRequestOrderInformationAmountDetailsFreight {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

