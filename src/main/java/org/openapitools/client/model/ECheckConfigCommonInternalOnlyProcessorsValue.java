/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Name of the payment processor. Example - \&quot;wellsfargoach\&quot;
 */
@JsonPropertyOrder({
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_ENABLE_C_C_S,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_TERMINAL_ID,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_ENABLE15AN_TRANSACTION_REFERENCE_NUMBER,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_PORTAL_SUPPORTED_PAYTYPES,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_SETTLEMENT_METHOD,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_VERIFICATION_LEVEL,
  ECheckConfigCommonInternalOnlyProcessorsValue.JSON_PROPERTY_SET_COMPLETED_STATE
})
@JsonTypeName("ECheckConfig_common_internalOnly_processors_value")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ECheckConfigCommonInternalOnlyProcessorsValue {
  public static final String JSON_PROPERTY_ENABLE_C_C_S = "enableCCS";
  private Boolean enableCCS;

  public static final String JSON_PROPERTY_TERMINAL_ID = "terminalId";
  private String terminalId;

  public static final String JSON_PROPERTY_ENABLE15AN_TRANSACTION_REFERENCE_NUMBER = "enable15anTransactionReferenceNumber";
  private Boolean enable15anTransactionReferenceNumber = true;

  public static final String JSON_PROPERTY_PORTAL_SUPPORTED_PAYTYPES = "portalSupportedPaytypes";
  private String portalSupportedPaytypes = "CHECK";

  public static final String JSON_PROPERTY_SETTLEMENT_METHOD = "settlementMethod";
  private Object settlementMethod;

  public static final String JSON_PROPERTY_VERIFICATION_LEVEL = "verificationLevel";
  private Object verificationLevel;

  public static final String JSON_PROPERTY_SET_COMPLETED_STATE = "setCompletedState";
  private Boolean setCompletedState = false;

  public ECheckConfigCommonInternalOnlyProcessorsValue() {
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue enableCCS(Boolean enableCCS) {
    
    this.enableCCS = enableCCS;
    return this;
  }

  /**
   * *NEW* Flag to indicate whether the processor is migrated to the Common Connectivity Services Platform. Applicable for VPC and amexdirect processors. 
   * @return enableCCS
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_C_C_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableCCS() {
    return enableCCS;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_C_C_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableCCS(Boolean enableCCS) {
    this.enableCCS = enableCCS;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue terminalId(String terminalId) {
    
    this.terminalId = terminalId;
    return this;
  }

  /**
   * *NEW* The &#39;Terminal Id&#39; aka TID, is an identifier used for with your payments processor. Depending on the processor and payment acceptance type this may also be the default Terminal ID used for Card Present and Virtual Terminal transactions. Applicable for VPC processors. 
   * @return terminalId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTerminalId() {
    return terminalId;
  }


  @JsonProperty(JSON_PROPERTY_TERMINAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTerminalId(String terminalId) {
    this.terminalId = terminalId;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue enable15anTransactionReferenceNumber(Boolean enable15anTransactionReferenceNumber) {
    
    this.enable15anTransactionReferenceNumber = enable15anTransactionReferenceNumber;
    return this;
  }

  /**
   * *NEW* This ensures the transaction reference # contains an identifier that can be viewed in CYBS
   * @return enable15anTransactionReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE15AN_TRANSACTION_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnable15anTransactionReferenceNumber() {
    return enable15anTransactionReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE15AN_TRANSACTION_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnable15anTransactionReferenceNumber(Boolean enable15anTransactionReferenceNumber) {
    this.enable15anTransactionReferenceNumber = enable15anTransactionReferenceNumber;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue portalSupportedPaytypes(String portalSupportedPaytypes) {
    
    this.portalSupportedPaytypes = portalSupportedPaytypes;
    return this;
  }

  /**
   * *NEW* This is used by the EBC2 application
   * @return portalSupportedPaytypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORTAL_SUPPORTED_PAYTYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortalSupportedPaytypes() {
    return portalSupportedPaytypes;
  }


  @JsonProperty(JSON_PROPERTY_PORTAL_SUPPORTED_PAYTYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortalSupportedPaytypes(String portalSupportedPaytypes) {
    this.portalSupportedPaytypes = portalSupportedPaytypes;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue settlementMethod(Object settlementMethod) {
    
    this.settlementMethod = settlementMethod;
    return this;
  }

  /**
   * *NEW*
   * @return settlementMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getSettlementMethod() {
    return settlementMethod;
  }


  @JsonProperty(JSON_PROPERTY_SETTLEMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementMethod(Object settlementMethod) {
    this.settlementMethod = settlementMethod;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue verificationLevel(Object verificationLevel) {
    
    this.verificationLevel = verificationLevel;
    return this;
  }

  /**
   * *NEW*
   * @return verificationLevel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getVerificationLevel() {
    return verificationLevel;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationLevel(Object verificationLevel) {
    this.verificationLevel = verificationLevel;
  }

  public ECheckConfigCommonInternalOnlyProcessorsValue setCompletedState(Boolean setCompletedState) {
    
    this.setCompletedState = setCompletedState;
    return this;
  }

  /**
   * *Moved* When set to Yes we will automatically update transactions to a completed status X-number of days after the transaction comes through; if no failure notification is received. When set to No means we will not update transaction status in this manner. For BAMS/Bank of America merchants, they should be set to No unless we are explicitly asked to set a merchant to YES.
   * @return setCompletedState
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SET_COMPLETED_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSetCompletedState() {
    return setCompletedState;
  }


  @JsonProperty(JSON_PROPERTY_SET_COMPLETED_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetCompletedState(Boolean setCompletedState) {
    this.setCompletedState = setCompletedState;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECheckConfigCommonInternalOnlyProcessorsValue echeckConfigCommonInternalOnlyProcessorsValue = (ECheckConfigCommonInternalOnlyProcessorsValue) o;
    return Objects.equals(this.enableCCS, echeckConfigCommonInternalOnlyProcessorsValue.enableCCS) &&
        Objects.equals(this.terminalId, echeckConfigCommonInternalOnlyProcessorsValue.terminalId) &&
        Objects.equals(this.enable15anTransactionReferenceNumber, echeckConfigCommonInternalOnlyProcessorsValue.enable15anTransactionReferenceNumber) &&
        Objects.equals(this.portalSupportedPaytypes, echeckConfigCommonInternalOnlyProcessorsValue.portalSupportedPaytypes) &&
        Objects.equals(this.settlementMethod, echeckConfigCommonInternalOnlyProcessorsValue.settlementMethod) &&
        Objects.equals(this.verificationLevel, echeckConfigCommonInternalOnlyProcessorsValue.verificationLevel) &&
        Objects.equals(this.setCompletedState, echeckConfigCommonInternalOnlyProcessorsValue.setCompletedState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableCCS, terminalId, enable15anTransactionReferenceNumber, portalSupportedPaytypes, settlementMethod, verificationLevel, setCompletedState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECheckConfigCommonInternalOnlyProcessorsValue {\n");
    sb.append("    enableCCS: ").append(toIndentedString(enableCCS)).append("\n");
    sb.append("    terminalId: ").append(toIndentedString(terminalId)).append("\n");
    sb.append("    enable15anTransactionReferenceNumber: ").append(toIndentedString(enable15anTransactionReferenceNumber)).append("\n");
    sb.append("    portalSupportedPaytypes: ").append(toIndentedString(portalSupportedPaytypes)).append("\n");
    sb.append("    settlementMethod: ").append(toIndentedString(settlementMethod)).append("\n");
    sb.append("    verificationLevel: ").append(toIndentedString(verificationLevel)).append("\n");
    sb.append("    setCompletedState: ").append(toIndentedString(setCompletedState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

