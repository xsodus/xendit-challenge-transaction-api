/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle
 */
@JsonPropertyOrder({
  InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle.JSON_PROPERTY_FONT_COLOR,
  InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle.JSON_PROPERTY_BACKGROUND_COLOR
})
@JsonTypeName("invoicingV2InvoiceSettingsGet200Response_invoiceSettingsInformation_headerStyle")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle {
  public static final String JSON_PROPERTY_FONT_COLOR = "fontColor";
  private String fontColor;

  public static final String JSON_PROPERTY_BACKGROUND_COLOR = "backgroundColor";
  private String backgroundColor;

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle() {
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle fontColor(String fontColor) {
    
    this.fontColor = fontColor;
    return this;
  }

  /**
   * The invoice font color. The format is a valid hexadecimal code prefixed with &#x60;#&#x60;, such as &#x60;#000000&#x60; for black.
   * @return fontColor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FONT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFontColor() {
    return fontColor;
  }


  @JsonProperty(JSON_PROPERTY_FONT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFontColor(String fontColor) {
    this.fontColor = fontColor;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle backgroundColor(String backgroundColor) {
    
    this.backgroundColor = backgroundColor;
    return this;
  }

  /**
   * The invoice background color. The format is a valid hexadecimal code prefixed with &#x60;#&#x60;, such as &#x60;#ffffff&#x60; for white.
   * @return backgroundColor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBackgroundColor() {
    return backgroundColor;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackgroundColor(String backgroundColor) {
    this.backgroundColor = backgroundColor;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle = (InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle) o;
    return Objects.equals(this.fontColor, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle.fontColor) &&
        Objects.equals(this.backgroundColor, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle.backgroundColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fontColor, backgroundColor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle {\n");
    sb.append("    fontColor: ").append(toIndentedString(fontColor)).append("\n");
    sb.append("    backgroundColor: ").append(toIndentedString(backgroundColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

