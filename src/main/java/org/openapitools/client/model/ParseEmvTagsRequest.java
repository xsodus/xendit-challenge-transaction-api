/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ParseEmvTagsRequestEmvDetailsListInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ParseEmvTagsRequest
 */
@JsonPropertyOrder({
  ParseEmvTagsRequest.JSON_PROPERTY_REQUESTOR,
  ParseEmvTagsRequest.JSON_PROPERTY_PARSED_TAG_LIMIT,
  ParseEmvTagsRequest.JSON_PROPERTY_EMV_DETAILS_LIST
})
@JsonTypeName("parseEmvTags_request")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class ParseEmvTagsRequest {
  public static final String JSON_PROPERTY_REQUESTOR = "requestor";
  private String requestor;

  public static final String JSON_PROPERTY_PARSED_TAG_LIMIT = "parsedTagLimit";
  private Integer parsedTagLimit;

  public static final String JSON_PROPERTY_EMV_DETAILS_LIST = "emvDetailsList";
  private List<ParseEmvTagsRequestEmvDetailsListInner> emvDetailsList = new ArrayList<>();

  public ParseEmvTagsRequest() {
  }

  public ParseEmvTagsRequest requestor(String requestor) {
    
    this.requestor = requestor;
    return this;
  }

  /**
   * Identifies the service requesting parsing 
   * @return requestor
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestor() {
    return requestor;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestor(String requestor) {
    this.requestor = requestor;
  }

  public ParseEmvTagsRequest parsedTagLimit(Integer parsedTagLimit) {
    
    this.parsedTagLimit = parsedTagLimit;
    return this;
  }

  /**
   * Number of tags to parse for each EMV tag string provided. 
   * @return parsedTagLimit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARSED_TAG_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getParsedTagLimit() {
    return parsedTagLimit;
  }


  @JsonProperty(JSON_PROPERTY_PARSED_TAG_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParsedTagLimit(Integer parsedTagLimit) {
    this.parsedTagLimit = parsedTagLimit;
  }

  public ParseEmvTagsRequest emvDetailsList(List<ParseEmvTagsRequestEmvDetailsListInner> emvDetailsList) {
    
    this.emvDetailsList = emvDetailsList;
    return this;
  }

  public ParseEmvTagsRequest addEmvDetailsListItem(ParseEmvTagsRequestEmvDetailsListInner emvDetailsListItem) {
    if (this.emvDetailsList == null) {
      this.emvDetailsList = new ArrayList<>();
    }
    this.emvDetailsList.add(emvDetailsListItem);
    return this;
  }

  /**
   * An array of objects, each containing a requestId and the corresponding emvRequestCombinedTags 
   * @return emvDetailsList
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMV_DETAILS_LIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ParseEmvTagsRequestEmvDetailsListInner> getEmvDetailsList() {
    return emvDetailsList;
  }


  @JsonProperty(JSON_PROPERTY_EMV_DETAILS_LIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmvDetailsList(List<ParseEmvTagsRequestEmvDetailsListInner> emvDetailsList) {
    this.emvDetailsList = emvDetailsList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParseEmvTagsRequest parseEmvTagsRequest = (ParseEmvTagsRequest) o;
    return Objects.equals(this.requestor, parseEmvTagsRequest.requestor) &&
        Objects.equals(this.parsedTagLimit, parseEmvTagsRequest.parsedTagLimit) &&
        Objects.equals(this.emvDetailsList, parseEmvTagsRequest.emvDetailsList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestor, parsedTagLimit, emvDetailsList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParseEmvTagsRequest {\n");
    sb.append("    requestor: ").append(toIndentedString(requestor)).append("\n");
    sb.append("    parsedTagLimit: ").append(toIndentedString(parsedTagLimit)).append("\n");
    sb.append("    emvDetailsList: ").append(toIndentedString(emvDetailsList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

