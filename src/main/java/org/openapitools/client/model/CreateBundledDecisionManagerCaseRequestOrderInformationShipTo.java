/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateBundledDecisionManagerCaseRequestOrderInformationShipTo
 */
@JsonPropertyOrder({
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_ADDRESS1,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_ADDRESS2,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_ADDRESS3,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_COUNTRY,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_DESTINATION_TYPES,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_LOCALITY,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_FIRST_NAME,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_LAST_NAME,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_MIDDLE_NAME,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_PHONE_NUMBER,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_POSTAL_CODE,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_DESTINATION_CODE,
  CreateBundledDecisionManagerCaseRequestOrderInformationShipTo.JSON_PROPERTY_METHOD
})
@JsonTypeName("createBundledDecisionManagerCase_request_orderInformation_shipTo")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateBundledDecisionManagerCaseRequestOrderInformationShipTo {
  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_ADDRESS3 = "address3";
  private String address3;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_DESTINATION_TYPES = "destinationTypes";
  private String destinationTypes;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_DESTINATION_CODE = "destinationCode";
  private Integer destinationCode;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo() {
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * First line of the shipping address.  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

  /**
   * Second line of the shipping address.  Optional field.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo address3(String address3) {
    
    this.address3 = address3;
    return this;
  }

  /**
   * Third line of the shipping address.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return address3
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress3() {
    return address3;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress3(String address3) {
    this.address3 = address3;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * State or province of the shipping address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) (maximum length: 2)   Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country of the shipping address. Use the two-character [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo destinationTypes(String destinationTypes) {
    
    this.destinationTypes = destinationTypes;
    return this;
  }

  /**
   * Shipping destination of item. Example: Commercial, Residential, Store 
   * @return destinationTypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestinationTypes() {
    return destinationTypes;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationTypes(String destinationTypes) {
    this.destinationTypes = destinationTypes;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * City of the shipping address.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return firstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return lastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

  /**
   * Middle name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return middleName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number associated with the shipping address.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Postal code for the shipping address. The postal code must consist of 5 to 9 digits.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  When the billing country is the U.S., the 9-digit postal code must follow this format: [5 digits][dash][4 digits]  Example 12345-6789  When the billing country is Canada, the 6-digit postal code must follow this format: [alpha][numeric][alpha][space][numeric][alpha][numeric]  Example A1B 2C3  #### American Express Direct Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the remaining value is longer than nine characters, the value is truncated starting from the right side. #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo destinationCode(Integer destinationCode) {
    
    this.destinationCode = destinationCode;
    return this;
  }

  /**
   * Indicates destination chosen for the transaction. Possible values: - 01- Ship to cardholder billing address - 02- Ship to another verified address on file with merchant - 03- Ship to address that is different than billing address - 04- Ship to store (store address should be populated on request) - 05- Digital goods - 06- Travel and event tickets, not shipped - 07- Other 
   * @return destinationCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDestinationCode() {
    return destinationCode;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationCode(Integer destinationCode) {
    this.destinationCode = destinationCode;
  }

  public CreateBundledDecisionManagerCaseRequestOrderInformationShipTo method(String method) {
    
    this.method = method;
    return this;
  }

  /**
   * Shipping method for the product. Possible values: - lowcost: Lowest-cost service - sameday: Courier or same-day service - oneday: Next-day or overnight service - twoday: Two-day service - threeday: Three-day service - pickup: Store pick-up - other: Other shipping method - none: No shipping method because product is a service or subscription Required for American Express SafeKey (U.S.). 
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(String method) {
    this.method = method;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBundledDecisionManagerCaseRequestOrderInformationShipTo createBundledDecisionManagerCaseRequestOrderInformationShipTo = (CreateBundledDecisionManagerCaseRequestOrderInformationShipTo) o;
    return Objects.equals(this.address1, createBundledDecisionManagerCaseRequestOrderInformationShipTo.address1) &&
        Objects.equals(this.address2, createBundledDecisionManagerCaseRequestOrderInformationShipTo.address2) &&
        Objects.equals(this.address3, createBundledDecisionManagerCaseRequestOrderInformationShipTo.address3) &&
        Objects.equals(this.administrativeArea, createBundledDecisionManagerCaseRequestOrderInformationShipTo.administrativeArea) &&
        Objects.equals(this.country, createBundledDecisionManagerCaseRequestOrderInformationShipTo.country) &&
        Objects.equals(this.destinationTypes, createBundledDecisionManagerCaseRequestOrderInformationShipTo.destinationTypes) &&
        Objects.equals(this.locality, createBundledDecisionManagerCaseRequestOrderInformationShipTo.locality) &&
        Objects.equals(this.firstName, createBundledDecisionManagerCaseRequestOrderInformationShipTo.firstName) &&
        Objects.equals(this.lastName, createBundledDecisionManagerCaseRequestOrderInformationShipTo.lastName) &&
        Objects.equals(this.middleName, createBundledDecisionManagerCaseRequestOrderInformationShipTo.middleName) &&
        Objects.equals(this.phoneNumber, createBundledDecisionManagerCaseRequestOrderInformationShipTo.phoneNumber) &&
        Objects.equals(this.postalCode, createBundledDecisionManagerCaseRequestOrderInformationShipTo.postalCode) &&
        Objects.equals(this.destinationCode, createBundledDecisionManagerCaseRequestOrderInformationShipTo.destinationCode) &&
        Objects.equals(this.method, createBundledDecisionManagerCaseRequestOrderInformationShipTo.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, address3, administrativeArea, country, destinationTypes, locality, firstName, lastName, middleName, phoneNumber, postalCode, destinationCode, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBundledDecisionManagerCaseRequestOrderInformationShipTo {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    destinationTypes: ").append(toIndentedString(destinationTypes)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    destinationCode: ").append(toIndentedString(destinationCode)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

