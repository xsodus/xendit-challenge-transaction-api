/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GenerateUnifiedCheckoutCaptureContextRequestCaptureMandate;
import org.openapitools.client.model.GenerateUnifiedCheckoutCaptureContextRequestCheckoutApiInitialization;
import org.openapitools.client.model.GenerateUnifiedCheckoutCaptureContextRequestOrderInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GenerateUnifiedCheckoutCaptureContextRequest
 */
@JsonPropertyOrder({
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_TARGET_ORIGINS,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_CLIENT_VERSION,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_ALLOWED_CARD_NETWORKS,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_ALLOWED_PAYMENT_TYPES,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_COUNTRY,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_LOCALE,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_CAPTURE_MANDATE,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_ORDER_INFORMATION,
  GenerateUnifiedCheckoutCaptureContextRequest.JSON_PROPERTY_CHECKOUT_API_INITIALIZATION
})
@JsonTypeName("generateUnifiedCheckoutCaptureContext_request")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class GenerateUnifiedCheckoutCaptureContextRequest {
  public static final String JSON_PROPERTY_TARGET_ORIGINS = "targetOrigins";
  private List<String> targetOrigins = new ArrayList<>();

  public static final String JSON_PROPERTY_CLIENT_VERSION = "clientVersion";
  private String clientVersion;

  public static final String JSON_PROPERTY_ALLOWED_CARD_NETWORKS = "allowedCardNetworks";
  private List<String> allowedCardNetworks = new ArrayList<>();

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_TYPES = "allowedPaymentTypes";
  private List<String> allowedPaymentTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_CAPTURE_MANDATE = "captureMandate";
  private GenerateUnifiedCheckoutCaptureContextRequestCaptureMandate captureMandate;

  public static final String JSON_PROPERTY_ORDER_INFORMATION = "orderInformation";
  private GenerateUnifiedCheckoutCaptureContextRequestOrderInformation orderInformation;

  public static final String JSON_PROPERTY_CHECKOUT_API_INITIALIZATION = "checkoutApiInitialization";
  private GenerateUnifiedCheckoutCaptureContextRequestCheckoutApiInitialization checkoutApiInitialization;

  public GenerateUnifiedCheckoutCaptureContextRequest() {
  }

  public GenerateUnifiedCheckoutCaptureContextRequest targetOrigins(List<String> targetOrigins) {
    
    this.targetOrigins = targetOrigins;
    return this;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest addTargetOriginsItem(String targetOriginsItem) {
    if (this.targetOrigins == null) {
      this.targetOrigins = new ArrayList<>();
    }
    this.targetOrigins.add(targetOriginsItem);
    return this;
  }

  /**
   * Get targetOrigins
   * @return targetOrigins
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTargetOrigins() {
    return targetOrigins;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetOrigins(List<String> targetOrigins) {
    this.targetOrigins = targetOrigins;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest clientVersion(String clientVersion) {
    
    this.clientVersion = clientVersion;
    return this;
  }

  /**
   * version number of Unified Checkout being used
   * @return clientVersion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientVersion() {
    return clientVersion;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientVersion(String clientVersion) {
    this.clientVersion = clientVersion;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest allowedCardNetworks(List<String> allowedCardNetworks) {
    
    this.allowedCardNetworks = allowedCardNetworks;
    return this;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest addAllowedCardNetworksItem(String allowedCardNetworksItem) {
    if (this.allowedCardNetworks == null) {
      this.allowedCardNetworks = new ArrayList<>();
    }
    this.allowedCardNetworks.add(allowedCardNetworksItem);
    return this;
  }

  /**
   * Get allowedCardNetworks
   * @return allowedCardNetworks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOWED_CARD_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAllowedCardNetworks() {
    return allowedCardNetworks;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_CARD_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowedCardNetworks(List<String> allowedCardNetworks) {
    this.allowedCardNetworks = allowedCardNetworks;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest allowedPaymentTypes(List<String> allowedPaymentTypes) {
    
    this.allowedPaymentTypes = allowedPaymentTypes;
    return this;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest addAllowedPaymentTypesItem(String allowedPaymentTypesItem) {
    if (this.allowedPaymentTypes == null) {
      this.allowedPaymentTypes = new ArrayList<>();
    }
    this.allowedPaymentTypes.add(allowedPaymentTypesItem);
    return this;
  }

  /**
   * Get allowedPaymentTypes
   * @return allowedPaymentTypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAllowedPaymentTypes() {
    return allowedPaymentTypes;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowedPaymentTypes(List<String> allowedPaymentTypes) {
    this.allowedPaymentTypes = allowedPaymentTypes;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country the purchase is originating from (e.g. country of the merchant). Use the two- character ISO Standard
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest locale(String locale) {
    
    this.locale = locale;
    return this;
  }

  /**
   * Localization of the User experience conforming to the ISO 639-1 language standards and two-character ISO Standard Country Code
   * @return locale
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest captureMandate(GenerateUnifiedCheckoutCaptureContextRequestCaptureMandate captureMandate) {
    
    this.captureMandate = captureMandate;
    return this;
  }

  /**
   * Get captureMandate
   * @return captureMandate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURE_MANDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenerateUnifiedCheckoutCaptureContextRequestCaptureMandate getCaptureMandate() {
    return captureMandate;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_MANDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptureMandate(GenerateUnifiedCheckoutCaptureContextRequestCaptureMandate captureMandate) {
    this.captureMandate = captureMandate;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest orderInformation(GenerateUnifiedCheckoutCaptureContextRequestOrderInformation orderInformation) {
    
    this.orderInformation = orderInformation;
    return this;
  }

  /**
   * Get orderInformation
   * @return orderInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenerateUnifiedCheckoutCaptureContextRequestOrderInformation getOrderInformation() {
    return orderInformation;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderInformation(GenerateUnifiedCheckoutCaptureContextRequestOrderInformation orderInformation) {
    this.orderInformation = orderInformation;
  }

  public GenerateUnifiedCheckoutCaptureContextRequest checkoutApiInitialization(GenerateUnifiedCheckoutCaptureContextRequestCheckoutApiInitialization checkoutApiInitialization) {
    
    this.checkoutApiInitialization = checkoutApiInitialization;
    return this;
  }

  /**
   * Get checkoutApiInitialization
   * @return checkoutApiInitialization
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECKOUT_API_INITIALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenerateUnifiedCheckoutCaptureContextRequestCheckoutApiInitialization getCheckoutApiInitialization() {
    return checkoutApiInitialization;
  }


  @JsonProperty(JSON_PROPERTY_CHECKOUT_API_INITIALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckoutApiInitialization(GenerateUnifiedCheckoutCaptureContextRequestCheckoutApiInitialization checkoutApiInitialization) {
    this.checkoutApiInitialization = checkoutApiInitialization;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateUnifiedCheckoutCaptureContextRequest generateUnifiedCheckoutCaptureContextRequest = (GenerateUnifiedCheckoutCaptureContextRequest) o;
    return Objects.equals(this.targetOrigins, generateUnifiedCheckoutCaptureContextRequest.targetOrigins) &&
        Objects.equals(this.clientVersion, generateUnifiedCheckoutCaptureContextRequest.clientVersion) &&
        Objects.equals(this.allowedCardNetworks, generateUnifiedCheckoutCaptureContextRequest.allowedCardNetworks) &&
        Objects.equals(this.allowedPaymentTypes, generateUnifiedCheckoutCaptureContextRequest.allowedPaymentTypes) &&
        Objects.equals(this.country, generateUnifiedCheckoutCaptureContextRequest.country) &&
        Objects.equals(this.locale, generateUnifiedCheckoutCaptureContextRequest.locale) &&
        Objects.equals(this.captureMandate, generateUnifiedCheckoutCaptureContextRequest.captureMandate) &&
        Objects.equals(this.orderInformation, generateUnifiedCheckoutCaptureContextRequest.orderInformation) &&
        Objects.equals(this.checkoutApiInitialization, generateUnifiedCheckoutCaptureContextRequest.checkoutApiInitialization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetOrigins, clientVersion, allowedCardNetworks, allowedPaymentTypes, country, locale, captureMandate, orderInformation, checkoutApiInitialization);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateUnifiedCheckoutCaptureContextRequest {\n");
    sb.append("    targetOrigins: ").append(toIndentedString(targetOrigins)).append("\n");
    sb.append("    clientVersion: ").append(toIndentedString(clientVersion)).append("\n");
    sb.append("    allowedCardNetworks: ").append(toIndentedString(allowedCardNetworks)).append("\n");
    sb.append("    allowedPaymentTypes: ").append(toIndentedString(allowedPaymentTypes)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    captureMandate: ").append(toIndentedString(captureMandate)).append("\n");
    sb.append("    orderInformation: ").append(toIndentedString(orderInformation)).append("\n");
    sb.append("    checkoutApiInitialization: ").append(toIndentedString(checkoutApiInitialization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

