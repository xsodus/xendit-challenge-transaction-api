/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer
 */
@JsonPropertyOrder({
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_CODE,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_NAME,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_ADDRESS,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_LOCALITY,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_POSTAL_CODE,
  CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer.JSON_PROPERTY_COUNTRY
})
@JsonTypeName("createPayment_request_travelInformation_transit_airline_ticketIssuer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer() {
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer code(String code) {
    
    this.code = code;
    return this;
  }

  /**
   * IATA2 airline code. Format: English characters only. Required for Mastercard; optional for all other card types. 
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name of the ticket issuer. If you do not include this field, CyberSource uses the value for your merchant name that is in the CyberSource merchant configuration database. 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer address(String address) {
    
    this.address = address;
    return this;
  }

  /**
   * Address of the company issuing the ticket. 
   * @return address
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(String address) {
    this.address = address;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * City in which the transaction occurred. If the name of the city exceeds 18 characters, use meaningful abbreviations. Format: English characters only. Optional request field. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * State in which transaction occured. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Zip code of the city in which transaction occured. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country in which transaction occured. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer createPaymentRequestTravelInformationTransitAirlineTicketIssuer = (CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer) o;
    return Objects.equals(this.code, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.code) &&
        Objects.equals(this.name, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.name) &&
        Objects.equals(this.address, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.address) &&
        Objects.equals(this.locality, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.locality) &&
        Objects.equals(this.administrativeArea, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.administrativeArea) &&
        Objects.equals(this.postalCode, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.postalCode) &&
        Objects.equals(this.country, createPaymentRequestTravelInformationTransitAirlineTicketIssuer.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, address, locality, administrativeArea, postalCode, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestTravelInformationTransitAirlineTicketIssuer {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

