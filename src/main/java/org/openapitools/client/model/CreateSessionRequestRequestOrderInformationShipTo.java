/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSessionRequestRequestOrderInformationShipTo
 */
@JsonPropertyOrder({
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_EMAIL,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_TITLE,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_FIRST_NAME,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_MIDDLE_NAME,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_LAST_NAME,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_COMPANY,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_ADDRESS1,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_ADDRESS2,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_DISTRICT,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_LOCALITY,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_POSTAL_CODE,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_COUNTRY,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_BUILDING_NUMBER,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_PHONE_NUMBER,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_IMMUTABLE,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_NOT_APPLICABLE,
  CreateSessionRequestRequestOrderInformationShipTo.JSON_PROPERTY_COUNTY
})
@JsonTypeName("CreateSessionRequest_request_orderInformation_shipTo")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateSessionRequestRequestOrderInformationShipTo {
  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_COMPANY = "company";
  private String company;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_DISTRICT = "district";
  private String district;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_BUILDING_NUMBER = "buildingNumber";
  private String buildingNumber;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  public static final String JSON_PROPERTY_IMMUTABLE = "immutable";
  private String immutable;

  public static final String JSON_PROPERTY_NOT_APPLICABLE = "notApplicable";
  private String notApplicable;

  public static final String JSON_PROPERTY_COUNTY = "county";
  private String county;

  public CreateSessionRequestRequestOrderInformationShipTo() {
  }

  public CreateSessionRequestRequestOrderInformationShipTo email(String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Customer&#39;s primary email address, including the full domain name. 
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }

  public CreateSessionRequestRequestOrderInformationShipTo title(String title) {
    
    this.title = title;
    return this;
  }

  /**
   * The title of the person receiving the product.
   * @return title
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }

  public CreateSessionRequestRequestOrderInformationShipTo firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return firstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public CreateSessionRequestRequestOrderInformationShipTo middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

  /**
   * Middle name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return middleName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public CreateSessionRequestRequestOrderInformationShipTo lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 
   * @return lastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CreateSessionRequestRequestOrderInformationShipTo company(String company) {
    
    this.company = company;
    return this;
  }

  /**
   * Name of the customer&#39;s company. 
   * @return company
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompany() {
    return company;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompany(String company) {
    this.company = company;
  }

  public CreateSessionRequestRequestOrderInformationShipTo address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * First line of the shipping address.  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public CreateSessionRequestRequestOrderInformationShipTo address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

  /**
   * Second line of the shipping address.  Optional field.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public CreateSessionRequestRequestOrderInformationShipTo district(String district) {
    
    this.district = district;
    return this;
  }

  /**
   * Neighborhood, community, or region within a city or municipality.
   * @return district
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTRICT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDistrict() {
    return district;
  }


  @JsonProperty(JSON_PROPERTY_DISTRICT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistrict(String district) {
    this.district = district;
  }

  public CreateSessionRequestRequestOrderInformationShipTo locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * City of the shipping address.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CreateSessionRequestRequestOrderInformationShipTo administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * State or province of the shipping address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) (maximum length: 2)   Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public CreateSessionRequestRequestOrderInformationShipTo postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Postal code for the shipping address. The postal code must consist of 5 to 9 digits.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  When the billing country is the U.S., the 9-digit postal code must follow this format: [5 digits][dash][4 digits]  Example 12345-6789  When the billing country is Canada, the 6-digit postal code must follow this format: [alpha][numeric][alpha][space][numeric][alpha][numeric]  Example A1B 2C3  #### American Express Direct Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the remaining value is longer than nine characters, the value is truncated starting from the right side. #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CreateSessionRequestRequestOrderInformationShipTo country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country of the shipping address. Use the two-character [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. Billing address objects will be used to determine the cardholder&#39;s location when shipTo objects are not present. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public CreateSessionRequestRequestOrderInformationShipTo buildingNumber(String buildingNumber) {
    
    this.buildingNumber = buildingNumber;
    return this;
  }

  /**
   * Building number in the street address. For example, the building number is 187 in the following address:  Rua da Quitanda 187 
   * @return buildingNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILDING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildingNumber() {
    return buildingNumber;
  }


  @JsonProperty(JSON_PROPERTY_BUILDING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildingNumber(String buildingNumber) {
    this.buildingNumber = buildingNumber;
  }

  public CreateSessionRequestRequestOrderInformationShipTo phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number associated with the shipping address.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public CreateSessionRequestRequestOrderInformationShipTo immutable(String immutable) {
    
    this.immutable = immutable;
    return this;
  }

  /**
   * Indicates whether customers are permitted to edit the shipping address in their PayPal account. Possible values: - true: Customer cannot edit the shipping address. - false (default): Customer can edit the shipping address. 
   * @return immutable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMMUTABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImmutable() {
    return immutable;
  }


  @JsonProperty(JSON_PROPERTY_IMMUTABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImmutable(String immutable) {
    this.immutable = immutable;
  }

  public CreateSessionRequestRequestOrderInformationShipTo notApplicable(String notApplicable) {
    
    this.notApplicable = notApplicable;
    return this;
  }

  /**
   * Indicates whether the shipping address is displayed to the customer in their PayPal account. Possible values: - true: Shipping address is not displayed. - false (default): Shipping address is displayed. For example, for digital downloads and services in which a shipping address is not required, set the value to true. 
   * @return notApplicable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOT_APPLICABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotApplicable() {
    return notApplicable;
  }


  @JsonProperty(JSON_PROPERTY_NOT_APPLICABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotApplicable(String notApplicable) {
    this.notApplicable = notApplicable;
  }

  public CreateSessionRequestRequestOrderInformationShipTo county(String county) {
    
    this.county = county;
    return this;
  }

  /**
   * U.S. county if available.
   * @return county
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCounty() {
    return county;
  }


  @JsonProperty(JSON_PROPERTY_COUNTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCounty(String county) {
    this.county = county;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSessionRequestRequestOrderInformationShipTo createSessionRequestRequestOrderInformationShipTo = (CreateSessionRequestRequestOrderInformationShipTo) o;
    return Objects.equals(this.email, createSessionRequestRequestOrderInformationShipTo.email) &&
        Objects.equals(this.title, createSessionRequestRequestOrderInformationShipTo.title) &&
        Objects.equals(this.firstName, createSessionRequestRequestOrderInformationShipTo.firstName) &&
        Objects.equals(this.middleName, createSessionRequestRequestOrderInformationShipTo.middleName) &&
        Objects.equals(this.lastName, createSessionRequestRequestOrderInformationShipTo.lastName) &&
        Objects.equals(this.company, createSessionRequestRequestOrderInformationShipTo.company) &&
        Objects.equals(this.address1, createSessionRequestRequestOrderInformationShipTo.address1) &&
        Objects.equals(this.address2, createSessionRequestRequestOrderInformationShipTo.address2) &&
        Objects.equals(this.district, createSessionRequestRequestOrderInformationShipTo.district) &&
        Objects.equals(this.locality, createSessionRequestRequestOrderInformationShipTo.locality) &&
        Objects.equals(this.administrativeArea, createSessionRequestRequestOrderInformationShipTo.administrativeArea) &&
        Objects.equals(this.postalCode, createSessionRequestRequestOrderInformationShipTo.postalCode) &&
        Objects.equals(this.country, createSessionRequestRequestOrderInformationShipTo.country) &&
        Objects.equals(this.buildingNumber, createSessionRequestRequestOrderInformationShipTo.buildingNumber) &&
        Objects.equals(this.phoneNumber, createSessionRequestRequestOrderInformationShipTo.phoneNumber) &&
        Objects.equals(this.immutable, createSessionRequestRequestOrderInformationShipTo.immutable) &&
        Objects.equals(this.notApplicable, createSessionRequestRequestOrderInformationShipTo.notApplicable) &&
        Objects.equals(this.county, createSessionRequestRequestOrderInformationShipTo.county);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, title, firstName, middleName, lastName, company, address1, address2, district, locality, administrativeArea, postalCode, country, buildingNumber, phoneNumber, immutable, notApplicable, county);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSessionRequestRequestOrderInformationShipTo {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    immutable: ").append(toIndentedString(immutable)).append("\n");
    sb.append("    notApplicable: ").append(toIndentedString(notApplicable)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

