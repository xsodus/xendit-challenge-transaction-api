/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains all of the invoice-specific fields, such as the invoice number and due date.
 */
@JsonPropertyOrder({
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_INVOICE_NUMBER,
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_DESCRIPTION,
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_DUE_DATE,
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_SEND_IMMEDIATELY,
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_ALLOW_PARTIAL_PAYMENTS,
  CreateInvoiceRequestInvoiceInformation.JSON_PROPERTY_DELIVERY_MODE
})
@JsonTypeName("createInvoice_request_invoiceInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateInvoiceRequestInvoiceInformation {
  public static final String JSON_PROPERTY_INVOICE_NUMBER = "invoiceNumber";
  private String invoiceNumber;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DUE_DATE = "dueDate";
  private LocalDate dueDate;

  public static final String JSON_PROPERTY_SEND_IMMEDIATELY = "sendImmediately";
  private Boolean sendImmediately;

  public static final String JSON_PROPERTY_ALLOW_PARTIAL_PAYMENTS = "allowPartialPayments";
  private Boolean allowPartialPayments;

  public static final String JSON_PROPERTY_DELIVERY_MODE = "deliveryMode";
  private String deliveryMode;

  public CreateInvoiceRequestInvoiceInformation() {
  }

  public CreateInvoiceRequestInvoiceInformation invoiceNumber(String invoiceNumber) {
    
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Invoice Number.
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceNumber() {
    return invoiceNumber;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public CreateInvoiceRequestInvoiceInformation description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * The description included in the invoice.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  public CreateInvoiceRequestInvoiceInformation dueDate(LocalDate dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

  /**
   * The invoice due date. This field is required for creating an invoice. Format: &#x60;YYYY-MM-DD&#x60;, where &#x60;YYYY&#x60; &#x3D; year, &#x60;MM&#x60; &#x3D; month, and &#x60;DD&#x60; &#x3D; day 
   * @return dueDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDueDate() {
    return dueDate;
  }


  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDueDate(LocalDate dueDate) {
    this.dueDate = dueDate;
  }

  public CreateInvoiceRequestInvoiceInformation sendImmediately(Boolean sendImmediately) {
    
    this.sendImmediately = sendImmediately;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, we send the invoice immediately. If set to &#x60;false&#x60;, the invoice remains in draft mode.
   * @return sendImmediately
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_IMMEDIATELY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendImmediately() {
    return sendImmediately;
  }


  @JsonProperty(JSON_PROPERTY_SEND_IMMEDIATELY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendImmediately(Boolean sendImmediately) {
    this.sendImmediately = sendImmediately;
  }

  public CreateInvoiceRequestInvoiceInformation allowPartialPayments(Boolean allowPartialPayments) {
    
    this.allowPartialPayments = allowPartialPayments;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, the payer can make a partial invoice payment.
   * @return allowPartialPayments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_PARTIAL_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowPartialPayments() {
    return allowPartialPayments;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_PARTIAL_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowPartialPayments(Boolean allowPartialPayments) {
    this.allowPartialPayments = allowPartialPayments;
  }

  public CreateInvoiceRequestInvoiceInformation deliveryMode(String deliveryMode) {
    
    this.deliveryMode = deliveryMode;
    return this;
  }

  /**
   * If set to &#x60;None&#x60;, the invoice is created, and its status is set to &#39;CREATED&#39;, but no email is sent.    Possible values:        - &#x60;None&#x60;   - &#x60;Email&#x60;  
   * @return deliveryMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryMode() {
    return deliveryMode;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryMode(String deliveryMode) {
    this.deliveryMode = deliveryMode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInvoiceRequestInvoiceInformation createInvoiceRequestInvoiceInformation = (CreateInvoiceRequestInvoiceInformation) o;
    return Objects.equals(this.invoiceNumber, createInvoiceRequestInvoiceInformation.invoiceNumber) &&
        Objects.equals(this.description, createInvoiceRequestInvoiceInformation.description) &&
        Objects.equals(this.dueDate, createInvoiceRequestInvoiceInformation.dueDate) &&
        Objects.equals(this.sendImmediately, createInvoiceRequestInvoiceInformation.sendImmediately) &&
        Objects.equals(this.allowPartialPayments, createInvoiceRequestInvoiceInformation.allowPartialPayments) &&
        Objects.equals(this.deliveryMode, createInvoiceRequestInvoiceInformation.deliveryMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceNumber, description, dueDate, sendImmediately, allowPartialPayments, deliveryMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInvoiceRequestInvoiceInformation {\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    sendImmediately: ").append(toIndentedString(sendImmediately)).append("\n");
    sb.append("    allowPartialPayments: ").append(toIndentedString(allowPartialPayments)).append("\n");
    sb.append("    deliveryMode: ").append(toIndentedString(deliveryMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

