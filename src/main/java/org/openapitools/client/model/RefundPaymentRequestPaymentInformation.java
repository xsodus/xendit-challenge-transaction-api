/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationCustomer;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationFluidData;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationInstrumentIdentifier;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationLegacyToken;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationPaymentAccountReference;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationPaymentInstrument;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationShippingAddress;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationTokenizedCard;
import org.openapitools.client.model.RefundPaymentRequestPaymentInformationBank;
import org.openapitools.client.model.RefundPaymentRequestPaymentInformationCard;
import org.openapitools.client.model.RefundPaymentRequestPaymentInformationEWallet;
import org.openapitools.client.model.RefundPaymentRequestPaymentInformationPaymentType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefundPaymentRequestPaymentInformation
 */
@JsonPropertyOrder({
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_CARD,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_BANK,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_TOKENIZED_CARD,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_FLUID_DATA,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_CUSTOMER,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_INSTRUMENT,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_INSTRUMENT_IDENTIFIER,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_SHIPPING_ADDRESS,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_LEGACY_TOKEN,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_TYPE,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_E_WALLET,
  RefundPaymentRequestPaymentInformation.JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE
})
@JsonTypeName("refundPayment_request_paymentInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class RefundPaymentRequestPaymentInformation {
  public static final String JSON_PROPERTY_CARD = "card";
  private RefundPaymentRequestPaymentInformationCard card;

  public static final String JSON_PROPERTY_BANK = "bank";
  private RefundPaymentRequestPaymentInformationBank bank;

  public static final String JSON_PROPERTY_TOKENIZED_CARD = "tokenizedCard";
  private CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard;

  public static final String JSON_PROPERTY_FLUID_DATA = "fluidData";
  private CreatePaymentRequestPaymentInformationFluidData fluidData;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CreatePaymentRequestPaymentInformationCustomer customer;

  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT = "paymentInstrument";
  private CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument;

  public static final String JSON_PROPERTY_INSTRUMENT_IDENTIFIER = "instrumentIdentifier";
  private CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shippingAddress";
  private CreatePaymentRequestPaymentInformationShippingAddress shippingAddress;

  public static final String JSON_PROPERTY_LEGACY_TOKEN = "legacyToken";
  private CreatePaymentRequestPaymentInformationLegacyToken legacyToken;

  public static final String JSON_PROPERTY_PAYMENT_TYPE = "paymentType";
  private RefundPaymentRequestPaymentInformationPaymentType paymentType;

  public static final String JSON_PROPERTY_E_WALLET = "eWallet";
  private RefundPaymentRequestPaymentInformationEWallet eWallet;

  public static final String JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE = "paymentAccountReference";
  private CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference;

  public RefundPaymentRequestPaymentInformation() {
  }

  public RefundPaymentRequestPaymentInformation card(RefundPaymentRequestPaymentInformationCard card) {
    
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RefundPaymentRequestPaymentInformationCard getCard() {
    return card;
  }


  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCard(RefundPaymentRequestPaymentInformationCard card) {
    this.card = card;
  }

  public RefundPaymentRequestPaymentInformation bank(RefundPaymentRequestPaymentInformationBank bank) {
    
    this.bank = bank;
    return this;
  }

  /**
   * Get bank
   * @return bank
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RefundPaymentRequestPaymentInformationBank getBank() {
    return bank;
  }


  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBank(RefundPaymentRequestPaymentInformationBank bank) {
    this.bank = bank;
  }

  public RefundPaymentRequestPaymentInformation tokenizedCard(CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard) {
    
    this.tokenizedCard = tokenizedCard;
    return this;
  }

  /**
   * Get tokenizedCard
   * @return tokenizedCard
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationTokenizedCard getTokenizedCard() {
    return tokenizedCard;
  }


  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenizedCard(CreatePaymentRequestPaymentInformationTokenizedCard tokenizedCard) {
    this.tokenizedCard = tokenizedCard;
  }

  public RefundPaymentRequestPaymentInformation fluidData(CreatePaymentRequestPaymentInformationFluidData fluidData) {
    
    this.fluidData = fluidData;
    return this;
  }

  /**
   * Get fluidData
   * @return fluidData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLUID_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationFluidData getFluidData() {
    return fluidData;
  }


  @JsonProperty(JSON_PROPERTY_FLUID_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFluidData(CreatePaymentRequestPaymentInformationFluidData fluidData) {
    this.fluidData = fluidData;
  }

  public RefundPaymentRequestPaymentInformation customer(CreatePaymentRequestPaymentInformationCustomer customer) {
    
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationCustomer getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(CreatePaymentRequestPaymentInformationCustomer customer) {
    this.customer = customer;
  }

  public RefundPaymentRequestPaymentInformation paymentInstrument(CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument) {
    
    this.paymentInstrument = paymentInstrument;
    return this;
  }

  /**
   * Get paymentInstrument
   * @return paymentInstrument
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationPaymentInstrument getPaymentInstrument() {
    return paymentInstrument;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrument(CreatePaymentRequestPaymentInformationPaymentInstrument paymentInstrument) {
    this.paymentInstrument = paymentInstrument;
  }

  public RefundPaymentRequestPaymentInformation instrumentIdentifier(CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier) {
    
    this.instrumentIdentifier = instrumentIdentifier;
    return this;
  }

  /**
   * Get instrumentIdentifier
   * @return instrumentIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationInstrumentIdentifier getInstrumentIdentifier() {
    return instrumentIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrumentIdentifier(CreatePaymentRequestPaymentInformationInstrumentIdentifier instrumentIdentifier) {
    this.instrumentIdentifier = instrumentIdentifier;
  }

  public RefundPaymentRequestPaymentInformation shippingAddress(CreatePaymentRequestPaymentInformationShippingAddress shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationShippingAddress getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(CreatePaymentRequestPaymentInformationShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public RefundPaymentRequestPaymentInformation legacyToken(CreatePaymentRequestPaymentInformationLegacyToken legacyToken) {
    
    this.legacyToken = legacyToken;
    return this;
  }

  /**
   * Get legacyToken
   * @return legacyToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGACY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationLegacyToken getLegacyToken() {
    return legacyToken;
  }


  @JsonProperty(JSON_PROPERTY_LEGACY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegacyToken(CreatePaymentRequestPaymentInformationLegacyToken legacyToken) {
    this.legacyToken = legacyToken;
  }

  public RefundPaymentRequestPaymentInformation paymentType(RefundPaymentRequestPaymentInformationPaymentType paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Get paymentType
   * @return paymentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RefundPaymentRequestPaymentInformationPaymentType getPaymentType() {
    return paymentType;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentType(RefundPaymentRequestPaymentInformationPaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public RefundPaymentRequestPaymentInformation eWallet(RefundPaymentRequestPaymentInformationEWallet eWallet) {
    
    this.eWallet = eWallet;
    return this;
  }

  /**
   * Get eWallet
   * @return eWallet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_E_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RefundPaymentRequestPaymentInformationEWallet geteWallet() {
    return eWallet;
  }


  @JsonProperty(JSON_PROPERTY_E_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void seteWallet(RefundPaymentRequestPaymentInformationEWallet eWallet) {
    this.eWallet = eWallet;
  }

  public RefundPaymentRequestPaymentInformation paymentAccountReference(CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference) {
    
    this.paymentAccountReference = paymentAccountReference;
    return this;
  }

  /**
   * Get paymentAccountReference
   * @return paymentAccountReference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationPaymentAccountReference getPaymentAccountReference() {
    return paymentAccountReference;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_ACCOUNT_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentAccountReference(CreatePaymentRequestPaymentInformationPaymentAccountReference paymentAccountReference) {
    this.paymentAccountReference = paymentAccountReference;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefundPaymentRequestPaymentInformation refundPaymentRequestPaymentInformation = (RefundPaymentRequestPaymentInformation) o;
    return Objects.equals(this.card, refundPaymentRequestPaymentInformation.card) &&
        Objects.equals(this.bank, refundPaymentRequestPaymentInformation.bank) &&
        Objects.equals(this.tokenizedCard, refundPaymentRequestPaymentInformation.tokenizedCard) &&
        Objects.equals(this.fluidData, refundPaymentRequestPaymentInformation.fluidData) &&
        Objects.equals(this.customer, refundPaymentRequestPaymentInformation.customer) &&
        Objects.equals(this.paymentInstrument, refundPaymentRequestPaymentInformation.paymentInstrument) &&
        Objects.equals(this.instrumentIdentifier, refundPaymentRequestPaymentInformation.instrumentIdentifier) &&
        Objects.equals(this.shippingAddress, refundPaymentRequestPaymentInformation.shippingAddress) &&
        Objects.equals(this.legacyToken, refundPaymentRequestPaymentInformation.legacyToken) &&
        Objects.equals(this.paymentType, refundPaymentRequestPaymentInformation.paymentType) &&
        Objects.equals(this.eWallet, refundPaymentRequestPaymentInformation.eWallet) &&
        Objects.equals(this.paymentAccountReference, refundPaymentRequestPaymentInformation.paymentAccountReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, bank, tokenizedCard, fluidData, customer, paymentInstrument, instrumentIdentifier, shippingAddress, legacyToken, paymentType, eWallet, paymentAccountReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundPaymentRequestPaymentInformation {\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    tokenizedCard: ").append(toIndentedString(tokenizedCard)).append("\n");
    sb.append("    fluidData: ").append(toIndentedString(fluidData)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    paymentInstrument: ").append(toIndentedString(paymentInstrument)).append("\n");
    sb.append("    instrumentIdentifier: ").append(toIndentedString(instrumentIdentifier)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    legacyToken: ").append(toIndentedString(legacyToken)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    eWallet: ").append(toIndentedString(eWallet)).append("\n");
    sb.append("    paymentAccountReference: ").append(toIndentedString(paymentAccountReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

