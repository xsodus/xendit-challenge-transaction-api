/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsReversalsPost201ResponseProcessorInformation
 */
@JsonPropertyOrder({
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_TRANSACTION_ID,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_RESPONSE_CODE,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_RESPONSE_CATEGORY_CODE,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_FORWARDED_ACQUIRER_CODE,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_MASTER_CARD_SERVICE_CODE,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_MASTER_CARD_SERVICE_REPLY_CODE,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_RESPONSE_DETAILS,
  PtsV2PaymentsReversalsPost201ResponseProcessorInformation.JSON_PROPERTY_PROVIDER_RESPONSE
})
@JsonTypeName("ptsV2PaymentsReversalsPost201Response_processorInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsReversalsPost201ResponseProcessorInformation {
  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  private String responseCode;

  public static final String JSON_PROPERTY_RESPONSE_CATEGORY_CODE = "responseCategoryCode";
  private String responseCategoryCode;

  public static final String JSON_PROPERTY_FORWARDED_ACQUIRER_CODE = "forwardedAcquirerCode";
  private String forwardedAcquirerCode;

  public static final String JSON_PROPERTY_MASTER_CARD_SERVICE_CODE = "masterCardServiceCode";
  private String masterCardServiceCode;

  public static final String JSON_PROPERTY_MASTER_CARD_SERVICE_REPLY_CODE = "masterCardServiceReplyCode";
  private String masterCardServiceReplyCode;

  public static final String JSON_PROPERTY_RESPONSE_DETAILS = "responseDetails";
  private String responseDetails;

  public static final String JSON_PROPERTY_PROVIDER_RESPONSE = "providerResponse";
  private String providerResponse;

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation() {
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Processor transaction ID.  This value identifies the transaction on a host system. This value is supported only for Moneris. It contains this information:   - Terminal used to process the transaction  - Shift during which the transaction took place  - Batch number  - Transaction number within the batch  You must store this value. If you give the customer a receipt, display this value on the receipt.  Example For the value 66012345001069003:   - Terminal ID &#x3D; 66012345  - Shift number &#x3D; 001  - Batch number &#x3D; 069  - Transaction number &#x3D; 003 
   * @return transactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation responseCode(String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * For most processors, this is the error message sent directly from the bank. Returned only when the processor returns this value.  **Important** Do not use this field to evaluate the result of the authorization.  #### PIN debit Response value that is returned by the processor or bank. **Important** Do not use this field to evaluate the results of the transaction request.  Returned by PIN debit credit, PIN debit purchase, and PIN debit reversal.  #### AIBMS If this value is &#x60;08&#x60;, you can accept the transaction if the customer provides you with identification.  #### Atos This value is the response code sent from Atos and it might also include the response code from the bank. Format: &#x60;aa,bb&#x60; with the two values separated by a comma and where: - &#x60;aa&#x60; is the two-digit error message from Atos. - &#x60;bb&#x60; is the optional two-digit error message from the bank.  #### Comercio Latino This value is the status code and the error or response code received from the processor separated by a colon. Format: [status code]:E[error code] or [status code]:R[response code] Example &#x60;2:R06&#x60;  #### JCN Gateway Processor-defined detail error code. The associated response category code is in the &#x60;processorInformation.responseCategoryCode&#x60; field. String (3) 
   * @return responseCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseCode(String responseCode) {
    this.responseCode = responseCode;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation responseCategoryCode(String responseCategoryCode) {
    
    this.responseCategoryCode = responseCategoryCode;
    return this;
  }

  /**
   * Processor-defined response category code. The associated detail error code is in the &#x60;processorInformation.responseCode&#x60; or &#x60;issuerInformation.responseCode&#x60; field of the service you requested.  This field is supported only for:   - Japanese issuers  - Domestic transactions in Japan  - Comercio Latinoâ€”processor transaction ID required for troubleshooting  #### Maximum length for processors   - Comercio Latino: 36  - All other processors: 3 
   * @return responseCategoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseCategoryCode() {
    return responseCategoryCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseCategoryCode(String responseCategoryCode) {
    this.responseCategoryCode = responseCategoryCode;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation forwardedAcquirerCode(String forwardedAcquirerCode) {
    
    this.forwardedAcquirerCode = forwardedAcquirerCode;
    return this;
  }

  /**
   * Name of the Japanese acquirer that processed the transaction. Returned only for JCN Gateway. Please contact the CyberSource Japan Support Group for more information. 
   * @return forwardedAcquirerCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORWARDED_ACQUIRER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForwardedAcquirerCode() {
    return forwardedAcquirerCode;
  }


  @JsonProperty(JSON_PROPERTY_FORWARDED_ACQUIRER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForwardedAcquirerCode(String forwardedAcquirerCode) {
    this.forwardedAcquirerCode = forwardedAcquirerCode;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation masterCardServiceCode(String masterCardServiceCode) {
    
    this.masterCardServiceCode = masterCardServiceCode;
    return this;
  }

  /**
   * Mastercard service that was used for the transaction. Mastercard provides this value to CyberSource.  Possible value:  - 53: Mastercard card-on-file token service  #### CyberSource through VisaNet The value for this field corresponds to the following data in the TC 33 capture file: - Record: CP01 TCR6 - Position: 133-134 - Field: Mastercard Merchant on-behalf service. **Note** This field is returned only for CyberSource through VisaNet. 
   * @return masterCardServiceCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASTER_CARD_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMasterCardServiceCode() {
    return masterCardServiceCode;
  }


  @JsonProperty(JSON_PROPERTY_MASTER_CARD_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMasterCardServiceCode(String masterCardServiceCode) {
    this.masterCardServiceCode = masterCardServiceCode;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation masterCardServiceReplyCode(String masterCardServiceReplyCode) {
    
    this.masterCardServiceReplyCode = masterCardServiceReplyCode;
    return this;
  }

  /**
   * Result of the Mastercard card-on-file token service. Mastercard provides this value to CyberSource.  Possible values:   - &#x60;C&#x60;: Service completed successfully.  - &#x60;F&#x60;: One of the following:    - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 81 for an authorization or      authorization reversal.    - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 01 for a tokenized request.    - Token requestor ID is missing or formatted incorrectly.  - &#x60;I&#x60;: One of the following:    - Invalid token requestor ID.    - Suspended or deactivated token.    - Invalid token (not in mapping table).  - &#x60;T&#x60;: Invalid combination of token requestor ID and token.  - &#x60;U&#x60;: Expired token.  - &#x60;W&#x60;: Primary account number (PAN) listed in electronic warning bulletin.  **Note** This field is returned only for **CyberSource through VisaNet**. 
   * @return masterCardServiceReplyCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASTER_CARD_SERVICE_REPLY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMasterCardServiceReplyCode() {
    return masterCardServiceReplyCode;
  }


  @JsonProperty(JSON_PROPERTY_MASTER_CARD_SERVICE_REPLY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMasterCardServiceReplyCode(String masterCardServiceReplyCode) {
    this.masterCardServiceReplyCode = masterCardServiceReplyCode;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation responseDetails(String responseDetails) {
    
    this.responseDetails = responseDetails;
    return this;
  }

  /**
   * This field might contain information about a decline. This field is supported only for **CyberSource through VisaNet**. 
   * @return responseDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseDetails() {
    return responseDetails;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseDetails(String responseDetails) {
    this.responseDetails = responseDetails;
  }

  public PtsV2PaymentsReversalsPost201ResponseProcessorInformation providerResponse(String providerResponse) {
    
    this.providerResponse = providerResponse;
    return this;
  }

  /**
   * Processor response to the API request. 
   * @return providerResponse
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProviderResponse() {
    return providerResponse;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderResponse(String providerResponse) {
    this.providerResponse = providerResponse;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsReversalsPost201ResponseProcessorInformation ptsV2PaymentsReversalsPost201ResponseProcessorInformation = (PtsV2PaymentsReversalsPost201ResponseProcessorInformation) o;
    return Objects.equals(this.transactionId, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.transactionId) &&
        Objects.equals(this.responseCode, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.responseCode) &&
        Objects.equals(this.responseCategoryCode, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.responseCategoryCode) &&
        Objects.equals(this.forwardedAcquirerCode, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.forwardedAcquirerCode) &&
        Objects.equals(this.masterCardServiceCode, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.masterCardServiceCode) &&
        Objects.equals(this.masterCardServiceReplyCode, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.masterCardServiceReplyCode) &&
        Objects.equals(this.responseDetails, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.responseDetails) &&
        Objects.equals(this.providerResponse, ptsV2PaymentsReversalsPost201ResponseProcessorInformation.providerResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, responseCode, responseCategoryCode, forwardedAcquirerCode, masterCardServiceCode, masterCardServiceReplyCode, responseDetails, providerResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsReversalsPost201ResponseProcessorInformation {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    responseCategoryCode: ").append(toIndentedString(responseCategoryCode)).append("\n");
    sb.append("    forwardedAcquirerCode: ").append(toIndentedString(forwardedAcquirerCode)).append("\n");
    sb.append("    masterCardServiceCode: ").append(toIndentedString(masterCardServiceCode)).append("\n");
    sb.append("    masterCardServiceReplyCode: ").append(toIndentedString(masterCardServiceReplyCode)).append("\n");
    sb.append("    responseDetails: ").append(toIndentedString(responseDetails)).append("\n");
    sb.append("    providerResponse: ").append(toIndentedString(providerResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

