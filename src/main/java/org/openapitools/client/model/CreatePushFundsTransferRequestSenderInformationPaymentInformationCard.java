/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePushFundsTransferRequestSenderInformationPaymentInformationCard
 */
@JsonPropertyOrder({
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_TYPE,
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_SECURITY_CODE,
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_SOURCE_ACCOUNT_TYPE,
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_NUMBER,
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_EXPIRATION_MONTH,
  CreatePushFundsTransferRequestSenderInformationPaymentInformationCard.JSON_PROPERTY_EXPIRATION_YEAR
})
@JsonTypeName("createPushFundsTransfer_request_senderInformation_paymentInformation_card")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePushFundsTransferRequestSenderInformationPaymentInformationCard {
  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SECURITY_CODE = "securityCode";
  private JsonNullable<String> securityCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOURCE_ACCOUNT_TYPE = "sourceAccountType";
  private JsonNullable<String> sourceAccountType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NUMBER = "number";
  private JsonNullable<String> number = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRATION_MONTH = "expirationMonth";
  private JsonNullable<String> expirationMonth = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRATION_YEAR = "expirationYear";
  private JsonNullable<String> expirationYear = JsonNullable.<String>undefined();

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard() {
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard type(String type) {
    this.type = JsonNullable.<String>of(type);
    
    return this;
  }

  /**
   * Three-digit value that indicates the card type.  IMPORTANT It is strongly recommended that you include the card type field in request messages even if it is optional for your processor and card type. Omitting the card type can cause the transaction to be processed with the wrong card type.  Possible values:  - &#x60;001&#x60;: Visa. For card-present transactions on all processors except SIX, the Visa Electron card type is processed the same way that the Visa debit card is processed. Use card type value 001 for Visa Electron. - &#x60;002&#x60;: Mastercard, Eurocard[^1], which is a European regional brand of Mastercard. 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(String type) {
    this.type = JsonNullable.<String>of(type);
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard securityCode(String securityCode) {
    this.securityCode = JsonNullable.<String>of(securityCode);
    
    return this;
  }

  /**
   * 3-digit value that indicates the card Cvv2Value. Values can be 0-9. 
   * @return securityCode
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSecurityCode() {
        return securityCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSecurityCode_JsonNullable() {
    return securityCode;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_CODE)
  public void setSecurityCode_JsonNullable(JsonNullable<String> securityCode) {
    this.securityCode = securityCode;
  }

  public void setSecurityCode(String securityCode) {
    this.securityCode = JsonNullable.<String>of(securityCode);
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard sourceAccountType(String sourceAccountType) {
    this.sourceAccountType = JsonNullable.<String>of(sourceAccountType);
    
    return this;
  }

  /**
   * Flag that specifies the type of account associated with the card. The cardholder provides this information during the payment process. 
   * @return sourceAccountType
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSourceAccountType() {
        return sourceAccountType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSourceAccountType_JsonNullable() {
    return sourceAccountType;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_ACCOUNT_TYPE)
  public void setSourceAccountType_JsonNullable(JsonNullable<String> sourceAccountType) {
    this.sourceAccountType = sourceAccountType;
  }

  public void setSourceAccountType(String sourceAccountType) {
    this.sourceAccountType = JsonNullable.<String>of(sourceAccountType);
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard number(String number) {
    this.number = JsonNullable.<String>of(number);
    
    return this;
  }

  /**
   * The customer&#39;s payment card number, also known as the Primary Account Number (PAN). 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getNumber() {
        return number.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNumber_JsonNullable() {
    return number;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER)
  public void setNumber_JsonNullable(JsonNullable<String> number) {
    this.number = number;
  }

  public void setNumber(String number) {
    this.number = JsonNullable.<String>of(number);
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard expirationMonth(String expirationMonth) {
    this.expirationMonth = JsonNullable.<String>of(expirationMonth);
    
    return this;
  }

  /**
   * Two-digit month in which the payment card expires.  Format: MM.  Valid values: 01 through 12. Leading 0 is required. 
   * @return expirationMonth
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getExpirationMonth() {
        return expirationMonth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpirationMonth_JsonNullable() {
    return expirationMonth;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH)
  public void setExpirationMonth_JsonNullable(JsonNullable<String> expirationMonth) {
    this.expirationMonth = expirationMonth;
  }

  public void setExpirationMonth(String expirationMonth) {
    this.expirationMonth = JsonNullable.<String>of(expirationMonth);
  }

  public CreatePushFundsTransferRequestSenderInformationPaymentInformationCard expirationYear(String expirationYear) {
    this.expirationYear = JsonNullable.<String>of(expirationYear);
    
    return this;
  }

  /**
   * Four-digit year in which the payment card expires. 
   * @return expirationYear
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getExpirationYear() {
        return expirationYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpirationYear_JsonNullable() {
    return expirationYear;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR)
  public void setExpirationYear_JsonNullable(JsonNullable<String> expirationYear) {
    this.expirationYear = expirationYear;
  }

  public void setExpirationYear(String expirationYear) {
    this.expirationYear = JsonNullable.<String>of(expirationYear);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePushFundsTransferRequestSenderInformationPaymentInformationCard createPushFundsTransferRequestSenderInformationPaymentInformationCard = (CreatePushFundsTransferRequestSenderInformationPaymentInformationCard) o;
    return equalsNullable(this.type, createPushFundsTransferRequestSenderInformationPaymentInformationCard.type) &&
        equalsNullable(this.securityCode, createPushFundsTransferRequestSenderInformationPaymentInformationCard.securityCode) &&
        equalsNullable(this.sourceAccountType, createPushFundsTransferRequestSenderInformationPaymentInformationCard.sourceAccountType) &&
        equalsNullable(this.number, createPushFundsTransferRequestSenderInformationPaymentInformationCard.number) &&
        equalsNullable(this.expirationMonth, createPushFundsTransferRequestSenderInformationPaymentInformationCard.expirationMonth) &&
        equalsNullable(this.expirationYear, createPushFundsTransferRequestSenderInformationPaymentInformationCard.expirationYear);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), hashCodeNullable(securityCode), hashCodeNullable(sourceAccountType), hashCodeNullable(number), hashCodeNullable(expirationMonth), hashCodeNullable(expirationYear));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePushFundsTransferRequestSenderInformationPaymentInformationCard {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("    sourceAccountType: ").append(toIndentedString(sourceAccountType)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    expirationMonth: ").append(toIndentedString(expirationMonth)).append("\n");
    sb.append("    expirationYear: ").append(toIndentedString(expirationYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

