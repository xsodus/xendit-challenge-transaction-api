/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsDeRegistrationRequestProcessingInformation
 */
@JsonPropertyOrder({
  BillingAgreementsDeRegistrationRequestProcessingInformation.JSON_PROPERTY_COMMERCE_INDICATOR,
  BillingAgreementsDeRegistrationRequestProcessingInformation.JSON_PROPERTY_ACTION_LIST
})
@JsonTypeName("billingAgreementsDeRegistration_request_processingInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsDeRegistrationRequestProcessingInformation {
  public static final String JSON_PROPERTY_COMMERCE_INDICATOR = "commerceIndicator";
  private String commerceIndicator;

  public static final String JSON_PROPERTY_ACTION_LIST = "actionList";
  private List<String> actionList = new ArrayList<>();

  public BillingAgreementsDeRegistrationRequestProcessingInformation() {
  }

  public BillingAgreementsDeRegistrationRequestProcessingInformation commerceIndicator(String commerceIndicator) {
    
    this.commerceIndicator = commerceIndicator;
    return this;
  }

  /**
   * Type of transaction. Used to determine fees based on channel.  Possible values:    - aesk: American Express SafeKey authentication was successful.   - aesk_attempted: American Express SafeKey authentication was attempted but did not succeed. • install: Installment payment.   - install_internet: Non-U.S. e-commerce (Internet) installment payment. This value is supported only on Visa Platform Connect.   - internet (default for authorizations): E-commerce order placed using a web site.   - js: JCB J/Secure authentication was successful.   - js_attempted: JCB J/Secure authentication was attempted but did not succeed.   - moto: Mail order or telephone order.   - moto_cc: Mail order or telephone order from a call center. This value is supported only on the Asia, Middle East, and Africa Gateway.   - pb: ProtectBuy authentication was successful.   - pb_attempted: ProtectBuy authentication was attempted but did not succeed.   - recurring: Recurring payment that is a U.S. transaction or non-U.S. mail order / telephone order (MOTO) transaction.   - recurring_internet: Recurring payment that is a non-U.S. e-commerce (Internet) transaction.   - retail: Card-present transaction.   - spa: For Mastercard Identity Check: Authentication was successful or was attempted but did not succeed. The e-commerce indicator for all Mastercard Identity Check transactions, including authentication attempts, must be set to spa.   - spa_attempted: Authentication for a co-badged Mastercard and Cartes Bancaires card was attempted but did not succeed.   - spa_failure: – For Mastercard Identity Check: Authentication failed. This value is supported only on Elavon, HSBC, and Streamline.   - vbv: – For Visa Secure: Authentication was successful.   - vbv_attempted: – For Visa Secure: Authentication was attempted but did not succeed.   - vbv_failure: – For Visa Secure: Authentication failed. This value is supported only on HSBC and Streamline. 
   * @return commerceIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMERCE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommerceIndicator() {
    return commerceIndicator;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommerceIndicator(String commerceIndicator) {
    this.commerceIndicator = commerceIndicator;
  }

  public BillingAgreementsDeRegistrationRequestProcessingInformation actionList(List<String> actionList) {
    
    this.actionList = actionList;
    return this;
  }

  public BillingAgreementsDeRegistrationRequestProcessingInformation addActionListItem(String actionListItem) {
    if (this.actionList == null) {
      this.actionList = new ArrayList<>();
    }
    this.actionList.add(actionListItem);
    return this;
  }

  /**
   * - Use &#x60;CONSUMER_AUTHENTICATION&#x60; to use Payer Authentication along with Decision Manager. For any other value, only Decision Manager will run. - Use &#x60;WATCHLIST_SCREENING&#x60;  when you want to call Watchlist Screening service. - Use &#x60;BILLING_AGREEMENT_CREATE&#x60; when Paypal billing agreements service is requested. - Use &#x60;UPDATE_AGREEMENT&#x60; - Use &#x60;CANCEL_AGREEMENT&#x60; - Use &#x60;AP_UPDATE_AGREEMENT&#x60; when Alternative Payment update mandate service is requested. - Use &#x60;AP_CANCEL_AGREEMENT&#x60; when Alternative Payment revoke mandate service is requested. - Use &#x60;AP_REFRESH_AGREEMENT_STATUS&#x60; when Alternative Payment mandate status service is requested. 
   * @return actionList
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getActionList() {
    return actionList;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionList(List<String> actionList) {
    this.actionList = actionList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsDeRegistrationRequestProcessingInformation billingAgreementsDeRegistrationRequestProcessingInformation = (BillingAgreementsDeRegistrationRequestProcessingInformation) o;
    return Objects.equals(this.commerceIndicator, billingAgreementsDeRegistrationRequestProcessingInformation.commerceIndicator) &&
        Objects.equals(this.actionList, billingAgreementsDeRegistrationRequestProcessingInformation.actionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commerceIndicator, actionList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsDeRegistrationRequestProcessingInformation {\n");
    sb.append("    commerceIndicator: ").append(toIndentedString(commerceIndicator)).append("\n");
    sb.append("    actionList: ").append(toIndentedString(actionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

