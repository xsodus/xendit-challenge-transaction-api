/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestInstallmentInformation
 */
@JsonPropertyOrder({
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_AMOUNT,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_FREQUENCY,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_PLAN_TYPE,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_SEQUENCE,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_TOTAL_AMOUNT,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_TOTAL_COUNT,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_FIRST_INSTALLMENT_DATE,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_INVOICE_DATA,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_PAYMENT_TYPE,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_ELIGIBILITY_INQUIRY,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_GRACE_PERIOD_DURATION,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_GRACE_PERIOD_DURATION_TYPE,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_FIRST_INSTALLMENT_AMOUNT,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_VALIDATION_INDICATOR,
  CreatePaymentRequestInstallmentInformation.JSON_PROPERTY_IDENTIFIER
})
@JsonTypeName("createPayment_request_installmentInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestInstallmentInformation {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private String frequency;

  public static final String JSON_PROPERTY_PLAN_TYPE = "planType";
  private String planType;

  public static final String JSON_PROPERTY_SEQUENCE = "sequence";
  private Integer sequence;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private String totalAmount;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public static final String JSON_PROPERTY_FIRST_INSTALLMENT_DATE = "firstInstallmentDate";
  private String firstInstallmentDate;

  public static final String JSON_PROPERTY_INVOICE_DATA = "invoiceData";
  private String invoiceData;

  public static final String JSON_PROPERTY_PAYMENT_TYPE = "paymentType";
  private String paymentType;

  public static final String JSON_PROPERTY_ELIGIBILITY_INQUIRY = "eligibilityInquiry";
  private String eligibilityInquiry;

  public static final String JSON_PROPERTY_GRACE_PERIOD_DURATION = "gracePeriodDuration";
  private String gracePeriodDuration;

  public static final String JSON_PROPERTY_GRACE_PERIOD_DURATION_TYPE = "gracePeriodDurationType";
  private String gracePeriodDurationType;

  public static final String JSON_PROPERTY_FIRST_INSTALLMENT_AMOUNT = "firstInstallmentAmount";
  private String firstInstallmentAmount;

  public static final String JSON_PROPERTY_VALIDATION_INDICATOR = "validationIndicator";
  private String validationIndicator;

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public CreatePaymentRequestInstallmentInformation() {
  }

  public CreatePaymentRequestInstallmentInformation amount(String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Amount for the current installment payment.  This field is supported only for CyberSource through VisaNet. 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CreatePaymentRequestInstallmentInformation frequency(String frequency) {
    
    this.frequency = frequency;
    return this;
  }

  /**
   * Frequency of the installment payments. When you do not include this field in a request for a Crediario installment payment, CyberSource sends a space character to the processor.  This field is supported only for CyberSource through VisaNet. Possible values: - &#x60;B&#x60;: Biweekly - &#x60;M&#x60;: Monthly - &#x60;W&#x60;: Weekly  For Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR9 - Position: 41 - Field: Installment Frequency 
   * @return frequency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }

  public CreatePaymentRequestInstallmentInformation planType(String planType) {
    
    this.planType = planType;
    return this;
  }

  /**
   * #### American Express Direct, Cielo, and CyberSource Latin American Processing Flag that indicates the type of funding for the installment plan associated with the payment.  Possible values: - &#x60;1&#x60;: Merchant-funded installment plan - &#x60;2&#x60;: Issuer-funded installment plan If you do not include this field in the request, CyberSource uses the value in your CyberSource account.  To change the value in your CyberSource account, contact CyberSource Customer Service.  #### CyberSource through VisaNet and American Express Defined code that indicates the type of installment plan for this transaction.  Contact American Express for: - Information about the kinds of installment plans that American Express provides - Values for this field  For installment payments with American Express in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP07 TCR3 - Position: 5-6 - Field: Plan Type  * The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant&#39;s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.  #### CyberSource through VisaNet with Visa or Mastercard Flag indicating the type of funding for the installment plan associated with the payment. Possible values: - 1 or 01: Merchant-funded installment plan - 2 or 02: Issuer-funded installment plan - 43: Crediario installment planâ€”only with Visa in Brazil  For installment payments with Visa in Brazil, the value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 5-6 - Field: Installment Type  For all other kinds of installment payments, the value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR5 - Position: 39-40 - Field: Installment Plan Type (Issuer or Merchant) 
   * @return planType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanType() {
    return planType;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanType(String planType) {
    this.planType = planType;
  }

  public CreatePaymentRequestInstallmentInformation sequence(Integer sequence) {
    
    this.sequence = sequence;
    return this;
  }

  /**
   * Installment number when making payments in installments. Used along with &#x60;totalCount&#x60; to track which payment is being processed.  For example, the second of 5 payments would be passed to CyberSource as &#x60;sequence&#x60; &#x3D; 2 and &#x60;totalCount&#x60; &#x3D; 5.  #### Chase Paymentech Solutions and FDC Compass This field is optional because this value is required in the merchant descriptors.  #### CyberSource through VisaNet When you do not include this field in a request for a Crediario installment payment, CyberSource sends a value of 0 to the processor.  For Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP01 TCR9 - Position: 38-40 - Field: Installment Payment Number  * The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant&#39;s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies. 
   * maximum: 99
   * @return sequence
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequence() {
    return sequence;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  public CreatePaymentRequestInstallmentInformation totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Total amount of the loan that is being paid in installments. This field is supported only for CyberSource through VisaNet. 
   * @return totalAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }

  public CreatePaymentRequestInstallmentInformation totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Total number of installments when making payments in installments.  #### Chase Paymentech Solutions and FDC Compass This field is optional because this value is required in the merchant descriptors.  #### American Express Direct, Cielo, and Comercio Latino This value is the total number of installments you approved.  #### CyberSource Latin American Processing in Brazil This value is the total number of installments that you approved. The default is 1.  #### All Other Processors This value is used along with _sequence_ to track which payment is being processed.  For example, the second of 5 payments would be passed to CyberSource as _sequence_ &#x3D; 2 and _totalCount_ &#x3D; 5.  #### CyberSource through VisaNet For Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP01 TCR9 - Position: 23-25 - Field: Number of Installments  For installment payments with American Express in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP07 TCR3 - Position: 7-8 - Field: Number of Installments  For installment payments with Visa in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP07 TCR1 - Position: 7-8 - Field: Number of Installments  For all other kinds of installment payments, the value for this field corresponds to the following data in the TC 33 capture file*: - Record: CP01 TCR5 - Position: 20-22 - Field: Installment Total Count  **Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant&#39;s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies. 
   * maximum: 99
   * @return totalCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  public CreatePaymentRequestInstallmentInformation firstInstallmentDate(String firstInstallmentDate) {
    
    this.firstInstallmentDate = firstInstallmentDate;
    return this;
  }

  /**
   * Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a string of six zeros (000000) to the processor.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file: - Record: CP01 TCR9 - Position: 42-47 - Field: Date of First Installment 
   * @return firstInstallmentDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstInstallmentDate() {
    return firstInstallmentDate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstInstallmentDate(String firstInstallmentDate) {
    this.firstInstallmentDate = firstInstallmentDate;
  }

  public CreatePaymentRequestInstallmentInformation invoiceData(String invoiceData) {
    
    this.invoiceData = invoiceData;
    return this;
  }

  /**
   * Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is the same for all installment payments for one purchase.  This field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR4 - Position: 51-70 - Field: Purchase Identification 
   * @return invoiceData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceData() {
    return invoiceData;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceData(String invoiceData) {
    this.invoiceData = invoiceData;
  }

  public CreatePaymentRequestInstallmentInformation paymentType(String paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Payment plan for the installments.  Possible values: - 0 (default): Regular installment. This value is not allowed for airline transactions. - 1: Installment payment with down payment. - 2: Installment payment without down payment. This value is supported only for airline transactions. - 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions. - 4: Down payment only; regular installment payment will follow. - 5: Boarding fee only. This value is supported only for airline transactions.  This field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 9 - Field: Merchant Installment Supporting Information 
   * @return paymentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentType() {
    return paymentType;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public CreatePaymentRequestInstallmentInformation eligibilityInquiry(String eligibilityInquiry) {
    
    this.eligibilityInquiry = eligibilityInquiry;
    return this;
  }

  /**
   * Indicates whether the authorization request is a Crediario eligibility inquiry.  Set the value for this field to &#x60;Crediario&#x60;.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet. 
   * @return eligibilityInquiry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELIGIBILITY_INQUIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEligibilityInquiry() {
    return eligibilityInquiry;
  }


  @JsonProperty(JSON_PROPERTY_ELIGIBILITY_INQUIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEligibilityInquiry(String eligibilityInquiry) {
    this.eligibilityInquiry = eligibilityInquiry;
  }

  public CreatePaymentRequestInstallmentInformation gracePeriodDuration(String gracePeriodDuration) {
    
    this.gracePeriodDuration = gracePeriodDuration;
    return this;
  }

  /**
   * Grace period requested by the customer before the first installment payment is due.  When you include this field in a request, you must also include the grace period duration type field.  The value for this field corresponds to the following data in the TC 33 capture file3: Record: CP01 TCR5, Position: 100-101, Field: Mastercard Grace Period Details.  This field is supported only for Mastercard installment payments in Brazil and Greece. 
   * @return gracePeriodDuration
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRACE_PERIOD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGracePeriodDuration() {
    return gracePeriodDuration;
  }


  @JsonProperty(JSON_PROPERTY_GRACE_PERIOD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGracePeriodDuration(String gracePeriodDuration) {
    this.gracePeriodDuration = gracePeriodDuration;
  }

  public CreatePaymentRequestInstallmentInformation gracePeriodDurationType(String gracePeriodDurationType) {
    
    this.gracePeriodDurationType = gracePeriodDurationType;
    return this;
  }

  /**
   * Unit for the requested grace period duration.  Possible values: - &#x60;D&#x60;: Days - &#x60;W&#x60;: Weeks - &#x60;M&#x60;: Months  The value for this field corresponds to the following data in the TC 33 capture file3: Record: CP01 TCR5, Position: 99, Field: Mastercard Grace Period Details  This field is supported only for Mastercard installment payments in Brazil and Greece on CyberSource through VisaNet. 
   * @return gracePeriodDurationType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRACE_PERIOD_DURATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGracePeriodDurationType() {
    return gracePeriodDurationType;
  }


  @JsonProperty(JSON_PROPERTY_GRACE_PERIOD_DURATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGracePeriodDurationType(String gracePeriodDurationType) {
    this.gracePeriodDurationType = gracePeriodDurationType;
  }

  public CreatePaymentRequestInstallmentInformation firstInstallmentAmount(String firstInstallmentAmount) {
    
    this.firstInstallmentAmount = firstInstallmentAmount;
    return this;
  }

  /**
   * Amount of the first installment payment. The issuer provides this value when the first installment payment is successful. This field is supported for Mastercard installment payments on CyberSource through VisaNet in all countries except Brazil,Croatia, Georgia, and Greece. The value for this field corresponds to the following data in the TC 33 capture file: - Record: CP01 TCR5 - Position: 23-34 - Field: Amount of Each Installment 
   * @return firstInstallmentAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstInstallmentAmount() {
    return firstInstallmentAmount;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_INSTALLMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstInstallmentAmount(String firstInstallmentAmount) {
    this.firstInstallmentAmount = firstInstallmentAmount;
  }

  public CreatePaymentRequestInstallmentInformation validationIndicator(String validationIndicator) {
    
    this.validationIndicator = validationIndicator;
    return this;
  }

  /**
   * Standing Instruction/Installment validation indicator. - &#39;1&#39;: Prevalidated - &#39;2&#39;: Not Validated 
   * @return validationIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidationIndicator() {
    return validationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidationIndicator(String validationIndicator) {
    this.validationIndicator = validationIndicator;
  }

  public CreatePaymentRequestInstallmentInformation identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

  /**
   * Standing Instruction/Installment identifier. 
   * @return identifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestInstallmentInformation createPaymentRequestInstallmentInformation = (CreatePaymentRequestInstallmentInformation) o;
    return Objects.equals(this.amount, createPaymentRequestInstallmentInformation.amount) &&
        Objects.equals(this.frequency, createPaymentRequestInstallmentInformation.frequency) &&
        Objects.equals(this.planType, createPaymentRequestInstallmentInformation.planType) &&
        Objects.equals(this.sequence, createPaymentRequestInstallmentInformation.sequence) &&
        Objects.equals(this.totalAmount, createPaymentRequestInstallmentInformation.totalAmount) &&
        Objects.equals(this.totalCount, createPaymentRequestInstallmentInformation.totalCount) &&
        Objects.equals(this.firstInstallmentDate, createPaymentRequestInstallmentInformation.firstInstallmentDate) &&
        Objects.equals(this.invoiceData, createPaymentRequestInstallmentInformation.invoiceData) &&
        Objects.equals(this.paymentType, createPaymentRequestInstallmentInformation.paymentType) &&
        Objects.equals(this.eligibilityInquiry, createPaymentRequestInstallmentInformation.eligibilityInquiry) &&
        Objects.equals(this.gracePeriodDuration, createPaymentRequestInstallmentInformation.gracePeriodDuration) &&
        Objects.equals(this.gracePeriodDurationType, createPaymentRequestInstallmentInformation.gracePeriodDurationType) &&
        Objects.equals(this.firstInstallmentAmount, createPaymentRequestInstallmentInformation.firstInstallmentAmount) &&
        Objects.equals(this.validationIndicator, createPaymentRequestInstallmentInformation.validationIndicator) &&
        Objects.equals(this.identifier, createPaymentRequestInstallmentInformation.identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, frequency, planType, sequence, totalAmount, totalCount, firstInstallmentDate, invoiceData, paymentType, eligibilityInquiry, gracePeriodDuration, gracePeriodDurationType, firstInstallmentAmount, validationIndicator, identifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestInstallmentInformation {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    planType: ").append(toIndentedString(planType)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    firstInstallmentDate: ").append(toIndentedString(firstInstallmentDate)).append("\n");
    sb.append("    invoiceData: ").append(toIndentedString(invoiceData)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    eligibilityInquiry: ").append(toIndentedString(eligibilityInquiry)).append("\n");
    sb.append("    gracePeriodDuration: ").append(toIndentedString(gracePeriodDuration)).append("\n");
    sb.append("    gracePeriodDurationType: ").append(toIndentedString(gracePeriodDurationType)).append("\n");
    sb.append("    firstInstallmentAmount: ").append(toIndentedString(firstInstallmentAmount)).append("\n");
    sb.append("    validationIndicator: ").append(toIndentedString(validationIndicator)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

