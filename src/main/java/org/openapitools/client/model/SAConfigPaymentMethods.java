/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SAConfigPaymentMethods
 */
@JsonPropertyOrder({
  SAConfigPaymentMethods.JSON_PROPERTY_ENABLED_PAYMENT_METHODS
})
@JsonTypeName("SAConfig_paymentMethods")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class SAConfigPaymentMethods {
  /**
   * Gets or Sets enabledPaymentMethods
   */
  public enum EnabledPaymentMethodsEnum {
    CARD("CARD"),
    
    ECHECK("ECHECK"),
    
    VISACHECKOUT("VISACHECKOUT"),
    
    PAYPAL("PAYPAL");

    private String value;

    EnabledPaymentMethodsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EnabledPaymentMethodsEnum fromValue(String value) {
      for (EnabledPaymentMethodsEnum b : EnabledPaymentMethodsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENABLED_PAYMENT_METHODS = "enabledPaymentMethods";
  private List<EnabledPaymentMethodsEnum> enabledPaymentMethods = new ArrayList<>();

  public SAConfigPaymentMethods() {
  }

  public SAConfigPaymentMethods enabledPaymentMethods(List<EnabledPaymentMethodsEnum> enabledPaymentMethods) {
    
    this.enabledPaymentMethods = enabledPaymentMethods;
    return this;
  }

  public SAConfigPaymentMethods addEnabledPaymentMethodsItem(EnabledPaymentMethodsEnum enabledPaymentMethodsItem) {
    if (this.enabledPaymentMethods == null) {
      this.enabledPaymentMethods = new ArrayList<>();
    }
    this.enabledPaymentMethods.add(enabledPaymentMethodsItem);
    return this;
  }

  /**
   * Get enabledPaymentMethods
   * @return enabledPaymentMethods
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EnabledPaymentMethodsEnum> getEnabledPaymentMethods() {
    return enabledPaymentMethods;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabledPaymentMethods(List<EnabledPaymentMethodsEnum> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SAConfigPaymentMethods saConfigPaymentMethods = (SAConfigPaymentMethods) o;
    return Objects.equals(this.enabledPaymentMethods, saConfigPaymentMethods.enabledPaymentMethods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabledPaymentMethods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SAConfigPaymentMethods {\n");
    sb.append("    enabledPaymentMethods: ").append(toIndentedString(enabledPaymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

