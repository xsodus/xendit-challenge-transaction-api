/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSessionRequestRequestPaymentInformationBankAccount
 */
@JsonPropertyOrder({
  CreateSessionRequestRequestPaymentInformationBankAccount.JSON_PROPERTY_NUMBER,
  CreateSessionRequestRequestPaymentInformationBankAccount.JSON_PROPERTY_IBAN
})
@JsonTypeName("CreateSessionRequest_request_paymentInformation_bank_account")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateSessionRequestRequestPaymentInformationBankAccount {
  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public CreateSessionRequestRequestPaymentInformationBankAccount() {
  }

  public CreateSessionRequestRequestPaymentInformationBankAccount number(String number) {
    
    this.number = number;
    return this;
  }

  /**
   * Account number.  When processing encoded account numbers, use this field for the encoded account number. 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }

  public CreateSessionRequestRequestPaymentInformationBankAccount iban(String iban) {
    
    this.iban = iban;
    return this;
  }

  /**
   * International Bank Account Number (IBAN) for the bank account. For some countries you can provide this number instead of the traditional bank account information. You can use this field only when scoring a direct debit transaction. 
   * @return iban
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSessionRequestRequestPaymentInformationBankAccount createSessionRequestRequestPaymentInformationBankAccount = (CreateSessionRequestRequestPaymentInformationBankAccount) o;
    return Objects.equals(this.number, createSessionRequestRequestPaymentInformationBankAccount.number) &&
        Objects.equals(this.iban, createSessionRequestRequestPaymentInformationBankAccount.iban);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, iban);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSessionRequestRequestPaymentInformationBankAccount {\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

