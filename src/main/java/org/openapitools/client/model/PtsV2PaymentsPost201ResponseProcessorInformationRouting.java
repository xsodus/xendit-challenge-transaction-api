/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponseProcessorInformationRouting
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponseProcessorInformationRouting.JSON_PROPERTY_NETWORK,
  PtsV2PaymentsPost201ResponseProcessorInformationRouting.JSON_PROPERTY_NETWORK_NAME,
  PtsV2PaymentsPost201ResponseProcessorInformationRouting.JSON_PROPERTY_CUSTOMER_SIGNATURE_REQUIRED
})
@JsonTypeName("ptsV2PaymentsPost201Response_processorInformation_routing")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponseProcessorInformationRouting {
  public static final String JSON_PROPERTY_NETWORK = "network";
  private String network;

  public static final String JSON_PROPERTY_NETWORK_NAME = "networkName";
  private String networkName;

  public static final String JSON_PROPERTY_CUSTOMER_SIGNATURE_REQUIRED = "customerSignatureRequired";
  private String customerSignatureRequired;

  public PtsV2PaymentsPost201ResponseProcessorInformationRouting() {
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationRouting network(String network) {
    
    this.network = network;
    return this;
  }

  /**
   * PIN Debit Services: Contains the ID of the debit network to which the transaction was routed.  | Code | Network | | --- | --- | | 0000 | Priority Routing or Generic File Update | | 0002 | Visa programs, Private Label and non-Visa Authorization Gateway Services | | 0003 | Interlink | | 0004 | Plus | | 0008 | Star | | 0009 | Pulse| | 0010 | Star | | 0011 | Star | | 0012 | Star (primary network ID) | | 0013 | AFFN | | 0015 | Star | | 0016 | Maestro | | 0017 | Pulse (primary network ID) | | 0018 | NYCE (primary network ID) | | 0019 | Pulse | | 0020 | Accel | | 0023 | NETS | | 0024 | CU24 | | 0025 | Alaska Option | | 0027 | NYCE | | 0028 | Shazam | | 0029 | EBT POS |  FDC Nashville Global authorization service:  Indicates whether the transaction was routed to a credit network, a debit network, or the STAR signature debit network. - &#x60;C&#x60;: Credit network - &#x60;D&#x60;: Debit network (without signature) - &#x60;S&#x60;: STAR signature debit network 
   * @return network
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(String network) {
    this.network = network;
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationRouting networkName(String networkName) {
    
    this.networkName = networkName;
    return this;
  }

  /**
   * Name of the network to which the transaction was routed. 
   * @return networkName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkName() {
    return networkName;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkName(String networkName) {
    this.networkName = networkName;
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationRouting customerSignatureRequired(String customerSignatureRequired) {
    
    this.customerSignatureRequired = customerSignatureRequired;
    return this;
  }

  /**
   * Indicates whether you need to obtain the cardholder&#39;s signature.  Possible values: - &#x60;Y&#x60;: You need to obtain the cardholder&#39;s signature. - &#x60;N&#x60;: You do not need to obtain the cardholder&#39;s signature. 
   * @return customerSignatureRequired
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_SIGNATURE_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerSignatureRequired() {
    return customerSignatureRequired;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_SIGNATURE_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerSignatureRequired(String customerSignatureRequired) {
    this.customerSignatureRequired = customerSignatureRequired;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseProcessorInformationRouting ptsV2PaymentsPost201ResponseProcessorInformationRouting = (PtsV2PaymentsPost201ResponseProcessorInformationRouting) o;
    return Objects.equals(this.network, ptsV2PaymentsPost201ResponseProcessorInformationRouting.network) &&
        Objects.equals(this.networkName, ptsV2PaymentsPost201ResponseProcessorInformationRouting.networkName) &&
        Objects.equals(this.customerSignatureRequired, ptsV2PaymentsPost201ResponseProcessorInformationRouting.customerSignatureRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, networkName, customerSignatureRequired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseProcessorInformationRouting {\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    networkName: ").append(toIndentedString(networkName)).append("\n");
    sb.append("    customerSignatureRequired: ").append(toIndentedString(customerSignatureRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

