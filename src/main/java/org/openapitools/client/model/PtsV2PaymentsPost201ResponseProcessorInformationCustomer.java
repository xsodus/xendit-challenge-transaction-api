/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponseProcessorInformationCustomer
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponseProcessorInformationCustomer.JSON_PROPERTY_PERSONAL_ID_RESULT
})
@JsonTypeName("ptsV2PaymentsPost201Response_processorInformation_customer")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponseProcessorInformationCustomer {
  public static final String JSON_PROPERTY_PERSONAL_ID_RESULT = "personalIdResult";
  private String personalIdResult;

  public PtsV2PaymentsPost201ResponseProcessorInformationCustomer() {
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationCustomer personalIdResult(String personalIdResult) {
    
    this.personalIdResult = personalIdResult;
    return this;
  }

  /**
   * Personal identifier result. This field is supported only for Redecard in Brazil for CyberSource Latin American Processing. If you included &#x60;buyerInformation.personalIdentification[].ID&#x60; in the request, this value indicates whether or not &#x60;buyerInformation.personalIdentification[].ID&#x60; matched a value in a record on file. Returned only when the personal ID result is returned by the processor.  Possible values:   - &#x60;Y&#x60;: Match  - &#x60;N&#x60;: No match  - &#x60;K&#x60;: Not supported  - &#x60;U&#x60;: Unknown  - &#x60;Z&#x60;: No response returned **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America.The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports. 
   * @return personalIdResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_ID_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPersonalIdResult() {
    return personalIdResult;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_ID_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalIdResult(String personalIdResult) {
    this.personalIdResult = personalIdResult;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseProcessorInformationCustomer ptsV2PaymentsPost201ResponseProcessorInformationCustomer = (PtsV2PaymentsPost201ResponseProcessorInformationCustomer) o;
    return Objects.equals(this.personalIdResult, ptsV2PaymentsPost201ResponseProcessorInformationCustomer.personalIdResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(personalIdResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseProcessorInformationCustomer {\n");
    sb.append("    personalIdResult: ").append(toIndentedString(personalIdResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

