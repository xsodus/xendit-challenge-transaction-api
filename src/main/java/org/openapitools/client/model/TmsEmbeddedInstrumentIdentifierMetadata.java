/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TmsEmbeddedInstrumentIdentifierMetadata
 */
@JsonPropertyOrder({
  TmsEmbeddedInstrumentIdentifierMetadata.JSON_PROPERTY_CREATOR
})
@JsonTypeName("tmsEmbeddedInstrumentIdentifier_metadata")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TmsEmbeddedInstrumentIdentifierMetadata {
  public static final String JSON_PROPERTY_CREATOR = "creator";
  private String creator;

  public TmsEmbeddedInstrumentIdentifierMetadata() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public TmsEmbeddedInstrumentIdentifierMetadata(
    @JsonProperty(JSON_PROPERTY_CREATOR) String creator
  ) {
    this();
    this.creator = creator;
  }

  /**
   * The creator of the Instrument Identifier.
   * @return creator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreator() {
    return creator;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TmsEmbeddedInstrumentIdentifierMetadata tmsEmbeddedInstrumentIdentifierMetadata = (TmsEmbeddedInstrumentIdentifierMetadata) o;
    return Objects.equals(this.creator, tmsEmbeddedInstrumentIdentifierMetadata.creator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TmsEmbeddedInstrumentIdentifierMetadata {\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

