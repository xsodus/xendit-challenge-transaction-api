/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformationStrongAuthentication;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation
 */
@JsonPropertyOrder({
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_STRONG_AUTHENTICATION,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_ACS_WINDOW_SIZE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATA,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_ALTERNATE_AUTHENTICATION_METHOD,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_AUTHENTICATION_DATE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_AUTHENTICATION_TRANSACTION_ID,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_TRANSACTION_FLOW_INDICATOR,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_CHALLENGE_CODE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_CHALLENGE_STATUS,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_CUSTOMER_CARD_ALIAS,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_DECOUPLED_AUTHENTICATION_INDICATOR,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_DECOUPLED_AUTHENTICATION_MAX_TIME,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_DEFAULT_CARD,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_DEVICE_CHANNEL,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_INSTALLMENT_TOTAL_COUNT,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MERCHANT_FRAUD_RATE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MARKETING_OPT_IN,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MARKETING_SOURCE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MCC,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MERCHANT_SCORE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_MESSAGE_CATEGORY,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_NPA_CODE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_OVERRIDE_PAYMENT_METHOD,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_OVERRIDE_COUNTRY_CODE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_PRIOR_AUTHENTICATION_DATA,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_PRIOR_AUTHENTICATION_METHOD,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_PRIOR_AUTHENTICATION_REFERENCE_ID,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_PRIOR_AUTHENTICATION_TIME,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_PRODUCT_CODE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_RETURN_URL,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_REQUESTOR_ID,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_REQUESTOR_INITIATED_AUTHENTICATION_INDICATOR,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_REQUESTOR_NAME,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_REFERENCE_ID,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_SDK_MAX_TIMEOUT,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_INDICATOR,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_TRANSACTION_MODE,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_WHITE_LIST_STATUS,
  CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.JSON_PROPERTY_SCORE_REQUEST
})
@JsonTypeName("createBundledDecisionManagerCase_request_consumerAuthenticationInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation {
  public static final String JSON_PROPERTY_STRONG_AUTHENTICATION = "strongAuthentication";
  private CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformationStrongAuthentication strongAuthentication;

  public static final String JSON_PROPERTY_ACS_WINDOW_SIZE = "acsWindowSize";
  private String acsWindowSize;

  public static final String JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATA = "alternateAuthenticationData";
  private String alternateAuthenticationData;

  public static final String JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATE = "alternateAuthenticationDate";
  private String alternateAuthenticationDate;

  public static final String JSON_PROPERTY_ALTERNATE_AUTHENTICATION_METHOD = "alternateAuthenticationMethod";
  private String alternateAuthenticationMethod;

  public static final String JSON_PROPERTY_AUTHENTICATION_DATE = "authenticationDate";
  private String authenticationDate;

  public static final String JSON_PROPERTY_AUTHENTICATION_TRANSACTION_ID = "authenticationTransactionId";
  private String authenticationTransactionId;

  public static final String JSON_PROPERTY_TRANSACTION_FLOW_INDICATOR = "transactionFlowIndicator";
  private Integer transactionFlowIndicator;

  public static final String JSON_PROPERTY_CHALLENGE_CODE = "challengeCode";
  private String challengeCode;

  public static final String JSON_PROPERTY_CHALLENGE_STATUS = "challengeStatus";
  private String challengeStatus;

  public static final String JSON_PROPERTY_CUSTOMER_CARD_ALIAS = "customerCardAlias";
  private String customerCardAlias;

  public static final String JSON_PROPERTY_DECOUPLED_AUTHENTICATION_INDICATOR = "decoupledAuthenticationIndicator";
  private String decoupledAuthenticationIndicator;

  public static final String JSON_PROPERTY_DECOUPLED_AUTHENTICATION_MAX_TIME = "decoupledAuthenticationMaxTime";
  private String decoupledAuthenticationMaxTime;

  public static final String JSON_PROPERTY_DEFAULT_CARD = "defaultCard";
  private Boolean defaultCard;

  public static final String JSON_PROPERTY_DEVICE_CHANNEL = "deviceChannel";
  private String deviceChannel;

  public static final String JSON_PROPERTY_INSTALLMENT_TOTAL_COUNT = "installmentTotalCount";
  private Integer installmentTotalCount;

  public static final String JSON_PROPERTY_MERCHANT_FRAUD_RATE = "merchantFraudRate";
  private String merchantFraudRate;

  public static final String JSON_PROPERTY_MARKETING_OPT_IN = "marketingOptIn";
  private Boolean marketingOptIn;

  public static final String JSON_PROPERTY_MARKETING_SOURCE = "marketingSource";
  private String marketingSource;

  public static final String JSON_PROPERTY_MCC = "mcc";
  private String mcc;

  public static final String JSON_PROPERTY_MERCHANT_SCORE = "merchantScore";
  private Integer merchantScore;

  public static final String JSON_PROPERTY_MESSAGE_CATEGORY = "messageCategory";
  private String messageCategory;

  public static final String JSON_PROPERTY_NPA_CODE = "npaCode";
  private String npaCode;

  public static final String JSON_PROPERTY_OVERRIDE_PAYMENT_METHOD = "overridePaymentMethod";
  private String overridePaymentMethod;

  public static final String JSON_PROPERTY_OVERRIDE_COUNTRY_CODE = "overrideCountryCode";
  private String overrideCountryCode;

  public static final String JSON_PROPERTY_PRIOR_AUTHENTICATION_DATA = "priorAuthenticationData";
  private String priorAuthenticationData;

  public static final String JSON_PROPERTY_PRIOR_AUTHENTICATION_METHOD = "priorAuthenticationMethod";
  private String priorAuthenticationMethod;

  public static final String JSON_PROPERTY_PRIOR_AUTHENTICATION_REFERENCE_ID = "priorAuthenticationReferenceId";
  private String priorAuthenticationReferenceId;

  public static final String JSON_PROPERTY_PRIOR_AUTHENTICATION_TIME = "priorAuthenticationTime";
  private String priorAuthenticationTime;

  public static final String JSON_PROPERTY_PRODUCT_CODE = "productCode";
  private String productCode;

  public static final String JSON_PROPERTY_RETURN_URL = "returnUrl";
  private String returnUrl;

  public static final String JSON_PROPERTY_REQUESTOR_ID = "requestorId";
  private String requestorId;

  public static final String JSON_PROPERTY_REQUESTOR_INITIATED_AUTHENTICATION_INDICATOR = "requestorInitiatedAuthenticationIndicator";
  private String requestorInitiatedAuthenticationIndicator;

  public static final String JSON_PROPERTY_REQUESTOR_NAME = "requestorName";
  private String requestorName;

  public static final String JSON_PROPERTY_REFERENCE_ID = "referenceId";
  private String referenceId;

  public static final String JSON_PROPERTY_SDK_MAX_TIMEOUT = "sdkMaxTimeout";
  private String sdkMaxTimeout;

  public static final String JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_INDICATOR = "secureCorporatePaymentIndicator";
  private String secureCorporatePaymentIndicator;

  public static final String JSON_PROPERTY_TRANSACTION_MODE = "transactionMode";
  private String transactionMode;

  public static final String JSON_PROPERTY_WHITE_LIST_STATUS = "whiteListStatus";
  private String whiteListStatus;

  public static final String JSON_PROPERTY_SCORE_REQUEST = "scoreRequest";
  private Integer scoreRequest;

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation() {
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation strongAuthentication(CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformationStrongAuthentication strongAuthentication) {
    
    this.strongAuthentication = strongAuthentication;
    return this;
  }

  /**
   * Get strongAuthentication
   * @return strongAuthentication
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STRONG_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformationStrongAuthentication getStrongAuthentication() {
    return strongAuthentication;
  }


  @JsonProperty(JSON_PROPERTY_STRONG_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrongAuthentication(CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformationStrongAuthentication strongAuthentication) {
    this.strongAuthentication = strongAuthentication;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation acsWindowSize(String acsWindowSize) {
    
    this.acsWindowSize = acsWindowSize;
    return this;
  }

  /**
   * An override field that a merchant can pass in to set the challenge window size to display to the end cardholder.  The ACS (Active Control Server) will reply with content that is formatted appropriately to this window size to allow for the best user experience.  The sizes are width x height in pixels of the window displayed in the cardholder browser window.  01 - 250x400  02 - 390x400  03 - 500x600  04 - 600x400  05 - Full page 
   * @return acsWindowSize
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACS_WINDOW_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcsWindowSize() {
    return acsWindowSize;
  }


  @JsonProperty(JSON_PROPERTY_ACS_WINDOW_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcsWindowSize(String acsWindowSize) {
    this.acsWindowSize = acsWindowSize;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation alternateAuthenticationData(String alternateAuthenticationData) {
    
    this.alternateAuthenticationData = alternateAuthenticationData;
    return this;
  }

  /**
   * Data that documents and supports a specific authentication process. 
   * @return alternateAuthenticationData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternateAuthenticationData() {
    return alternateAuthenticationData;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternateAuthenticationData(String alternateAuthenticationData) {
    this.alternateAuthenticationData = alternateAuthenticationData;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation alternateAuthenticationDate(String alternateAuthenticationDate) {
    
    this.alternateAuthenticationDate = alternateAuthenticationDate;
    return this;
  }

  /**
   * Date and time in UTC of the cardholder authentication. Format: YYYYMMDDHHMM 
   * @return alternateAuthenticationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternateAuthenticationDate() {
    return alternateAuthenticationDate;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternateAuthenticationDate(String alternateAuthenticationDate) {
    this.alternateAuthenticationDate = alternateAuthenticationDate;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation alternateAuthenticationMethod(String alternateAuthenticationMethod) {
    
    this.alternateAuthenticationMethod = alternateAuthenticationMethod;
    return this;
  }

  /**
   * Mechanism used by the cardholder to authenticate to the 3D Secure requestor. Possible values: - &#x60;01&#x60;: No authentication occurred - &#x60;02&#x60;: Login using merchant system credentials - &#x60;03&#x60;: Login using Federated ID - &#x60;04&#x60;: Login using issuer credentials - &#x60;05&#x60;: Login using third-party authenticator - &#x60;06&#x60;: Login using FIDO Authenticator 
   * @return alternateAuthenticationMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternateAuthenticationMethod() {
    return alternateAuthenticationMethod;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATE_AUTHENTICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternateAuthenticationMethod(String alternateAuthenticationMethod) {
    this.alternateAuthenticationMethod = alternateAuthenticationMethod;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation authenticationDate(String authenticationDate) {
    
    this.authenticationDate = authenticationDate;
    return this;
  }

  /**
   * The date/time of the authentication at the 3DS servers. RISK update authorization service in auth request payload with value returned in &#x60;consumerAuthenticationInformation.alternateAuthenticationData&#x60; if merchant calls via CYBS or field can be provided by merchant in authorization request if calling an external 3DS provider.  This field is supported for Cartes Bancaires Fast&#39;R transactions on Credit Mutuel-CIC. Format: YYYYMMDDHHMMSS 
   * @return authenticationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticationDate() {
    return authenticationDate;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationDate(String authenticationDate) {
    this.authenticationDate = authenticationDate;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation authenticationTransactionId(String authenticationTransactionId) {
    
    this.authenticationTransactionId = authenticationTransactionId;
    return this;
  }

  /**
   * Payer authentication transaction identifier passed to link the check enrollment and validate authentication messages.For Rupay,this is passed only in Re-Send OTP usecase. **Note**: Required for Standard integration, Rupay Seamless server to server integration for enroll service. Required for Hybrid integration for validate service. 
   * @return authenticationTransactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticationTransactionId() {
    return authenticationTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationTransactionId(String authenticationTransactionId) {
    this.authenticationTransactionId = authenticationTransactionId;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation transactionFlowIndicator(Integer transactionFlowIndicator) {
    
    this.transactionFlowIndicator = transactionFlowIndicator;
    return this;
  }

  /**
   * This  field is only applicable to Rupay and is optional. Merchant will have to pass a valid value from 01 through 07 which indicates the transaction flow. Below are the possible values. 01:NW- Transaction performed at domestic merchant. 02:TW- Transaction performed at domestic merchant along with Token provisioning. 03:IT- Transaction performed at International merchant. 04:AT- Authentication Transaction Only. 05:AW- Authentication transaction for provisioning. 06:DI- Domestic InApp Transaction. 07:II- International InApp transaction. 08:GC- Guest Checkout 09:ST- SI Authentication Transaction only 10:SW- SI Authorization along with token provisioning 
   * @return transactionFlowIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_FLOW_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransactionFlowIndicator() {
    return transactionFlowIndicator;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_FLOW_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionFlowIndicator(Integer transactionFlowIndicator) {
    this.transactionFlowIndicator = transactionFlowIndicator;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation challengeCode(String challengeCode) {
    
    this.challengeCode = challengeCode;
    return this;
  }

  /**
   * Possible values: - &#x60;01&#x60;: No preference - &#x60;02&#x60;: No challenge request - &#x60;03&#x60;: Challenge requested (3D Secure requestor preference) - &#x60;04&#x60;: Challenge requested (mandate) - &#x60;05&#x60;: No challenge requested (transactional risk analysis is already performed) - &#x60;06&#x60;: No challenge requested (Data share only) - &#x60;07&#x60;: No challenge requested (strong consumer authentication is already performed) - &#x60;08&#x60;: No challenge requested (utilize whitelist exemption if no challenge required) - &#x60;09&#x60;: Challenge requested (whitelist prompt requested if challenge required) **Note** This field will default to &#x60;01&#x60; on merchant configuration and can be overridden by the merchant. EMV 3D Secure version 2.1.0 supports values &#x60;01-04&#x60;. Version 2.2.0 supports values &#x60;01-09&#x60;. 
   * @return challengeCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChallengeCode() {
    return challengeCode;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeCode(String challengeCode) {
    this.challengeCode = challengeCode;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation challengeStatus(String challengeStatus) {
    
    this.challengeStatus = challengeStatus;
    return this;
  }

  /**
   * The &#x60;consumerAuthenticationInformation.challengeCode&#x60; indicates the authentication type/level, or challenge, that was presented to the cardholder at checkout by the merchant when calling the Carte Bancaire 3DS servers via CYBS RISK services. It conveys to the issuer the alternative authentication methods that the consumer used. 
   * @return challengeStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChallengeStatus() {
    return challengeStatus;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeStatus(String challengeStatus) {
    this.challengeStatus = challengeStatus;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation customerCardAlias(String customerCardAlias) {
    
    this.customerCardAlias = customerCardAlias;
    return this;
  }

  /**
   * An alias that uniquely identifies the customer&#39;s account and credit card on file. Note This field is required if Tokenization is enabled in the merchant profile settings. 
   * @return customerCardAlias
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_CARD_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerCardAlias() {
    return customerCardAlias;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_CARD_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerCardAlias(String customerCardAlias) {
    this.customerCardAlias = customerCardAlias;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation decoupledAuthenticationIndicator(String decoupledAuthenticationIndicator) {
    
    this.decoupledAuthenticationIndicator = decoupledAuthenticationIndicator;
    return this;
  }

  /**
   * Indicates whether the 3DS Requestor requests the ACS to utilize Decoupled Authentication and agrees to utilize Decoupled Authentication if the ACS confirms its use.  Possible Values:  Y - Decoupled Authentication is supported and preferred if challenge is necessary  N - Do not use Decoupled Authentication  **Default Value**: N 
   * @return decoupledAuthenticationIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECOUPLED_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecoupledAuthenticationIndicator() {
    return decoupledAuthenticationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_DECOUPLED_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecoupledAuthenticationIndicator(String decoupledAuthenticationIndicator) {
    this.decoupledAuthenticationIndicator = decoupledAuthenticationIndicator;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation decoupledAuthenticationMaxTime(String decoupledAuthenticationMaxTime) {
    
    this.decoupledAuthenticationMaxTime = decoupledAuthenticationMaxTime;
    return this;
  }

  /**
   * Indicates the maximum amount of time that the 3DS Requestor will wait for an ACS (Active control server) to provide the results of a Decoupled Authentication transaction (in minutes). Possible Values: Numeric values between 1 and 10080 accepted. 
   * @return decoupledAuthenticationMaxTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECOUPLED_AUTHENTICATION_MAX_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecoupledAuthenticationMaxTime() {
    return decoupledAuthenticationMaxTime;
  }


  @JsonProperty(JSON_PROPERTY_DECOUPLED_AUTHENTICATION_MAX_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecoupledAuthenticationMaxTime(String decoupledAuthenticationMaxTime) {
    this.decoupledAuthenticationMaxTime = decoupledAuthenticationMaxTime;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation defaultCard(Boolean defaultCard) {
    
    this.defaultCard = defaultCard;
    return this;
  }

  /**
   * Indicates that the card being used is the one designated as the primary payment card for purchase. Recommended for Discover ProtectBuy. 
   * @return defaultCard
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefaultCard() {
    return defaultCard;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultCard(Boolean defaultCard) {
    this.defaultCard = defaultCard;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation deviceChannel(String deviceChannel) {
    
    this.deviceChannel = deviceChannel;
    return this;
  }

  /**
   * Determines the channel that the transaction came through. Possible Values: SDK/Browser/3RI. 3RI - 3DS request initiated. 
   * @return deviceChannel
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEVICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeviceChannel() {
    return deviceChannel;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceChannel(String deviceChannel) {
    this.deviceChannel = deviceChannel;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation installmentTotalCount(Integer installmentTotalCount) {
    
    this.installmentTotalCount = installmentTotalCount;
    return this;
  }

  /**
   * An integer value greater than 1 indicating the max number of permitted authorizations for installment payments. **Note** This is required if the merchant and cardholder have agreed to installment payments. 
   * @return installmentTotalCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTALLMENT_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInstallmentTotalCount() {
    return installmentTotalCount;
  }


  @JsonProperty(JSON_PROPERTY_INSTALLMENT_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallmentTotalCount(Integer installmentTotalCount) {
    this.installmentTotalCount = installmentTotalCount;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation merchantFraudRate(String merchantFraudRate) {
    
    this.merchantFraudRate = merchantFraudRate;
    return this;
  }

  /**
   * Calculated by merchants as per PSD2** RTS** (EEA** card fraud divided by all EEA card volumes). Possible Values: 1 &#x3D; Represents fraud rate &lt;&#x3D;1  2 &#x3D; Represents fraud rate &gt;1 and &lt;&#x3D;6  3 &#x3D; Represents fraud rate &gt;6 and &lt;&#x3D;13  4 &#x3D; Represents fraud rate &gt;13 and &lt;&#x3D;25  5 &#x3D; Represents fraud rate &gt;25  EEA** &#x3D; European Economic Area RTS** &#x3D; Regulatory Technical Standards PSD2** &#x3D; Payment Services Directive 
   * @return merchantFraudRate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_FRAUD_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantFraudRate() {
    return merchantFraudRate;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_FRAUD_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantFraudRate(String merchantFraudRate) {
    this.merchantFraudRate = merchantFraudRate;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation marketingOptIn(Boolean marketingOptIn) {
    
    this.marketingOptIn = marketingOptIn;
    return this;
  }

  /**
   * Indicates whether the customer has opted in for marketing offers. Recommended for Discover ProtectBuy. 
   * @return marketingOptIn
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKETING_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMarketingOptIn() {
    return marketingOptIn;
  }


  @JsonProperty(JSON_PROPERTY_MARKETING_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketingOptIn(Boolean marketingOptIn) {
    this.marketingOptIn = marketingOptIn;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation marketingSource(String marketingSource) {
    
    this.marketingSource = marketingSource;
    return this;
  }

  /**
   * Indicates origin of the marketing offer. Recommended for Discover ProtectBuy. 
   * @return marketingSource
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKETING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMarketingSource() {
    return marketingSource;
  }


  @JsonProperty(JSON_PROPERTY_MARKETING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketingSource(String marketingSource) {
    this.marketingSource = marketingSource;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation mcc(String mcc) {
    
    this.mcc = mcc;
    return this;
  }

  /**
   * Merchant category code. **Important** Required only for Visa Secure transactions in Brazil. Do not use this request field for any other types of transactions. 
   * @return mcc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMcc() {
    return mcc;
  }


  @JsonProperty(JSON_PROPERTY_MCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcc(String mcc) {
    this.mcc = mcc;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation merchantScore(Integer merchantScore) {
    
    this.merchantScore = merchantScore;
    return this;
  }

  /**
   * Risk Score provided by merchants. This is specific for CB transactions. 
   * @return merchantScore
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMerchantScore() {
    return merchantScore;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantScore(Integer merchantScore) {
    this.merchantScore = merchantScore;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation messageCategory(String messageCategory) {
    
    this.messageCategory = messageCategory;
    return this;
  }

  /**
   * Category of the message for a specific use case. Possible values:  - &#x60;01&#x60;: PA- payment authentication - &#x60;02&#x60;: NPA- non-payment authentication - &#x60;03-79&#x60;: Reserved for EMVCo future use (values invalid until defined by EMVCo) - &#x60;80-99&#x60;: Reserved for DS use 
   * @return messageCategory
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageCategory() {
    return messageCategory;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageCategory(String messageCategory) {
    this.messageCategory = messageCategory;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation npaCode(String npaCode) {
    
    this.npaCode = npaCode;
    return this;
  }

  /**
   * Non-Payer Authentication Indicator. Possible values: - &#x60;01&#x60;: Add card - &#x60;02&#x60;: Maintain card information - &#x60;03&#x60;: Cardholder verification for EMV token - &#x60;04-80&#x60; Reserved for EMVCo - &#x60;80-90&#x60; Reserved DS 
   * @return npaCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NPA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNpaCode() {
    return npaCode;
  }


  @JsonProperty(JSON_PROPERTY_NPA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNpaCode(String npaCode) {
    this.npaCode = npaCode;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation overridePaymentMethod(String overridePaymentMethod) {
    
    this.overridePaymentMethod = overridePaymentMethod;
    return this;
  }

  /**
   * Specifies the Brazilian payment account type used for the transaction. This field overrides other payment types that might be specified in the request. Use one of the following values for this field: - &#x60;NA&#x60;: Not applicable. Do not override other payment types that are specified in the request. - &#x60;CR&#x60;: Credit card. - &#x60;DB&#x60;: Debit card. - &#x60;VSAVR&#x60;: Visa Vale Refeicao - &#x60;VSAVA&#x60;: Visa Vale Alimentacao **Important** Required only for Visa Secure transactions in Brazil. Do not use this request field for any other types of transactions. 
   * @return overridePaymentMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERRIDE_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverridePaymentMethod() {
    return overridePaymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_OVERRIDE_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverridePaymentMethod(String overridePaymentMethod) {
    this.overridePaymentMethod = overridePaymentMethod;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation overrideCountryCode(String overrideCountryCode) {
    
    this.overrideCountryCode = overrideCountryCode;
    return this;
  }

  /**
   * Two-character [ISO Standard Country Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf).. 
   * @return overrideCountryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERRIDE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverrideCountryCode() {
    return overrideCountryCode;
  }


  @JsonProperty(JSON_PROPERTY_OVERRIDE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverrideCountryCode(String overrideCountryCode) {
    this.overrideCountryCode = overrideCountryCode;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation priorAuthenticationData(String priorAuthenticationData) {
    
    this.priorAuthenticationData = priorAuthenticationData;
    return this;
  }

  /**
   * This field carry data that the ACS can use to verify the authentication process. 
   * @return priorAuthenticationData
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriorAuthenticationData() {
    return priorAuthenticationData;
  }


  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriorAuthenticationData(String priorAuthenticationData) {
    this.priorAuthenticationData = priorAuthenticationData;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation priorAuthenticationMethod(String priorAuthenticationMethod) {
    
    this.priorAuthenticationMethod = priorAuthenticationMethod;
    return this;
  }

  /**
   * Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor.  01 - Frictionless authentication occurred by ACS  02 - Cardholder challenge occurred by ACS  03 - AVS verified  04 - Other issuer methods  05-79 - Reserved for EMVCo future use (values invalid until defined by EMVCo)  80-99 - Reserved for DS use 
   * @return priorAuthenticationMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriorAuthenticationMethod() {
    return priorAuthenticationMethod;
  }


  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriorAuthenticationMethod(String priorAuthenticationMethod) {
    this.priorAuthenticationMethod = priorAuthenticationMethod;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation priorAuthenticationReferenceId(String priorAuthenticationReferenceId) {
    
    this.priorAuthenticationReferenceId = priorAuthenticationReferenceId;
    return this;
  }

  /**
   * This data element contains a ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder 
   * @return priorAuthenticationReferenceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriorAuthenticationReferenceId() {
    return priorAuthenticationReferenceId;
  }


  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriorAuthenticationReferenceId(String priorAuthenticationReferenceId) {
    this.priorAuthenticationReferenceId = priorAuthenticationReferenceId;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation priorAuthenticationTime(String priorAuthenticationTime) {
    
    this.priorAuthenticationTime = priorAuthenticationTime;
    return this;
  }

  /**
   * Date and time in UTC of the prior cardholder authentication. Format – YYYYMMDDHHMM 
   * @return priorAuthenticationTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriorAuthenticationTime() {
    return priorAuthenticationTime;
  }


  @JsonProperty(JSON_PROPERTY_PRIOR_AUTHENTICATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriorAuthenticationTime(String priorAuthenticationTime) {
    this.priorAuthenticationTime = priorAuthenticationTime;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

  /**
   * Specifies the product code, which designates the type of transaction. Specify one of the following values for this field: - AIR: Airline purchase Important Required for American Express SafeKey (U.S.). - &#x60;ACC&#x60;: Accommodation Rental - &#x60;ACF&#x60;: Account funding - &#x60;CHA&#x60;: Check acceptance - &#x60;DIG&#x60;: Digital Goods - &#x60;DSP&#x60;: Cash Dispensing - &#x60;GAS&#x60;: Fuel - &#x60;GEN&#x60;: General Retail - &#x60;LUX&#x60;: Luxury Retail - &#x60;PAL&#x60;: Prepaid activation and load - &#x60;PHY&#x60;: Goods or services purchase - &#x60;QCT&#x60;: Quasi-cash transaction - &#x60;REN&#x60;: Car Rental - &#x60;RES&#x60;: Restaurant - &#x60;SVC&#x60;: Services - &#x60;TBD&#x60;: Other - &#x60;TRA&#x60;: Travel **Important** Required for Visa Secure transactions in Brazil. Do not use this request field for any other types of transactions. 
   * @return productCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductCode() {
    return productCode;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

  /**
   * The URL of the merchant&#39;s return page. CyberSource adds this return URL to the step-up JWT and returns it in the response of the Payer Authentication enrollment call. The merchant&#39;s return URL page serves as a listening URL. Once the bank session completes, the merchant receives a POST to their URL. This response contains the completed bank session&#39;s transactionId. The merchant&#39;s return page should capture the transaction ID and send it in the Payer Authentication validation call. 
   * @return returnUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnUrl() {
    return returnUrl;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation requestorId(String requestorId) {
    
    this.requestorId = requestorId;
    return this;
  }

  /**
   * Cardinal&#39;s directory server assigned 3DS Requestor ID value
   * @return requestorId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestorId() {
    return requestorId;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestorId(String requestorId) {
    this.requestorId = requestorId;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation requestorInitiatedAuthenticationIndicator(String requestorInitiatedAuthenticationIndicator) {
    
    this.requestorInitiatedAuthenticationIndicator = requestorInitiatedAuthenticationIndicator;
    return this;
  }

  /**
   * Indicates the type of 3RI request.  Possible Values:  01 - Recurring transaction  02 - Installment transaction  03 - Add card  04 - Maintain card  05 - Account verification  06 - Split/delayed shipment  07 - Top-up  08 - Mail Order  09 - Telephone Order  10 - Whitelist status check  11 - Other payment 
   * @return requestorInitiatedAuthenticationIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTOR_INITIATED_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestorInitiatedAuthenticationIndicator() {
    return requestorInitiatedAuthenticationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR_INITIATED_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestorInitiatedAuthenticationIndicator(String requestorInitiatedAuthenticationIndicator) {
    this.requestorInitiatedAuthenticationIndicator = requestorInitiatedAuthenticationIndicator;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation requestorName(String requestorName) {
    
    this.requestorName = requestorName;
    return this;
  }

  /**
   * Cardinal&#39;s directory server assigned 3DS Requestor Name value
   * @return requestorName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestorName() {
    return requestorName;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestorName(String requestorName) {
    this.requestorName = requestorName;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation referenceId(String referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

  /**
   * Reference ID that corresponds to the device fingerprinting data that was collected previously. Note Required for Hybrid integration. 
   * @return referenceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceId() {
    return referenceId;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation sdkMaxTimeout(String sdkMaxTimeout) {
    
    this.sdkMaxTimeout = sdkMaxTimeout;
    return this;
  }

  /**
   * This field indicates the maximum amount of time for all 3DS 2.0 messages to be communicated between all components (in minutes).  Possible Values:  Greater than or equal to 05 (05 is the minimum timeout to set)  Cardinal Default is set to 15  NOTE: This field is a required 3DS 2.0 field and Cardinal sends in a default of 15 if nothing is passed 
   * @return sdkMaxTimeout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SDK_MAX_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdkMaxTimeout() {
    return sdkMaxTimeout;
  }


  @JsonProperty(JSON_PROPERTY_SDK_MAX_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdkMaxTimeout(String sdkMaxTimeout) {
    this.sdkMaxTimeout = sdkMaxTimeout;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation secureCorporatePaymentIndicator(String secureCorporatePaymentIndicator) {
    
    this.secureCorporatePaymentIndicator = secureCorporatePaymentIndicator;
    return this;
  }

  /**
   * Indicates dedicated payment processes and procedures were used, potential secure corporate payment exemption applies. Possible Values : 0/1 
   * @return secureCorporatePaymentIndicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecureCorporatePaymentIndicator() {
    return secureCorporatePaymentIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecureCorporatePaymentIndicator(String secureCorporatePaymentIndicator) {
    this.secureCorporatePaymentIndicator = secureCorporatePaymentIndicator;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation transactionMode(String transactionMode) {
    
    this.transactionMode = transactionMode;
    return this;
  }

  /**
   * Transaction mode identifier. Identifies the channel from which the transaction originates. Possible values:  - &#x60;M&#x60;: MOTO (Mail Order Telephone Order) - &#x60;R&#x60;: Retail - &#x60;S&#x60;: eCommerce - &#x60;P&#x60;: Mobile Device - &#x60;T&#x60;: Tablet 
   * @return transactionMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionMode() {
    return transactionMode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionMode(String transactionMode) {
    this.transactionMode = transactionMode;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation whiteListStatus(String whiteListStatus) {
    
    this.whiteListStatus = whiteListStatus;
    return this;
  }

  /**
   * Enables the communication of trusted beneficiary/whitelist status between the ACS, the DS and the 3DS Requestor.  Possible Values:  Y - 3DS Requestor is whitelisted by cardholder  N - 3DS Requestor is not whitelisted by cardholder 
   * @return whiteListStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WHITE_LIST_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWhiteListStatus() {
    return whiteListStatus;
  }


  @JsonProperty(JSON_PROPERTY_WHITE_LIST_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhiteListStatus(String whiteListStatus) {
    this.whiteListStatus = whiteListStatus;
  }

  public CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation scoreRequest(Integer scoreRequest) {
    
    this.scoreRequest = scoreRequest;
    return this;
  }

  /**
   * Risk Assessment from Mastercard. This is to be sent by merchant if they would like to request a score
   * @return scoreRequest
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScoreRequest() {
    return scoreRequest;
  }


  @JsonProperty(JSON_PROPERTY_SCORE_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoreRequest(Integer scoreRequest) {
    this.scoreRequest = scoreRequest;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation = (CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation) o;
    return Objects.equals(this.strongAuthentication, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.strongAuthentication) &&
        Objects.equals(this.acsWindowSize, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.acsWindowSize) &&
        Objects.equals(this.alternateAuthenticationData, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.alternateAuthenticationData) &&
        Objects.equals(this.alternateAuthenticationDate, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.alternateAuthenticationDate) &&
        Objects.equals(this.alternateAuthenticationMethod, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.alternateAuthenticationMethod) &&
        Objects.equals(this.authenticationDate, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.authenticationDate) &&
        Objects.equals(this.authenticationTransactionId, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.authenticationTransactionId) &&
        Objects.equals(this.transactionFlowIndicator, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.transactionFlowIndicator) &&
        Objects.equals(this.challengeCode, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.challengeCode) &&
        Objects.equals(this.challengeStatus, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.challengeStatus) &&
        Objects.equals(this.customerCardAlias, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.customerCardAlias) &&
        Objects.equals(this.decoupledAuthenticationIndicator, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.decoupledAuthenticationIndicator) &&
        Objects.equals(this.decoupledAuthenticationMaxTime, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.decoupledAuthenticationMaxTime) &&
        Objects.equals(this.defaultCard, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.defaultCard) &&
        Objects.equals(this.deviceChannel, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.deviceChannel) &&
        Objects.equals(this.installmentTotalCount, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.installmentTotalCount) &&
        Objects.equals(this.merchantFraudRate, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.merchantFraudRate) &&
        Objects.equals(this.marketingOptIn, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.marketingOptIn) &&
        Objects.equals(this.marketingSource, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.marketingSource) &&
        Objects.equals(this.mcc, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.mcc) &&
        Objects.equals(this.merchantScore, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.merchantScore) &&
        Objects.equals(this.messageCategory, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.messageCategory) &&
        Objects.equals(this.npaCode, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.npaCode) &&
        Objects.equals(this.overridePaymentMethod, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.overridePaymentMethod) &&
        Objects.equals(this.overrideCountryCode, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.overrideCountryCode) &&
        Objects.equals(this.priorAuthenticationData, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.priorAuthenticationData) &&
        Objects.equals(this.priorAuthenticationMethod, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.priorAuthenticationMethod) &&
        Objects.equals(this.priorAuthenticationReferenceId, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.priorAuthenticationReferenceId) &&
        Objects.equals(this.priorAuthenticationTime, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.priorAuthenticationTime) &&
        Objects.equals(this.productCode, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.productCode) &&
        Objects.equals(this.returnUrl, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.returnUrl) &&
        Objects.equals(this.requestorId, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.requestorId) &&
        Objects.equals(this.requestorInitiatedAuthenticationIndicator, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.requestorInitiatedAuthenticationIndicator) &&
        Objects.equals(this.requestorName, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.requestorName) &&
        Objects.equals(this.referenceId, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.referenceId) &&
        Objects.equals(this.sdkMaxTimeout, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.sdkMaxTimeout) &&
        Objects.equals(this.secureCorporatePaymentIndicator, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.secureCorporatePaymentIndicator) &&
        Objects.equals(this.transactionMode, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.transactionMode) &&
        Objects.equals(this.whiteListStatus, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.whiteListStatus) &&
        Objects.equals(this.scoreRequest, createBundledDecisionManagerCaseRequestConsumerAuthenticationInformation.scoreRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(strongAuthentication, acsWindowSize, alternateAuthenticationData, alternateAuthenticationDate, alternateAuthenticationMethod, authenticationDate, authenticationTransactionId, transactionFlowIndicator, challengeCode, challengeStatus, customerCardAlias, decoupledAuthenticationIndicator, decoupledAuthenticationMaxTime, defaultCard, deviceChannel, installmentTotalCount, merchantFraudRate, marketingOptIn, marketingSource, mcc, merchantScore, messageCategory, npaCode, overridePaymentMethod, overrideCountryCode, priorAuthenticationData, priorAuthenticationMethod, priorAuthenticationReferenceId, priorAuthenticationTime, productCode, returnUrl, requestorId, requestorInitiatedAuthenticationIndicator, requestorName, referenceId, sdkMaxTimeout, secureCorporatePaymentIndicator, transactionMode, whiteListStatus, scoreRequest);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBundledDecisionManagerCaseRequestConsumerAuthenticationInformation {\n");
    sb.append("    strongAuthentication: ").append(toIndentedString(strongAuthentication)).append("\n");
    sb.append("    acsWindowSize: ").append(toIndentedString(acsWindowSize)).append("\n");
    sb.append("    alternateAuthenticationData: ").append(toIndentedString(alternateAuthenticationData)).append("\n");
    sb.append("    alternateAuthenticationDate: ").append(toIndentedString(alternateAuthenticationDate)).append("\n");
    sb.append("    alternateAuthenticationMethod: ").append(toIndentedString(alternateAuthenticationMethod)).append("\n");
    sb.append("    authenticationDate: ").append(toIndentedString(authenticationDate)).append("\n");
    sb.append("    authenticationTransactionId: ").append(toIndentedString(authenticationTransactionId)).append("\n");
    sb.append("    transactionFlowIndicator: ").append(toIndentedString(transactionFlowIndicator)).append("\n");
    sb.append("    challengeCode: ").append(toIndentedString(challengeCode)).append("\n");
    sb.append("    challengeStatus: ").append(toIndentedString(challengeStatus)).append("\n");
    sb.append("    customerCardAlias: ").append(toIndentedString(customerCardAlias)).append("\n");
    sb.append("    decoupledAuthenticationIndicator: ").append(toIndentedString(decoupledAuthenticationIndicator)).append("\n");
    sb.append("    decoupledAuthenticationMaxTime: ").append(toIndentedString(decoupledAuthenticationMaxTime)).append("\n");
    sb.append("    defaultCard: ").append(toIndentedString(defaultCard)).append("\n");
    sb.append("    deviceChannel: ").append(toIndentedString(deviceChannel)).append("\n");
    sb.append("    installmentTotalCount: ").append(toIndentedString(installmentTotalCount)).append("\n");
    sb.append("    merchantFraudRate: ").append(toIndentedString(merchantFraudRate)).append("\n");
    sb.append("    marketingOptIn: ").append(toIndentedString(marketingOptIn)).append("\n");
    sb.append("    marketingSource: ").append(toIndentedString(marketingSource)).append("\n");
    sb.append("    mcc: ").append(toIndentedString(mcc)).append("\n");
    sb.append("    merchantScore: ").append(toIndentedString(merchantScore)).append("\n");
    sb.append("    messageCategory: ").append(toIndentedString(messageCategory)).append("\n");
    sb.append("    npaCode: ").append(toIndentedString(npaCode)).append("\n");
    sb.append("    overridePaymentMethod: ").append(toIndentedString(overridePaymentMethod)).append("\n");
    sb.append("    overrideCountryCode: ").append(toIndentedString(overrideCountryCode)).append("\n");
    sb.append("    priorAuthenticationData: ").append(toIndentedString(priorAuthenticationData)).append("\n");
    sb.append("    priorAuthenticationMethod: ").append(toIndentedString(priorAuthenticationMethod)).append("\n");
    sb.append("    priorAuthenticationReferenceId: ").append(toIndentedString(priorAuthenticationReferenceId)).append("\n");
    sb.append("    priorAuthenticationTime: ").append(toIndentedString(priorAuthenticationTime)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    requestorId: ").append(toIndentedString(requestorId)).append("\n");
    sb.append("    requestorInitiatedAuthenticationIndicator: ").append(toIndentedString(requestorInitiatedAuthenticationIndicator)).append("\n");
    sb.append("    requestorName: ").append(toIndentedString(requestorName)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    sdkMaxTimeout: ").append(toIndentedString(sdkMaxTimeout)).append("\n");
    sb.append("    secureCorporatePaymentIndicator: ").append(toIndentedString(secureCorporatePaymentIndicator)).append("\n");
    sb.append("    transactionMode: ").append(toIndentedString(transactionMode)).append("\n");
    sb.append("    whiteListStatus: ").append(toIndentedString(whiteListStatus)).append("\n");
    sb.append("    scoreRequest: ").append(toIndentedString(scoreRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

