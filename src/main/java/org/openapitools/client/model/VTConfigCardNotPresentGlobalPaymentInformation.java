/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.VTConfigCardNotPresentGlobalPaymentInformationBasicInformation;
import org.openapitools.client.model.VTConfigCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields;
import org.openapitools.client.model.VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VTConfigCardNotPresentGlobalPaymentInformation
 */
@JsonPropertyOrder({
  VTConfigCardNotPresentGlobalPaymentInformation.JSON_PROPERTY_BASIC_INFORMATION,
  VTConfigCardNotPresentGlobalPaymentInformation.JSON_PROPERTY_PAYMENT_INFORMATION,
  VTConfigCardNotPresentGlobalPaymentInformation.JSON_PROPERTY_MERCHANT_DEFINED_DATA_FIELDS
})
@JsonTypeName("VTConfig_cardNotPresent_globalPaymentInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class VTConfigCardNotPresentGlobalPaymentInformation {
  public static final String JSON_PROPERTY_BASIC_INFORMATION = "basicInformation";
  private VTConfigCardNotPresentGlobalPaymentInformationBasicInformation basicInformation;

  public static final String JSON_PROPERTY_PAYMENT_INFORMATION = "paymentInformation";
  private VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation paymentInformation;

  public static final String JSON_PROPERTY_MERCHANT_DEFINED_DATA_FIELDS = "merchantDefinedDataFields";
  private VTConfigCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields merchantDefinedDataFields;

  public VTConfigCardNotPresentGlobalPaymentInformation() {
  }

  public VTConfigCardNotPresentGlobalPaymentInformation basicInformation(VTConfigCardNotPresentGlobalPaymentInformationBasicInformation basicInformation) {
    
    this.basicInformation = basicInformation;
    return this;
  }

  /**
   * Get basicInformation
   * @return basicInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASIC_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation getBasicInformation() {
    return basicInformation;
  }


  @JsonProperty(JSON_PROPERTY_BASIC_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBasicInformation(VTConfigCardNotPresentGlobalPaymentInformationBasicInformation basicInformation) {
    this.basicInformation = basicInformation;
  }

  public VTConfigCardNotPresentGlobalPaymentInformation paymentInformation(VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation paymentInformation) {
    
    this.paymentInformation = paymentInformation;
    return this;
  }

  /**
   * Get paymentInformation
   * @return paymentInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation getPaymentInformation() {
    return paymentInformation;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInformation(VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation paymentInformation) {
    this.paymentInformation = paymentInformation;
  }

  public VTConfigCardNotPresentGlobalPaymentInformation merchantDefinedDataFields(VTConfigCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields merchantDefinedDataFields) {
    
    this.merchantDefinedDataFields = merchantDefinedDataFields;
    return this;
  }

  /**
   * Get merchantDefinedDataFields
   * @return merchantDefinedDataFields
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_DEFINED_DATA_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VTConfigCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields getMerchantDefinedDataFields() {
    return merchantDefinedDataFields;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_DEFINED_DATA_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantDefinedDataFields(VTConfigCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields merchantDefinedDataFields) {
    this.merchantDefinedDataFields = merchantDefinedDataFields;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VTConfigCardNotPresentGlobalPaymentInformation vtConfigCardNotPresentGlobalPaymentInformation = (VTConfigCardNotPresentGlobalPaymentInformation) o;
    return Objects.equals(this.basicInformation, vtConfigCardNotPresentGlobalPaymentInformation.basicInformation) &&
        Objects.equals(this.paymentInformation, vtConfigCardNotPresentGlobalPaymentInformation.paymentInformation) &&
        Objects.equals(this.merchantDefinedDataFields, vtConfigCardNotPresentGlobalPaymentInformation.merchantDefinedDataFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basicInformation, paymentInformation, merchantDefinedDataFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VTConfigCardNotPresentGlobalPaymentInformation {\n");
    sb.append("    basicInformation: ").append(toIndentedString(basicInformation)).append("\n");
    sb.append("    paymentInformation: ").append(toIndentedString(paymentInformation)).append("\n");
    sb.append("    merchantDefinedDataFields: ").append(toIndentedString(merchantDefinedDataFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

