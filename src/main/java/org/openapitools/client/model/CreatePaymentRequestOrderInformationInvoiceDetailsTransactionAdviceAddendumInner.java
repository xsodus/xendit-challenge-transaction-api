/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner.JSON_PROPERTY_DATA
})
@JsonTypeName("createPayment_request_orderInformation_invoiceDetails_transactionAdviceAddendum_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner {
  public static final String JSON_PROPERTY_DATA = "data";
  private String data;

  public CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner() {
  }

  public CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner data(String data) {
    
    this.data = data;
    return this;
  }

  /**
   * Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information about a transaction on the customer&#39;s American Express card statement. When you send TAA fields, start with amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be ignored.  To use these fields, contact CyberSource Customer Support to have your account enabled for this feature. 
   * @return data
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(String data) {
    this.data = data;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner createPaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner = (CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner) o;
    return Objects.equals(this.data, createPaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

