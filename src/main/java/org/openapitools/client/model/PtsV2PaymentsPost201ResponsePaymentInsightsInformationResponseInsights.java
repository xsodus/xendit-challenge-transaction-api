/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.JSON_PROPERTY_CATEGORY,
  PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.JSON_PROPERTY_CATEGORY_CODE,
  PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.JSON_PROPERTY_PROCESSOR_RAW_NAME
})
@JsonTypeName("ptsV2PaymentsPost201Response_paymentInsightsInformation_responseInsights")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights {
  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_CATEGORY_CODE = "categoryCode";
  private String categoryCode;

  public static final String JSON_PROPERTY_PROCESSOR_RAW_NAME = "processorRawName";
  private String processorRawName;

  public PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights() {
  }

  public PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights category(String category) {
    
    this.category = category;
    return this;
  }

  /**
   * Categorization of response message from processor  Possible Values: - &#x60;ISSUER_WILL_NEVER_APPROVE&#x60; - &#x60;ISSUER_CANNOT_APPROVE_AT_THIS_TIME&#x60; - &#x60;ISSUER_CANNOT_APPROVE_WITH_THESE_DETAILS&#x60; - &#x60;GENERIC_ERROR&#x60; - &#x60;PAYMENT_INSIGHTS_INTERNAL_ERROR&#x60; - &#x60;OTHERS&#x60; - &#x60;PAYMENT_INSIGHTS_RESPONSE_CATEGORY_MATCH_NOT_FOUND&#x60; 
   * @return category
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }

  public PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights categoryCode(String categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Categorization Code of response message from processor  Possible Values: - &#x60;01&#x60; : ISSUER_WILL_NEVER_APPROVE - &#x60;02&#x60; : ISSUER_CANNOT_APPROVE_AT_THIS_TIME - &#x60;03&#x60; : ISSUER_CANNOT_APPROVE_WITH_THESE_DETAILS - &#x60;04&#x60; : GENERIC_ERROR - &#x60;97&#x60; : PAYMENT_INSIGHTS_INTERNAL_ERROR - &#x60;98&#x60; : OTHERS - &#x60;99&#x60; : PAYMENT_INSIGHTS_RESPONSE_CATEGORY_MATCH_NOT_FOUND 
   * @return categoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategoryCode() {
    return categoryCode;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }

  public PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights processorRawName(String processorRawName) {
    
    this.processorRawName = processorRawName;
    return this;
  }

  /**
   * Raw name of the processor used for the transaction processing, especially useful during acquirer swing to see which processor transaction settled with 
   * @return processorRawName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSOR_RAW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessorRawName() {
    return processorRawName;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSOR_RAW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessorRawName(String processorRawName) {
    this.processorRawName = processorRawName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights ptsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights = (PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights) o;
    return Objects.equals(this.category, ptsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.category) &&
        Objects.equals(this.categoryCode, ptsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.categoryCode) &&
        Objects.equals(this.processorRawName, ptsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights.processorRawName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, categoryCode, processorRawName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponsePaymentInsightsInformationResponseInsights {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    processorRawName: ").append(toIndentedString(processorRawName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

