/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TssV2TransactionsGet200ResponsePaymentInformationBankMandate
 */
@JsonPropertyOrder({
  TssV2TransactionsGet200ResponsePaymentInformationBankMandate.JSON_PROPERTY_REFERENCE_NUMBER,
  TssV2TransactionsGet200ResponsePaymentInformationBankMandate.JSON_PROPERTY_RECURRING_TYPE,
  TssV2TransactionsGet200ResponsePaymentInformationBankMandate.JSON_PROPERTY_ID
})
@JsonTypeName("tssV2TransactionsGet200Response_paymentInformation_bank_mandate")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TssV2TransactionsGet200ResponsePaymentInformationBankMandate {
  public static final String JSON_PROPERTY_REFERENCE_NUMBER = "referenceNumber";
  private String referenceNumber;

  public static final String JSON_PROPERTY_RECURRING_TYPE = "recurringType";
  private String recurringType;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public TssV2TransactionsGet200ResponsePaymentInformationBankMandate() {
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankMandate referenceNumber(String referenceNumber) {
    
    this.referenceNumber = referenceNumber;
    return this;
  }

  /**
   * Unique value generated by CyberSource that identifies the transaction. Use this value to identify transactions in the Collections Report, which provides settlement information.  For details, see the &#x60;direct_debit_reconciliation_reference_number&#x60; reply field description in [Ingenico ePayments Developer Guide For Direct Debits.](https://apps.cybersource.com/library/documentation/dev_guides/Ingenico_ePayments_Dev/html/) 
   * @return referenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceNumber() {
    return referenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankMandate recurringType(String recurringType) {
    
    this.recurringType = recurringType;
    return this;
  }

  /**
   * Whether the direct debit is the first or last direct debit associated with the mandate, or one in between. Required only for the United Kingdom. Possible values: - &#x60;001&#x60;: First direct debit associated with this mandate. Use this value if a one-time direct debit). - &#x60;002&#x60;: Subsequent direct debits associated with this mandate. - &#x60;003&#x60;: Last direct debit associated with this mandate.  For details, see the &#x60;direct_debit_recurring_type&#x60; request field description in [Ingenico ePayments Developer Guide For Direct Debits.](https://apps.cybersource.com/library/documentation/dev_guides/Ingenico_ePayments_Dev/html/) 
   * @return recurringType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecurringType() {
    return recurringType;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringType(String recurringType) {
    this.recurringType = recurringType;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankMandate id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * The mandate ID. Required only for the United Kingdom.  For details, see the &#x60;mandate_id&#x60; request field description in [Ingenico ePayments Developer Guide For Direct Debits.](https://apps.cybersource.com/library/documentation/dev_guides/Ingenico_ePayments_Dev/html/) 
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2TransactionsGet200ResponsePaymentInformationBankMandate tssV2TransactionsGet200ResponsePaymentInformationBankMandate = (TssV2TransactionsGet200ResponsePaymentInformationBankMandate) o;
    return Objects.equals(this.referenceNumber, tssV2TransactionsGet200ResponsePaymentInformationBankMandate.referenceNumber) &&
        Objects.equals(this.recurringType, tssV2TransactionsGet200ResponsePaymentInformationBankMandate.recurringType) &&
        Objects.equals(this.id, tssV2TransactionsGet200ResponsePaymentInformationBankMandate.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceNumber, recurringType, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2TransactionsGet200ResponsePaymentInformationBankMandate {\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    recurringType: ").append(toIndentedString(recurringType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

