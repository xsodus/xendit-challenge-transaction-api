/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentsStrongAuthIssuerInformation
 */
@JsonPropertyOrder({
  PaymentsStrongAuthIssuerInformation.JSON_PROPERTY_RISK_ANALYSIS_EXEMPTION_RESULT,
  PaymentsStrongAuthIssuerInformation.JSON_PROPERTY_TRUSTED_MERCHANT_EXEMPTION_RESULT,
  PaymentsStrongAuthIssuerInformation.JSON_PROPERTY_LOW_VALUE_EXEMPTION_RESULT,
  PaymentsStrongAuthIssuerInformation.JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_RESULT,
  PaymentsStrongAuthIssuerInformation.JSON_PROPERTY_TRANSACTION_RISK_ANALYSIS_EXEMPTION_RESULT
})
@JsonTypeName("paymentsStrongAuthIssuerInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PaymentsStrongAuthIssuerInformation {
  public static final String JSON_PROPERTY_RISK_ANALYSIS_EXEMPTION_RESULT = "riskAnalysisExemptionResult";
  private String riskAnalysisExemptionResult;

  public static final String JSON_PROPERTY_TRUSTED_MERCHANT_EXEMPTION_RESULT = "trustedMerchantExemptionResult";
  private String trustedMerchantExemptionResult;

  public static final String JSON_PROPERTY_LOW_VALUE_EXEMPTION_RESULT = "lowValueExemptionResult";
  private String lowValueExemptionResult;

  public static final String JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_RESULT = "secureCorporatePaymentResult";
  private String secureCorporatePaymentResult;

  public static final String JSON_PROPERTY_TRANSACTION_RISK_ANALYSIS_EXEMPTION_RESULT = "transactionRiskAnalysisExemptionResult";
  private String transactionRiskAnalysisExemptionResult;

  public PaymentsStrongAuthIssuerInformation() {
  }

  public PaymentsStrongAuthIssuerInformation riskAnalysisExemptionResult(String riskAnalysisExemptionResult) {
    
    this.riskAnalysisExemptionResult = riskAnalysisExemptionResult;
    return this;
  }

  /**
   * Possible values: Visa Platform Connect - &#x60;8401&#x60; Merchant not participating in Visa Trusted Listing Program. - &#x60;8402&#x60; Issuer not participating in Visa Trusted Listing Program. - &#x60;8403&#x60; Cardholder has not trusted the merchant (supplied by Visa Net). - &#x60;8404&#x60; Indeterminate or invalid issuer response. - &#x60;8473&#x60; Cardholder has not trusted the merchant (issuer-supplied). - &#x60;8474&#x60; Did not meet the exemption criteria (issuer-supplied).  Upto 20 Values may be received in a transaction. 
   * @return riskAnalysisExemptionResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RISK_ANALYSIS_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRiskAnalysisExemptionResult() {
    return riskAnalysisExemptionResult;
  }


  @JsonProperty(JSON_PROPERTY_RISK_ANALYSIS_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskAnalysisExemptionResult(String riskAnalysisExemptionResult) {
    this.riskAnalysisExemptionResult = riskAnalysisExemptionResult;
  }

  public PaymentsStrongAuthIssuerInformation trustedMerchantExemptionResult(String trustedMerchantExemptionResult) {
    
    this.trustedMerchantExemptionResult = trustedMerchantExemptionResult;
    return this;
  }

  /**
   * Possible values: Visa Platform Connect - &#x60;2&#x60; Trusted merchant exemption validated/honored. - &#x60;3&#x60; Trusted merchant exemption failed validation/not honored. 
   * @return trustedMerchantExemptionResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRUSTED_MERCHANT_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrustedMerchantExemptionResult() {
    return trustedMerchantExemptionResult;
  }


  @JsonProperty(JSON_PROPERTY_TRUSTED_MERCHANT_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrustedMerchantExemptionResult(String trustedMerchantExemptionResult) {
    this.trustedMerchantExemptionResult = trustedMerchantExemptionResult;
  }

  public PaymentsStrongAuthIssuerInformation lowValueExemptionResult(String lowValueExemptionResult) {
    
    this.lowValueExemptionResult = lowValueExemptionResult;
    return this;
  }

  /**
   * This will be the value returned by Visanet when low value exemption has been requested.  Valid values: Visa Platform Connect - &#x60;2&#x60; Low value exemption validated/honored - &#x60;3&#x60; Low value exemption failed validation/not honored 
   * @return lowValueExemptionResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOW_VALUE_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLowValueExemptionResult() {
    return lowValueExemptionResult;
  }


  @JsonProperty(JSON_PROPERTY_LOW_VALUE_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowValueExemptionResult(String lowValueExemptionResult) {
    this.lowValueExemptionResult = lowValueExemptionResult;
  }

  public PaymentsStrongAuthIssuerInformation secureCorporatePaymentResult(String secureCorporatePaymentResult) {
    
    this.secureCorporatePaymentResult = secureCorporatePaymentResult;
    return this;
  }

  /**
   * This will be the value returned by Visanet when secure corporate payment (scp) exemption has been requested.  Valid values: Visa Platform Connect - &#x60;2&#x60; Secure corporate payment exemption validated/honored - &#x60;3&#x60; Secure corporate payment exemption failed validation/not honored 
   * @return secureCorporatePaymentResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecureCorporatePaymentResult() {
    return secureCorporatePaymentResult;
  }


  @JsonProperty(JSON_PROPERTY_SECURE_CORPORATE_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecureCorporatePaymentResult(String secureCorporatePaymentResult) {
    this.secureCorporatePaymentResult = secureCorporatePaymentResult;
  }

  public PaymentsStrongAuthIssuerInformation transactionRiskAnalysisExemptionResult(String transactionRiskAnalysisExemptionResult) {
    
    this.transactionRiskAnalysisExemptionResult = transactionRiskAnalysisExemptionResult;
    return this;
  }

  /**
   * This will be the value returned by Visanet when transaction risk analysis (TRA) exemption has been requested.    Valid values: Visa Platform Connect   - &#x60;2&#x60; transaction risk analysis (TRA) exemption validated/honored   - &#x60;3&#x60; transaction risk analysis (TRA) exemption failed validation/not honored 
   * @return transactionRiskAnalysisExemptionResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_RISK_ANALYSIS_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionRiskAnalysisExemptionResult() {
    return transactionRiskAnalysisExemptionResult;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_RISK_ANALYSIS_EXEMPTION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionRiskAnalysisExemptionResult(String transactionRiskAnalysisExemptionResult) {
    this.transactionRiskAnalysisExemptionResult = transactionRiskAnalysisExemptionResult;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsStrongAuthIssuerInformation paymentsStrongAuthIssuerInformation = (PaymentsStrongAuthIssuerInformation) o;
    return Objects.equals(this.riskAnalysisExemptionResult, paymentsStrongAuthIssuerInformation.riskAnalysisExemptionResult) &&
        Objects.equals(this.trustedMerchantExemptionResult, paymentsStrongAuthIssuerInformation.trustedMerchantExemptionResult) &&
        Objects.equals(this.lowValueExemptionResult, paymentsStrongAuthIssuerInformation.lowValueExemptionResult) &&
        Objects.equals(this.secureCorporatePaymentResult, paymentsStrongAuthIssuerInformation.secureCorporatePaymentResult) &&
        Objects.equals(this.transactionRiskAnalysisExemptionResult, paymentsStrongAuthIssuerInformation.transactionRiskAnalysisExemptionResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(riskAnalysisExemptionResult, trustedMerchantExemptionResult, lowValueExemptionResult, secureCorporatePaymentResult, transactionRiskAnalysisExemptionResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsStrongAuthIssuerInformation {\n");
    sb.append("    riskAnalysisExemptionResult: ").append(toIndentedString(riskAnalysisExemptionResult)).append("\n");
    sb.append("    trustedMerchantExemptionResult: ").append(toIndentedString(trustedMerchantExemptionResult)).append("\n");
    sb.append("    lowValueExemptionResult: ").append(toIndentedString(lowValueExemptionResult)).append("\n");
    sb.append("    secureCorporatePaymentResult: ").append(toIndentedString(secureCorporatePaymentResult)).append("\n");
    sb.append("    transactionRiskAnalysisExemptionResult: ").append(toIndentedString(transactionRiskAnalysisExemptionResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

