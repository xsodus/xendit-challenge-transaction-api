/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TssV2PostEmvTags200ResponseParsedEMVTagsListInner
 */
@JsonPropertyOrder({
  TssV2PostEmvTags200ResponseParsedEMVTagsListInner.JSON_PROPERTY_REQUEST_ID,
  TssV2PostEmvTags200ResponseParsedEMVTagsListInner.JSON_PROPERTY_TOTAL_TAGS,
  TssV2PostEmvTags200ResponseParsedEMVTagsListInner.JSON_PROPERTY_EMV_TAG_BREAKDOWN_LIST
})
@JsonTypeName("tssV2PostEmvTags200Response_parsedEMVTagsList_inner")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TssV2PostEmvTags200ResponseParsedEMVTagsListInner {
  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_TOTAL_TAGS = "totalTags";
  private Integer totalTags;

  public static final String JSON_PROPERTY_EMV_TAG_BREAKDOWN_LIST = "emvTagBreakdownList";
  private List<TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner> emvTagBreakdownList = new ArrayList<>();

  public TssV2PostEmvTags200ResponseParsedEMVTagsListInner() {
  }

  public TssV2PostEmvTags200ResponseParsedEMVTagsListInner requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

  /**
   * An unique identification number generated by Cybersource to identify the submitted request. Returned by all services. It is also appended to the endpoint of the resource. On incremental authorizations, this value with be the same as the identification number returned in the original authorization response. 
   * @return requestId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public TssV2PostEmvTags200ResponseParsedEMVTagsListInner totalTags(Integer totalTags) {
    
    this.totalTags = totalTags;
    return this;
  }

  /**
   * Number of tags parsed 
   * @return totalTags
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalTags() {
    return totalTags;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalTags(Integer totalTags) {
    this.totalTags = totalTags;
  }

  public TssV2PostEmvTags200ResponseParsedEMVTagsListInner emvTagBreakdownList(List<TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner> emvTagBreakdownList) {
    
    this.emvTagBreakdownList = emvTagBreakdownList;
    return this;
  }

  public TssV2PostEmvTags200ResponseParsedEMVTagsListInner addEmvTagBreakdownListItem(TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner emvTagBreakdownListItem) {
    if (this.emvTagBreakdownList == null) {
      this.emvTagBreakdownList = new ArrayList<>();
    }
    this.emvTagBreakdownList.add(emvTagBreakdownListItem);
    return this;
  }

  /**
   * An array of objects, where each object contains one parsed tag from the relevant EMV string. 
   * @return emvTagBreakdownList
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMV_TAG_BREAKDOWN_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner> getEmvTagBreakdownList() {
    return emvTagBreakdownList;
  }


  @JsonProperty(JSON_PROPERTY_EMV_TAG_BREAKDOWN_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmvTagBreakdownList(List<TssV2PostEmvTags200ResponseParsedEMVTagsListInnerEmvTagBreakdownListInner> emvTagBreakdownList) {
    this.emvTagBreakdownList = emvTagBreakdownList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2PostEmvTags200ResponseParsedEMVTagsListInner tssV2PostEmvTags200ResponseParsedEMVTagsListInner = (TssV2PostEmvTags200ResponseParsedEMVTagsListInner) o;
    return Objects.equals(this.requestId, tssV2PostEmvTags200ResponseParsedEMVTagsListInner.requestId) &&
        Objects.equals(this.totalTags, tssV2PostEmvTags200ResponseParsedEMVTagsListInner.totalTags) &&
        Objects.equals(this.emvTagBreakdownList, tssV2PostEmvTags200ResponseParsedEMVTagsListInner.emvTagBreakdownList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, totalTags, emvTagBreakdownList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2PostEmvTags200ResponseParsedEMVTagsListInner {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    totalTags: ").append(toIndentedString(totalTags)).append("\n");
    sb.append("    emvTagBreakdownList: ").append(toIndentedString(emvTagBreakdownList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

