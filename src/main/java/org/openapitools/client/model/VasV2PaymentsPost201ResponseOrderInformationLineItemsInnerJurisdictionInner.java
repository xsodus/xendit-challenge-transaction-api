/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner
 */
@JsonPropertyOrder({
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_TYPE,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_TAX_NAME,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_TAX_AMOUNT,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_TAXABLE,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_NAME,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_CODE,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_RATE,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_REGION,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.JSON_PROPERTY_COUNTRY
})
@JsonTypeName("vasV2PaymentsPost201Response_orderInformation_lineItems_inner_jurisdiction_inner")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_TAX_NAME = "taxName";
  private String taxName;

  public static final String JSON_PROPERTY_TAX_AMOUNT = "taxAmount";
  private String taxAmount;

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  private String taxable;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_RATE = "rate";
  private String rate;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner() {
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Type of tax jurisdiction for the item. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;.  Possible values: - &#x60;city&#x60; - &#x60;county&#x60; - &#x60;state&#x60; - &#x60;country&#x60; - &#x60;special&#x60; 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner taxName(String taxName) {
    
    this.taxName = taxName;
    return this;
  }

  /**
   * Name of the jurisdiction tax for the item. For example, CA State Tax. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return taxName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxName() {
    return taxName;
  }


  @JsonProperty(JSON_PROPERTY_TAX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxName(String taxName) {
    this.taxName = taxName;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner taxAmount(String taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Jurisdiction tax amount for the item. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return taxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxAmount() {
    return taxAmount;
  }


  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxAmount(String taxAmount) {
    this.taxAmount = taxAmount;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner taxable(String taxable) {
    
    this.taxable = taxable;
    return this;
  }

  /**
   * Jurisdiction taxable amount for the item, not including product level exemptions. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return taxable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(String taxable) {
    this.taxable = taxable;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Free-text description of the jurisdiction for the item. For example, San Mateo County. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner code(String code) {
    
    this.code = code;
    return this;
  }

  /**
   * Jurisdiction code assigned by the tax provider. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner rate(String rate) {
    
    this.rate = rate;
    return this;
  }

  /**
   * Jurisdiction tax rate for the item. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return rate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(String rate) {
    this.rate = rate;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner region(String region) {
    
    this.region = region;
    return this;
  }

  /**
   * Free-text description of the jurisdiction region for the item. For example, CA (California State) or GB (Great Britain). Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return region
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Tax jurisdiction country for the item. Returned only if the &#x60;taxInformation.showTaxPerLineItem&#x60; field is set to &#x60;Yes&#x60;. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner = (VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner) o;
    return Objects.equals(this.type, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.type) &&
        Objects.equals(this.taxName, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.taxName) &&
        Objects.equals(this.taxAmount, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.taxAmount) &&
        Objects.equals(this.taxable, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.taxable) &&
        Objects.equals(this.name, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.name) &&
        Objects.equals(this.code, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.code) &&
        Objects.equals(this.rate, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.rate) &&
        Objects.equals(this.region, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.region) &&
        Objects.equals(this.country, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, taxName, taxAmount, taxable, name, code, rate, region, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerJurisdictionInner {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    taxName: ").append(toIndentedString(taxName)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

