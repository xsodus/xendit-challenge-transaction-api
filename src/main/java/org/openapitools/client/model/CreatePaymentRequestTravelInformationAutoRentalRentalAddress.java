/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestTravelInformationAutoRentalRentalAddress
 */
@JsonPropertyOrder({
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_CITY,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_STATE,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_COUNTRY,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_LOCATION_ID,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_ADDRESS1,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_ADDRESS2,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_POSTAL_CODE,
  CreatePaymentRequestTravelInformationAutoRentalRentalAddress.JSON_PROPERTY_LOCATION
})
@JsonTypeName("createPayment_request_travelInformation_autoRental_rentalAddress")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestTravelInformationAutoRentalRentalAddress {
  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_LOCATION_ID = "locationId";
  private String locationId;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private String location;

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress() {
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress city(String city) {
    
    this.city = city;
    return this;
  }

  /**
   * City in which the auto was rented.  For authorizations, this field is supported for Visa, MasterCard, and American Express.  For captures, this field is supported only for American Express.  For all other card types, this field is ignored. 
   * @return city
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress state(String state) {
    
    this.state = state;
    return this;
  }

  /**
   * State in which the auto was rented. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf). 
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country where the auto was rented. Use the [ISO Standard Country Codes.](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf) This field is supported only for American Express. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress locationId(String locationId) {
    
    this.locationId = locationId;
    return this;
  }

  /**
   * The agency code, address, phone number, etc., used to identify the location where the vehicle was rented. 
   * @return locationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * Address from where the vehicle was rented. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

  /**
   * Address from where the vehicle was rented. 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * When merchant wants to send the rental address&#39;s postal code. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CreatePaymentRequestTravelInformationAutoRentalRentalAddress location(String location) {
    
    this.location = location;
    return this;
  }

  /**
   * This field contains the location where a taxi passenger was picked up or where an auto rental vehicle was picked up. In most cases, this is the rental agency&#39;s business name that appears on the storefront and/or customer receipts, commonly referred to as the DBA (Doing Business As) name. However, if the vehicle was picked up at another location (e.g., a hotel,auto dealership, repair shop, etc.), the name of that location should be used. This entry must be easily recognized by the Cardmember to avoid unnecessary inquiries. If the name is more than 38  characters, use proper and meaningful abbreviation, when possible. 
   * @return location
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(String location) {
    this.location = location;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestTravelInformationAutoRentalRentalAddress createPaymentRequestTravelInformationAutoRentalRentalAddress = (CreatePaymentRequestTravelInformationAutoRentalRentalAddress) o;
    return Objects.equals(this.city, createPaymentRequestTravelInformationAutoRentalRentalAddress.city) &&
        Objects.equals(this.state, createPaymentRequestTravelInformationAutoRentalRentalAddress.state) &&
        Objects.equals(this.country, createPaymentRequestTravelInformationAutoRentalRentalAddress.country) &&
        Objects.equals(this.locationId, createPaymentRequestTravelInformationAutoRentalRentalAddress.locationId) &&
        Objects.equals(this.address1, createPaymentRequestTravelInformationAutoRentalRentalAddress.address1) &&
        Objects.equals(this.address2, createPaymentRequestTravelInformationAutoRentalRentalAddress.address2) &&
        Objects.equals(this.postalCode, createPaymentRequestTravelInformationAutoRentalRentalAddress.postalCode) &&
        Objects.equals(this.location, createPaymentRequestTravelInformationAutoRentalRentalAddress.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, state, country, locationId, address1, address2, postalCode, location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestTravelInformationAutoRentalRentalAddress {\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

