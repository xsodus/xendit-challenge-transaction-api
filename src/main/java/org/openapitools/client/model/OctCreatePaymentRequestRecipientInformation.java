/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OctCreatePaymentRequestRecipientInformation
 */
@JsonPropertyOrder({
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_FIRST_NAME,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_MIDDLE_NAME,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_LAST_NAME,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_ADDRESS1,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_LOCALITY,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_COUNTRY,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_POSTAL_CODE,
  OctCreatePaymentRequestRecipientInformation.JSON_PROPERTY_PHONE_NUMBER
})
@JsonTypeName("octCreatePayment_request_recipientInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class OctCreatePaymentRequestRecipientInformation {
  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  public OctCreatePaymentRequestRecipientInformation() {
  }

  public OctCreatePaymentRequestRecipientInformation firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of recipient. characters. * CTV (14) * Paymentech (30) 
   * @return firstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public OctCreatePaymentRequestRecipientInformation middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

  /**
   * Recipient&#39;s middle name. This field is a _passthrough_, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. If the field is not required for the transaction, CyberSource does not forward it to the processor. 
   * @return middleName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public OctCreatePaymentRequestRecipientInformation lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of recipient. characters. * CTV (14) * Paymentech (30) 
   * @return lastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public OctCreatePaymentRequestRecipientInformation address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * Recipient address information. Required only for FDCCompass.
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public OctCreatePaymentRequestRecipientInformation locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * Recipient city. Required only for FDCCompass.
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public OctCreatePaymentRequestRecipientInformation administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * Recipient State. Required only for FDCCompass.
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public OctCreatePaymentRequestRecipientInformation country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Recipient country code. Required only for FDCCompass.
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public OctCreatePaymentRequestRecipientInformation postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Recipient postal code. Required only for FDCCompass.
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public OctCreatePaymentRequestRecipientInformation phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Recipient phone number. Required only for FDCCompass.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OctCreatePaymentRequestRecipientInformation octCreatePaymentRequestRecipientInformation = (OctCreatePaymentRequestRecipientInformation) o;
    return Objects.equals(this.firstName, octCreatePaymentRequestRecipientInformation.firstName) &&
        Objects.equals(this.middleName, octCreatePaymentRequestRecipientInformation.middleName) &&
        Objects.equals(this.lastName, octCreatePaymentRequestRecipientInformation.lastName) &&
        Objects.equals(this.address1, octCreatePaymentRequestRecipientInformation.address1) &&
        Objects.equals(this.locality, octCreatePaymentRequestRecipientInformation.locality) &&
        Objects.equals(this.administrativeArea, octCreatePaymentRequestRecipientInformation.administrativeArea) &&
        Objects.equals(this.country, octCreatePaymentRequestRecipientInformation.country) &&
        Objects.equals(this.postalCode, octCreatePaymentRequestRecipientInformation.postalCode) &&
        Objects.equals(this.phoneNumber, octCreatePaymentRequestRecipientInformation.phoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, middleName, lastName, address1, locality, administrativeArea, country, postalCode, phoneNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OctCreatePaymentRequestRecipientInformation {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

