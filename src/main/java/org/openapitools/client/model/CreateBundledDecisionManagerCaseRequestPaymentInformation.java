/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreateBundledDecisionManagerCaseRequestPaymentInformationCard;
import org.openapitools.client.model.CreateBundledDecisionManagerCaseRequestPaymentInformationTokenizedCard;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationBank;
import org.openapitools.client.model.CreatePaymentRequestPaymentInformationCustomer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the payment data for this transaction.
 */
@JsonPropertyOrder({
  CreateBundledDecisionManagerCaseRequestPaymentInformation.JSON_PROPERTY_CARD,
  CreateBundledDecisionManagerCaseRequestPaymentInformation.JSON_PROPERTY_TOKENIZED_CARD,
  CreateBundledDecisionManagerCaseRequestPaymentInformation.JSON_PROPERTY_CUSTOMER,
  CreateBundledDecisionManagerCaseRequestPaymentInformation.JSON_PROPERTY_BANK,
  CreateBundledDecisionManagerCaseRequestPaymentInformation.JSON_PROPERTY_METHOD
})
@JsonTypeName("createBundledDecisionManagerCase_request_paymentInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateBundledDecisionManagerCaseRequestPaymentInformation {
  public static final String JSON_PROPERTY_CARD = "card";
  private CreateBundledDecisionManagerCaseRequestPaymentInformationCard card;

  public static final String JSON_PROPERTY_TOKENIZED_CARD = "tokenizedCard";
  private CreateBundledDecisionManagerCaseRequestPaymentInformationTokenizedCard tokenizedCard;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CreatePaymentRequestPaymentInformationCustomer customer;

  public static final String JSON_PROPERTY_BANK = "bank";
  private CreatePaymentRequestPaymentInformationBank bank;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;

  public CreateBundledDecisionManagerCaseRequestPaymentInformation() {
  }

  public CreateBundledDecisionManagerCaseRequestPaymentInformation card(CreateBundledDecisionManagerCaseRequestPaymentInformationCard card) {
    
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateBundledDecisionManagerCaseRequestPaymentInformationCard getCard() {
    return card;
  }


  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCard(CreateBundledDecisionManagerCaseRequestPaymentInformationCard card) {
    this.card = card;
  }

  public CreateBundledDecisionManagerCaseRequestPaymentInformation tokenizedCard(CreateBundledDecisionManagerCaseRequestPaymentInformationTokenizedCard tokenizedCard) {
    
    this.tokenizedCard = tokenizedCard;
    return this;
  }

  /**
   * Get tokenizedCard
   * @return tokenizedCard
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateBundledDecisionManagerCaseRequestPaymentInformationTokenizedCard getTokenizedCard() {
    return tokenizedCard;
  }


  @JsonProperty(JSON_PROPERTY_TOKENIZED_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenizedCard(CreateBundledDecisionManagerCaseRequestPaymentInformationTokenizedCard tokenizedCard) {
    this.tokenizedCard = tokenizedCard;
  }

  public CreateBundledDecisionManagerCaseRequestPaymentInformation customer(CreatePaymentRequestPaymentInformationCustomer customer) {
    
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationCustomer getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(CreatePaymentRequestPaymentInformationCustomer customer) {
    this.customer = customer;
  }

  public CreateBundledDecisionManagerCaseRequestPaymentInformation bank(CreatePaymentRequestPaymentInformationBank bank) {
    
    this.bank = bank;
    return this;
  }

  /**
   * Get bank
   * @return bank
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestPaymentInformationBank getBank() {
    return bank;
  }


  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBank(CreatePaymentRequestPaymentInformationBank bank) {
    this.bank = bank;
  }

  public CreateBundledDecisionManagerCaseRequestPaymentInformation method(String method) {
    
    this.method = method;
    return this;
  }

  /**
   * Method of payment used for the order. This field can contain one of the following values:   - &#x60;consumer&#x60; (default): Customer credit card   - &#x60;corporate&#x60;: Corporate credit card   - &#x60;debit&#x60;: Debit card, such as a Maestro (UK Domestic) card   - &#x60;cod&#x60;: Collect on delivery   - &#x60;check&#x60;: Electronic check   - &#x60;p2p&#x60;: Person-to-person payment   - &#x60;private1&#x60;: Private label credit card   - &#x60;other&#x60;: Other payment method 
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(String method) {
    this.method = method;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBundledDecisionManagerCaseRequestPaymentInformation createBundledDecisionManagerCaseRequestPaymentInformation = (CreateBundledDecisionManagerCaseRequestPaymentInformation) o;
    return Objects.equals(this.card, createBundledDecisionManagerCaseRequestPaymentInformation.card) &&
        Objects.equals(this.tokenizedCard, createBundledDecisionManagerCaseRequestPaymentInformation.tokenizedCard) &&
        Objects.equals(this.customer, createBundledDecisionManagerCaseRequestPaymentInformation.customer) &&
        Objects.equals(this.bank, createBundledDecisionManagerCaseRequestPaymentInformation.bank) &&
        Objects.equals(this.method, createBundledDecisionManagerCaseRequestPaymentInformation.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, tokenizedCard, customer, bank, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBundledDecisionManagerCaseRequestPaymentInformation {\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    tokenizedCard: ").append(toIndentedString(tokenizedCard)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

