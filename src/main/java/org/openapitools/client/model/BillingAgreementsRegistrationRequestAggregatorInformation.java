/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestAggregatorInformationSubMerchant;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingAgreementsRegistrationRequestAggregatorInformation
 */
@JsonPropertyOrder({
  BillingAgreementsRegistrationRequestAggregatorInformation.JSON_PROPERTY_NAME,
  BillingAgreementsRegistrationRequestAggregatorInformation.JSON_PROPERTY_SUB_MERCHANT
})
@JsonTypeName("billingAgreementsRegistration_request_aggregatorInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class BillingAgreementsRegistrationRequestAggregatorInformation {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SUB_MERCHANT = "subMerchant";
  private CreatePaymentRequestAggregatorInformationSubMerchant subMerchant;

  public BillingAgreementsRegistrationRequestAggregatorInformation() {
  }

  public BillingAgreementsRegistrationRequestAggregatorInformation name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Your payment aggregator business name.  **American Express Direct**\\ The maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\  #### CyberSource through VisaNet With American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.  **FDC Compass**\\ This value must consist of uppercase characters. 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public BillingAgreementsRegistrationRequestAggregatorInformation subMerchant(CreatePaymentRequestAggregatorInformationSubMerchant subMerchant) {
    
    this.subMerchant = subMerchant;
    return this;
  }

  /**
   * Get subMerchant
   * @return subMerchant
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestAggregatorInformationSubMerchant getSubMerchant() {
    return subMerchant;
  }


  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubMerchant(CreatePaymentRequestAggregatorInformationSubMerchant subMerchant) {
    this.subMerchant = subMerchant;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingAgreementsRegistrationRequestAggregatorInformation billingAgreementsRegistrationRequestAggregatorInformation = (BillingAgreementsRegistrationRequestAggregatorInformation) o;
    return Objects.equals(this.name, billingAgreementsRegistrationRequestAggregatorInformation.name) &&
        Objects.equals(this.subMerchant, billingAgreementsRegistrationRequestAggregatorInformation.subMerchant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, subMerchant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingAgreementsRegistrationRequestAggregatorInformation {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subMerchant: ").append(toIndentedString(subMerchant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

