/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefundPaymentRequestPaymentInformationBankAccount
 */
@JsonPropertyOrder({
  RefundPaymentRequestPaymentInformationBankAccount.JSON_PROPERTY_TYPE,
  RefundPaymentRequestPaymentInformationBankAccount.JSON_PROPERTY_NUMBER,
  RefundPaymentRequestPaymentInformationBankAccount.JSON_PROPERTY_ENCODER_ID,
  RefundPaymentRequestPaymentInformationBankAccount.JSON_PROPERTY_CHECK_NUMBER,
  RefundPaymentRequestPaymentInformationBankAccount.JSON_PROPERTY_CHECK_IMAGE_REFERENCE_NUMBER
})
@JsonTypeName("refundPayment_request_paymentInformation_bank_account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class RefundPaymentRequestPaymentInformationBankAccount {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_ENCODER_ID = "encoderId";
  private String encoderId;

  public static final String JSON_PROPERTY_CHECK_NUMBER = "checkNumber";
  private String checkNumber;

  public static final String JSON_PROPERTY_CHECK_IMAGE_REFERENCE_NUMBER = "checkImageReferenceNumber";
  private String checkImageReferenceNumber;

  public RefundPaymentRequestPaymentInformationBankAccount() {
  }

  public RefundPaymentRequestPaymentInformationBankAccount type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Account type.  Possible values:  - **C**: Checking.  - **G**: General ledger. This value is supported only on Wells Fargo ACH.  - **S**: Savings (U.S. dollars only).  - **X**: Corporate checking (U.S. dollars only). 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public RefundPaymentRequestPaymentInformationBankAccount number(String number) {
    
    this.number = number;
    return this;
  }

  /**
   * Account number.  When processing encoded account numbers, use this field for the encoded account number. 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }

  public RefundPaymentRequestPaymentInformationBankAccount encoderId(String encoderId) {
    
    this.encoderId = encoderId;
    return this;
  }

  /**
   * Identifier for the bank that provided the customer&#39;s encoded account number.  To obtain the bank identifier, contact your processor. 
   * @return encoderId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCODER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncoderId() {
    return encoderId;
  }


  @JsonProperty(JSON_PROPERTY_ENCODER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncoderId(String encoderId) {
    this.encoderId = encoderId;
  }

  public RefundPaymentRequestPaymentInformationBankAccount checkNumber(String checkNumber) {
    
    this.checkNumber = checkNumber;
    return this;
  }

  /**
   * Check number.  Chase Paymentech Solutions - Optional. CyberSource ACH Service - Not used. RBS WorldPay Atlanta - Optional on debits. Required on credits. TeleCheck - Strongly recommended on debit requests. Optional on credits. 
   * @return checkNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckNumber() {
    return checkNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public RefundPaymentRequestPaymentInformationBankAccount checkImageReferenceNumber(String checkImageReferenceNumber) {
    
    this.checkImageReferenceNumber = checkImageReferenceNumber;
    return this;
  }

  /**
   * Image reference number associated with the check. You cannot include any special characters. 
   * @return checkImageReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_IMAGE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckImageReferenceNumber() {
    return checkImageReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_IMAGE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckImageReferenceNumber(String checkImageReferenceNumber) {
    this.checkImageReferenceNumber = checkImageReferenceNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefundPaymentRequestPaymentInformationBankAccount refundPaymentRequestPaymentInformationBankAccount = (RefundPaymentRequestPaymentInformationBankAccount) o;
    return Objects.equals(this.type, refundPaymentRequestPaymentInformationBankAccount.type) &&
        Objects.equals(this.number, refundPaymentRequestPaymentInformationBankAccount.number) &&
        Objects.equals(this.encoderId, refundPaymentRequestPaymentInformationBankAccount.encoderId) &&
        Objects.equals(this.checkNumber, refundPaymentRequestPaymentInformationBankAccount.checkNumber) &&
        Objects.equals(this.checkImageReferenceNumber, refundPaymentRequestPaymentInformationBankAccount.checkImageReferenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, number, encoderId, checkNumber, checkImageReferenceNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundPaymentRequestPaymentInformationBankAccount {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    encoderId: ").append(toIndentedString(encoderId)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    checkImageReferenceNumber: ").append(toIndentedString(checkImageReferenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

