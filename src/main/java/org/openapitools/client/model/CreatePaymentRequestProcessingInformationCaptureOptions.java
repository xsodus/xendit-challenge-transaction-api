/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestProcessingInformationCaptureOptions
 */
@JsonPropertyOrder({
  CreatePaymentRequestProcessingInformationCaptureOptions.JSON_PROPERTY_CAPTURE_SEQUENCE_NUMBER,
  CreatePaymentRequestProcessingInformationCaptureOptions.JSON_PROPERTY_TOTAL_CAPTURE_COUNT,
  CreatePaymentRequestProcessingInformationCaptureOptions.JSON_PROPERTY_DATE_TO_CAPTURE,
  CreatePaymentRequestProcessingInformationCaptureOptions.JSON_PROPERTY_IS_FINAL
})
@JsonTypeName("createPayment_request_processingInformation_captureOptions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestProcessingInformationCaptureOptions {
  public static final String JSON_PROPERTY_CAPTURE_SEQUENCE_NUMBER = "captureSequenceNumber";
  private Integer captureSequenceNumber;

  public static final String JSON_PROPERTY_TOTAL_CAPTURE_COUNT = "totalCaptureCount";
  private Integer totalCaptureCount;

  public static final String JSON_PROPERTY_DATE_TO_CAPTURE = "dateToCapture";
  private String dateToCapture;

  public static final String JSON_PROPERTY_IS_FINAL = "isFinal";
  private String isFinal;

  public CreatePaymentRequestProcessingInformationCaptureOptions() {
  }

  public CreatePaymentRequestProcessingInformationCaptureOptions captureSequenceNumber(Integer captureSequenceNumber) {
    
    this.captureSequenceNumber = captureSequenceNumber;
    return this;
  }

  /**
   * Capture number when requesting multiple partial captures for one authorization. Used along with &#x60;totalCaptureCount&#x60; to track which capture is being processed.  For example, the second of five captures would be passed to CyberSource as:   - &#x60;captureSequenceNumber_ &#x3D; 2&#x60;, and   - &#x60;totalCaptureCount &#x3D; 5&#x60; 
   * minimum: 1
   * maximum: 99
   * @return captureSequenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURE_SEQUENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCaptureSequenceNumber() {
    return captureSequenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_SEQUENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptureSequenceNumber(Integer captureSequenceNumber) {
    this.captureSequenceNumber = captureSequenceNumber;
  }

  public CreatePaymentRequestProcessingInformationCaptureOptions totalCaptureCount(Integer totalCaptureCount) {
    
    this.totalCaptureCount = totalCaptureCount;
    return this;
  }

  /**
   * Total number of captures when requesting multiple partial captures for one payment. Used along with &#x60;captureSequenceNumber&#x60; field to track which capture is being processed.  For example, the second of five captures would be passed to CyberSource as:   - &#x60;captureSequenceNumber &#x3D; 2&#x60;, and   - &#x60;totalCaptureCount &#x3D; 5&#x60; 
   * minimum: 1
   * maximum: 99
   * @return totalCaptureCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_CAPTURE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCaptureCount() {
    return totalCaptureCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CAPTURE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCaptureCount(Integer totalCaptureCount) {
    this.totalCaptureCount = totalCaptureCount;
  }

  public CreatePaymentRequestProcessingInformationCaptureOptions dateToCapture(String dateToCapture) {
    
    this.dateToCapture = dateToCapture;
    return this;
  }

  /**
   * Date on which you want the capture to occur. This field is supported only for CyberSource through VisaNet. Format: &#x60;MMDD&#x60;  #### Used by **Authorization** Optional field. 
   * @return dateToCapture
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_TO_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateToCapture() {
    return dateToCapture;
  }


  @JsonProperty(JSON_PROPERTY_DATE_TO_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateToCapture(String dateToCapture) {
    this.dateToCapture = dateToCapture;
  }

  public CreatePaymentRequestProcessingInformationCaptureOptions isFinal(String isFinal) {
    
    this.isFinal = isFinal;
    return this;
  }

  /**
   * Indicates whether to release the authorization hold on the remaining funds.   Possible Values: - &#x60;true&#x60; - &#x60;false&#x60; 
   * @return isFinal
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsFinal() {
    return isFinal;
  }


  @JsonProperty(JSON_PROPERTY_IS_FINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFinal(String isFinal) {
    this.isFinal = isFinal;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestProcessingInformationCaptureOptions createPaymentRequestProcessingInformationCaptureOptions = (CreatePaymentRequestProcessingInformationCaptureOptions) o;
    return Objects.equals(this.captureSequenceNumber, createPaymentRequestProcessingInformationCaptureOptions.captureSequenceNumber) &&
        Objects.equals(this.totalCaptureCount, createPaymentRequestProcessingInformationCaptureOptions.totalCaptureCount) &&
        Objects.equals(this.dateToCapture, createPaymentRequestProcessingInformationCaptureOptions.dateToCapture) &&
        Objects.equals(this.isFinal, createPaymentRequestProcessingInformationCaptureOptions.isFinal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(captureSequenceNumber, totalCaptureCount, dateToCapture, isFinal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestProcessingInformationCaptureOptions {\n");
    sb.append("    captureSequenceNumber: ").append(toIndentedString(captureSequenceNumber)).append("\n");
    sb.append("    totalCaptureCount: ").append(toIndentedString(totalCaptureCount)).append("\n");
    sb.append("    dateToCapture: ").append(toIndentedString(dateToCapture)).append("\n");
    sb.append("    isFinal: ").append(toIndentedString(isFinal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

