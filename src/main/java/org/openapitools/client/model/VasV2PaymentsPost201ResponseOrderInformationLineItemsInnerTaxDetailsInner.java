/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner
 */
@JsonPropertyOrder({
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner.JSON_PROPERTY_TYPE,
  VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner.JSON_PROPERTY_AMOUNT
})
@JsonTypeName("vasV2PaymentsPost201Response_orderInformation_lineItems_inner_taxDetails_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner() {
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Allowed tax types: - city - county - state - national - special 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner amount(String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Amount corresponding to different types of taxes applied. 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner = (VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner) o;
    return Objects.equals(this.type, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner.type) &&
        Objects.equals(this.amount, vasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VasV2PaymentsPost201ResponseOrderInformationLineItemsInnerTaxDetailsInner {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

