/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SAConfigNotificationsMerchantNotifications
 */
@JsonPropertyOrder({
  SAConfigNotificationsMerchantNotifications.JSON_PROPERTY_BACKOFFICE_POST_ENABLED,
  SAConfigNotificationsMerchantNotifications.JSON_PROPERTY_BACKOFFICE_EMAIL_ADDRESS,
  SAConfigNotificationsMerchantNotifications.JSON_PROPERTY_BACKOFFICE_EMAIL_ENABLED,
  SAConfigNotificationsMerchantNotifications.JSON_PROPERTY_BACKOFFICE_POST_URL,
  SAConfigNotificationsMerchantNotifications.JSON_PROPERTY_CARD_NUMBER_FORMAT
})
@JsonTypeName("SAConfig_notifications_merchantNotifications")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class SAConfigNotificationsMerchantNotifications {
  public static final String JSON_PROPERTY_BACKOFFICE_POST_ENABLED = "backofficePostEnabled";
  private Boolean backofficePostEnabled;

  public static final String JSON_PROPERTY_BACKOFFICE_EMAIL_ADDRESS = "backofficeEmailAddress";
  private String backofficeEmailAddress;

  public static final String JSON_PROPERTY_BACKOFFICE_EMAIL_ENABLED = "backofficeEmailEnabled";
  private Boolean backofficeEmailEnabled;

  public static final String JSON_PROPERTY_BACKOFFICE_POST_URL = "backofficePostUrl";
  private String backofficePostUrl;

  public static final String JSON_PROPERTY_CARD_NUMBER_FORMAT = "cardNumberFormat";
  private String cardNumberFormat;

  public SAConfigNotificationsMerchantNotifications() {
  }

  public SAConfigNotificationsMerchantNotifications backofficePostEnabled(Boolean backofficePostEnabled) {
    
    this.backofficePostEnabled = backofficePostEnabled;
    return this;
  }

  /**
   * Enables Webhook transaction confirmation messages sent to URL defined in backofficePostUrl. Usually enabled by web developers integrating to Secure Acceptance.
   * @return backofficePostEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKOFFICE_POST_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBackofficePostEnabled() {
    return backofficePostEnabled;
  }


  @JsonProperty(JSON_PROPERTY_BACKOFFICE_POST_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackofficePostEnabled(Boolean backofficePostEnabled) {
    this.backofficePostEnabled = backofficePostEnabled;
  }

  public SAConfigNotificationsMerchantNotifications backofficeEmailAddress(String backofficeEmailAddress) {
    
    this.backofficeEmailAddress = backofficeEmailAddress;
    return this;
  }

  /**
   * Email address to receive transaction confirmation messages.
   * @return backofficeEmailAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKOFFICE_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBackofficeEmailAddress() {
    return backofficeEmailAddress;
  }


  @JsonProperty(JSON_PROPERTY_BACKOFFICE_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackofficeEmailAddress(String backofficeEmailAddress) {
    this.backofficeEmailAddress = backofficeEmailAddress;
  }

  public SAConfigNotificationsMerchantNotifications backofficeEmailEnabled(Boolean backofficeEmailEnabled) {
    
    this.backofficeEmailEnabled = backofficeEmailEnabled;
    return this;
  }

  /**
   * Enables email transaction confirmation messages, sent to the address specified in backofficeEmailAddress.
   * @return backofficeEmailEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKOFFICE_EMAIL_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBackofficeEmailEnabled() {
    return backofficeEmailEnabled;
  }


  @JsonProperty(JSON_PROPERTY_BACKOFFICE_EMAIL_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackofficeEmailEnabled(Boolean backofficeEmailEnabled) {
    this.backofficeEmailEnabled = backofficeEmailEnabled;
  }

  public SAConfigNotificationsMerchantNotifications backofficePostUrl(String backofficePostUrl) {
    
    this.backofficePostUrl = backofficePostUrl;
    return this;
  }

  /**
   * Webhook URL to which transaction confirmation is sent. Usually completed by the web developers integrating to Secure Acceptance.
   * @return backofficePostUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKOFFICE_POST_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBackofficePostUrl() {
    return backofficePostUrl;
  }


  @JsonProperty(JSON_PROPERTY_BACKOFFICE_POST_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackofficePostUrl(String backofficePostUrl) {
    this.backofficePostUrl = backofficePostUrl;
  }

  public SAConfigNotificationsMerchantNotifications cardNumberFormat(String cardNumberFormat) {
    
    this.cardNumberFormat = cardNumberFormat;
    return this;
  }

  /**
   * Format in which the card number should be masked in the notifications.   Valid values: &#x60;1&#x60; - Display first 6 digits only (e.g. \&quot;444433**********\&quot;)  &#x60;2&#x60; - Display last four digits only (e.g. \&quot;************1111\&quot;)  &#x60;3&#x60; - Display First six and last four digits (e.g. \&quot;444433******1111\&quot;) 
   * @return cardNumberFormat
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_NUMBER_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardNumberFormat() {
    return cardNumberFormat;
  }


  @JsonProperty(JSON_PROPERTY_CARD_NUMBER_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardNumberFormat(String cardNumberFormat) {
    this.cardNumberFormat = cardNumberFormat;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SAConfigNotificationsMerchantNotifications saConfigNotificationsMerchantNotifications = (SAConfigNotificationsMerchantNotifications) o;
    return Objects.equals(this.backofficePostEnabled, saConfigNotificationsMerchantNotifications.backofficePostEnabled) &&
        Objects.equals(this.backofficeEmailAddress, saConfigNotificationsMerchantNotifications.backofficeEmailAddress) &&
        Objects.equals(this.backofficeEmailEnabled, saConfigNotificationsMerchantNotifications.backofficeEmailEnabled) &&
        Objects.equals(this.backofficePostUrl, saConfigNotificationsMerchantNotifications.backofficePostUrl) &&
        Objects.equals(this.cardNumberFormat, saConfigNotificationsMerchantNotifications.cardNumberFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backofficePostEnabled, backofficeEmailAddress, backofficeEmailEnabled, backofficePostUrl, cardNumberFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SAConfigNotificationsMerchantNotifications {\n");
    sb.append("    backofficePostEnabled: ").append(toIndentedString(backofficePostEnabled)).append("\n");
    sb.append("    backofficeEmailAddress: ").append(toIndentedString(backofficeEmailAddress)).append("\n");
    sb.append("    backofficeEmailEnabled: ").append(toIndentedString(backofficeEmailEnabled)).append("\n");
    sb.append("    backofficePostUrl: ").append(toIndentedString(backofficePostUrl)).append("\n");
    sb.append("    cardNumberFormat: ").append(toIndentedString(cardNumberFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

