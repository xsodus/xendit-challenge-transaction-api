/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SAConfigService
 */
@JsonPropertyOrder({
  SAConfigService.JSON_PROPERTY_DECISION_MANAGER_VERBOSE_ENABLED,
  SAConfigService.JSON_PROPERTY_DECLINED_RETRY_LIMIT,
  SAConfigService.JSON_PROPERTY_DECISION_MANAGER_ENABLED,
  SAConfigService.JSON_PROPERTY_TOKENIZATION_ENABLED,
  SAConfigService.JSON_PROPERTY_REVERSE_AUTH_ON_ADDRESS_VERIFICATION_SYSTEM_FAILURE,
  SAConfigService.JSON_PROPERTY_DEVICE_FINGERPRINT_ENABLED,
  SAConfigService.JSON_PROPERTY_REVERSE_AUTH_ON_CARD_VERIFICATION_NUMBER_FAILURE
})
@JsonTypeName("SAConfig_service")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class SAConfigService {
  public static final String JSON_PROPERTY_DECISION_MANAGER_VERBOSE_ENABLED = "decisionManagerVerboseEnabled";
  private Boolean decisionManagerVerboseEnabled;

  public static final String JSON_PROPERTY_DECLINED_RETRY_LIMIT = "declinedRetryLimit";
  private BigDecimal declinedRetryLimit;

  public static final String JSON_PROPERTY_DECISION_MANAGER_ENABLED = "decisionManagerEnabled";
  private Boolean decisionManagerEnabled;

  public static final String JSON_PROPERTY_TOKENIZATION_ENABLED = "tokenizationEnabled";
  private Boolean tokenizationEnabled;

  public static final String JSON_PROPERTY_REVERSE_AUTH_ON_ADDRESS_VERIFICATION_SYSTEM_FAILURE = "reverseAuthOnAddressVerificationSystemFailure";
  private Boolean reverseAuthOnAddressVerificationSystemFailure;

  public static final String JSON_PROPERTY_DEVICE_FINGERPRINT_ENABLED = "deviceFingerprintEnabled";
  private Boolean deviceFingerprintEnabled;

  public static final String JSON_PROPERTY_REVERSE_AUTH_ON_CARD_VERIFICATION_NUMBER_FAILURE = "reverseAuthOnCardVerificationNumberFailure";
  private Boolean reverseAuthOnCardVerificationNumberFailure;

  public SAConfigService() {
  }

  public SAConfigService decisionManagerVerboseEnabled(Boolean decisionManagerVerboseEnabled) {
    
    this.decisionManagerVerboseEnabled = decisionManagerVerboseEnabled;
    return this;
  }

  /**
   * Toggles whether verbose Decision Manager results should be present in the Secure Acceptance response. As this response passes through the browser, it is recommended to set this to \&quot;false\&quot; outside of debugging.
   * @return decisionManagerVerboseEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_MANAGER_VERBOSE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDecisionManagerVerboseEnabled() {
    return decisionManagerVerboseEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_MANAGER_VERBOSE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionManagerVerboseEnabled(Boolean decisionManagerVerboseEnabled) {
    this.decisionManagerVerboseEnabled = decisionManagerVerboseEnabled;
  }

  public SAConfigService declinedRetryLimit(BigDecimal declinedRetryLimit) {
    
    this.declinedRetryLimit = declinedRetryLimit;
    return this;
  }

  /**
   * Defines the number of retries a payer is presented with on payment declines on Hosted Checkout. Valid values are between 0 and 5.
   * @return declinedRetryLimit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLINED_RETRY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDeclinedRetryLimit() {
    return declinedRetryLimit;
  }


  @JsonProperty(JSON_PROPERTY_DECLINED_RETRY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclinedRetryLimit(BigDecimal declinedRetryLimit) {
    this.declinedRetryLimit = declinedRetryLimit;
  }

  public SAConfigService decisionManagerEnabled(Boolean decisionManagerEnabled) {
    
    this.decisionManagerEnabled = decisionManagerEnabled;
    return this;
  }

  /**
   * Toggles whether Decision Manager is enabled or not for Secure Acceptance transactions. Requires the transacting MID to be enabled and configured for Decicion Manager.
   * @return decisionManagerEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_MANAGER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDecisionManagerEnabled() {
    return decisionManagerEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_MANAGER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionManagerEnabled(Boolean decisionManagerEnabled) {
    this.decisionManagerEnabled = decisionManagerEnabled;
  }

  public SAConfigService tokenizationEnabled(Boolean tokenizationEnabled) {
    
    this.tokenizationEnabled = tokenizationEnabled;
    return this;
  }

  /**
   * Toggles whether Tokenization is enabled or not for Secure Acceptance transactions. Requires the transacting MID to be enabled and configured for Tokenization.
   * @return tokenizationEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKENIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTokenizationEnabled() {
    return tokenizationEnabled;
  }


  @JsonProperty(JSON_PROPERTY_TOKENIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenizationEnabled(Boolean tokenizationEnabled) {
    this.tokenizationEnabled = tokenizationEnabled;
  }

  public SAConfigService reverseAuthOnAddressVerificationSystemFailure(Boolean reverseAuthOnAddressVerificationSystemFailure) {
    
    this.reverseAuthOnAddressVerificationSystemFailure = reverseAuthOnAddressVerificationSystemFailure;
    return this;
  }

  /**
   * Toggles whether or not an approved Authorization that fails AVS should be automatically reversed.
   * @return reverseAuthOnAddressVerificationSystemFailure
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVERSE_AUTH_ON_ADDRESS_VERIFICATION_SYSTEM_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReverseAuthOnAddressVerificationSystemFailure() {
    return reverseAuthOnAddressVerificationSystemFailure;
  }


  @JsonProperty(JSON_PROPERTY_REVERSE_AUTH_ON_ADDRESS_VERIFICATION_SYSTEM_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReverseAuthOnAddressVerificationSystemFailure(Boolean reverseAuthOnAddressVerificationSystemFailure) {
    this.reverseAuthOnAddressVerificationSystemFailure = reverseAuthOnAddressVerificationSystemFailure;
  }

  public SAConfigService deviceFingerprintEnabled(Boolean deviceFingerprintEnabled) {
    
    this.deviceFingerprintEnabled = deviceFingerprintEnabled;
    return this;
  }

  /**
   * Toggles whether or not fraud Device Fingerprinting is enabled on the Hosted Checkout. This simplifies enablement for Decision Manager.
   * @return deviceFingerprintEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_FINGERPRINT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeviceFingerprintEnabled() {
    return deviceFingerprintEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_FINGERPRINT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceFingerprintEnabled(Boolean deviceFingerprintEnabled) {
    this.deviceFingerprintEnabled = deviceFingerprintEnabled;
  }

  public SAConfigService reverseAuthOnCardVerificationNumberFailure(Boolean reverseAuthOnCardVerificationNumberFailure) {
    
    this.reverseAuthOnCardVerificationNumberFailure = reverseAuthOnCardVerificationNumberFailure;
    return this;
  }

  /**
   * Toggles whether or not an approved Authorization that fails CVN check that should be automatically reversed.
   * @return reverseAuthOnCardVerificationNumberFailure
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVERSE_AUTH_ON_CARD_VERIFICATION_NUMBER_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReverseAuthOnCardVerificationNumberFailure() {
    return reverseAuthOnCardVerificationNumberFailure;
  }


  @JsonProperty(JSON_PROPERTY_REVERSE_AUTH_ON_CARD_VERIFICATION_NUMBER_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReverseAuthOnCardVerificationNumberFailure(Boolean reverseAuthOnCardVerificationNumberFailure) {
    this.reverseAuthOnCardVerificationNumberFailure = reverseAuthOnCardVerificationNumberFailure;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SAConfigService saConfigService = (SAConfigService) o;
    return Objects.equals(this.decisionManagerVerboseEnabled, saConfigService.decisionManagerVerboseEnabled) &&
        Objects.equals(this.declinedRetryLimit, saConfigService.declinedRetryLimit) &&
        Objects.equals(this.decisionManagerEnabled, saConfigService.decisionManagerEnabled) &&
        Objects.equals(this.tokenizationEnabled, saConfigService.tokenizationEnabled) &&
        Objects.equals(this.reverseAuthOnAddressVerificationSystemFailure, saConfigService.reverseAuthOnAddressVerificationSystemFailure) &&
        Objects.equals(this.deviceFingerprintEnabled, saConfigService.deviceFingerprintEnabled) &&
        Objects.equals(this.reverseAuthOnCardVerificationNumberFailure, saConfigService.reverseAuthOnCardVerificationNumberFailure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decisionManagerVerboseEnabled, declinedRetryLimit, decisionManagerEnabled, tokenizationEnabled, reverseAuthOnAddressVerificationSystemFailure, deviceFingerprintEnabled, reverseAuthOnCardVerificationNumberFailure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SAConfigService {\n");
    sb.append("    decisionManagerVerboseEnabled: ").append(toIndentedString(decisionManagerVerboseEnabled)).append("\n");
    sb.append("    declinedRetryLimit: ").append(toIndentedString(declinedRetryLimit)).append("\n");
    sb.append("    decisionManagerEnabled: ").append(toIndentedString(decisionManagerEnabled)).append("\n");
    sb.append("    tokenizationEnabled: ").append(toIndentedString(tokenizationEnabled)).append("\n");
    sb.append("    reverseAuthOnAddressVerificationSystemFailure: ").append(toIndentedString(reverseAuthOnAddressVerificationSystemFailure)).append("\n");
    sb.append("    deviceFingerprintEnabled: ").append(toIndentedString(deviceFingerprintEnabled)).append("\n");
    sb.append("    reverseAuthOnCardVerificationNumberFailure: ").append(toIndentedString(reverseAuthOnCardVerificationNumberFailure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

