/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayerAuthSetupRequestProcessingInformation
 */
@JsonPropertyOrder({
  PayerAuthSetupRequestProcessingInformation.JSON_PROPERTY_PAYMENT_SOLUTION,
  PayerAuthSetupRequestProcessingInformation.JSON_PROPERTY_VISA_CHECKOUT_ID
})
@JsonTypeName("payerAuthSetup_request_processingInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PayerAuthSetupRequestProcessingInformation {
  public static final String JSON_PROPERTY_PAYMENT_SOLUTION = "paymentSolution";
  private String paymentSolution;

  public static final String JSON_PROPERTY_VISA_CHECKOUT_ID = "visaCheckoutId";
  private String visaCheckoutId;

  public PayerAuthSetupRequestProcessingInformation() {
  }

  public PayerAuthSetupRequestProcessingInformation paymentSolution(String paymentSolution) {
    
    this.paymentSolution = paymentSolution;
    return this;
  }

  /**
   * Type of digital payment solution for the transaction. Possible Values:   - &#x60;visacheckout&#x60;: Visa Checkout. This value is required for Visa Checkout transactions. For details, see &#x60;payment_solution&#x60; field description in [Visa Checkout Using the REST API.](https://developer.cybersource.com/content/dam/docs/cybs/en-us/apifields/reference/all/rest/api-fields.pdf)  - &#x60;001&#x60;: Apple Pay.  - &#x60;004&#x60;: Cybersource In-App Solution.  - &#x60;005&#x60;: Masterpass. This value is required for Masterpass transactions on OmniPay Direct.   - &#x60;006&#x60;: Android Pay.  - &#x60;007&#x60;: Chase Pay.  - &#x60;008&#x60;: Samsung Pay.  - &#x60;012&#x60;: Google Pay.  - &#x60;013&#x60;: Cybersource P2PE Decryption  - &#x60;014&#x60;: Mastercard credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - &#x60;015&#x60;: Visa credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - &#x60;027&#x60;: Click to Pay. 
   * @return paymentSolution
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_SOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentSolution() {
    return paymentSolution;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_SOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentSolution(String paymentSolution) {
    this.paymentSolution = paymentSolution;
  }

  public PayerAuthSetupRequestProcessingInformation visaCheckoutId(String visaCheckoutId) {
    
    this.visaCheckoutId = visaCheckoutId;
    return this;
  }

  /**
   * Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in the Visa Checkout **callID** field. 
   * @return visaCheckoutId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISA_CHECKOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisaCheckoutId() {
    return visaCheckoutId;
  }


  @JsonProperty(JSON_PROPERTY_VISA_CHECKOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisaCheckoutId(String visaCheckoutId) {
    this.visaCheckoutId = visaCheckoutId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayerAuthSetupRequestProcessingInformation payerAuthSetupRequestProcessingInformation = (PayerAuthSetupRequestProcessingInformation) o;
    return Objects.equals(this.paymentSolution, payerAuthSetupRequestProcessingInformation.paymentSolution) &&
        Objects.equals(this.visaCheckoutId, payerAuthSetupRequestProcessingInformation.visaCheckoutId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentSolution, visaCheckoutId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayerAuthSetupRequestProcessingInformation {\n");
    sb.append("    paymentSolution: ").append(toIndentedString(paymentSolution)).append("\n");
    sb.append("    visaCheckoutId: ").append(toIndentedString(visaCheckoutId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

