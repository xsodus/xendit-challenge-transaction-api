/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.OctCreatePaymentRequestOrderInformationAmountDetails;
import org.openapitools.client.model.OctCreatePaymentRequestOrderInformationBillTo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OctCreatePaymentRequestOrderInformation
 */
@JsonPropertyOrder({
  OctCreatePaymentRequestOrderInformation.JSON_PROPERTY_AMOUNT_DETAILS,
  OctCreatePaymentRequestOrderInformation.JSON_PROPERTY_BILL_TO,
  OctCreatePaymentRequestOrderInformation.JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE
})
@JsonTypeName("octCreatePayment_request_orderInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class OctCreatePaymentRequestOrderInformation {
  public static final String JSON_PROPERTY_AMOUNT_DETAILS = "amountDetails";
  private OctCreatePaymentRequestOrderInformationAmountDetails amountDetails;

  public static final String JSON_PROPERTY_BILL_TO = "billTo";
  private OctCreatePaymentRequestOrderInformationBillTo billTo;

  public static final String JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE = "isCryptocurrencyPurchase";
  private String isCryptocurrencyPurchase;

  public OctCreatePaymentRequestOrderInformation() {
  }

  public OctCreatePaymentRequestOrderInformation amountDetails(OctCreatePaymentRequestOrderInformationAmountDetails amountDetails) {
    
    this.amountDetails = amountDetails;
    return this;
  }

  /**
   * Get amountDetails
   * @return amountDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OctCreatePaymentRequestOrderInformationAmountDetails getAmountDetails() {
    return amountDetails;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountDetails(OctCreatePaymentRequestOrderInformationAmountDetails amountDetails) {
    this.amountDetails = amountDetails;
  }

  public OctCreatePaymentRequestOrderInformation billTo(OctCreatePaymentRequestOrderInformationBillTo billTo) {
    
    this.billTo = billTo;
    return this;
  }

  /**
   * Get billTo
   * @return billTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OctCreatePaymentRequestOrderInformationBillTo getBillTo() {
    return billTo;
  }


  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillTo(OctCreatePaymentRequestOrderInformationBillTo billTo) {
    this.billTo = billTo;
  }

  public OctCreatePaymentRequestOrderInformation isCryptocurrencyPurchase(String isCryptocurrencyPurchase) {
    
    this.isCryptocurrencyPurchase = isCryptocurrencyPurchase;
    return this;
  }

  /**
   * #### Visa Platform Connect : This API will contain the Flag that specifies whether the payment is for the purchase of cryptocurrency. Additional values to add : This API will contain the Flag that specifies whether the payment is for the purchase of cryptocurrency. valid values are - Y/y, true - N/n, false 
   * @return isCryptocurrencyPurchase
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsCryptocurrencyPurchase() {
    return isCryptocurrencyPurchase;
  }


  @JsonProperty(JSON_PROPERTY_IS_CRYPTOCURRENCY_PURCHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCryptocurrencyPurchase(String isCryptocurrencyPurchase) {
    this.isCryptocurrencyPurchase = isCryptocurrencyPurchase;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OctCreatePaymentRequestOrderInformation octCreatePaymentRequestOrderInformation = (OctCreatePaymentRequestOrderInformation) o;
    return Objects.equals(this.amountDetails, octCreatePaymentRequestOrderInformation.amountDetails) &&
        Objects.equals(this.billTo, octCreatePaymentRequestOrderInformation.billTo) &&
        Objects.equals(this.isCryptocurrencyPurchase, octCreatePaymentRequestOrderInformation.isCryptocurrencyPurchase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountDetails, billTo, isCryptocurrencyPurchase);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OctCreatePaymentRequestOrderInformation {\n");
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("    billTo: ").append(toIndentedString(billTo)).append("\n");
    sb.append("    isCryptocurrencyPurchase: ").append(toIndentedString(isCryptocurrencyPurchase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

