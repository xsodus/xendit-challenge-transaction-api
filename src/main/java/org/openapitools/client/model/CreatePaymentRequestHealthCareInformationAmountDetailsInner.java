/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestHealthCareInformationAmountDetailsInner
 */
@JsonPropertyOrder({
  CreatePaymentRequestHealthCareInformationAmountDetailsInner.JSON_PROPERTY_AMOUNT_TYPE,
  CreatePaymentRequestHealthCareInformationAmountDetailsInner.JSON_PROPERTY_AMOUNT
})
@JsonTypeName("createPayment_request_healthCareInformation_amountDetails_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestHealthCareInformationAmountDetailsInner {
  public static final String JSON_PROPERTY_AMOUNT_TYPE = "amountType";
  private String amountType;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public CreatePaymentRequestHealthCareInformationAmountDetailsInner() {
  }

  public CreatePaymentRequestHealthCareInformationAmountDetailsInner amountType(String amountType) {
    
    this.amountType = amountType;
    return this;
  }

  /**
   * Total amount that has been spent on healthcare in a transaction. Valid Values for **Visa**: - &#x60;healthcare&#x60; - Total Amount Healthcare - &#x60;healthcare-transit&#x60; - Amount Transit - &#x60;vision&#x60; - Amount Vision/Optical - &#x60;prescription&#x60; - Amount Prescription/RX - &#x60;clinic&#x60; - Amount Clinic/Other Qualified Medical - &#x60;dental&#x60; - Amount Dental   &#x60;Note:&#x60; -  Prescription, Clinic and dental amounts must be preceded with the total healthcare amount and cannot occur individually.  Vision and Transit must be sent individually and cannot be combined with total healthcare amount or any other amounts. Total Healthcare amount can be sent individually.  Valid Values for **MasterCard**: - &#x60;prescription&#x60; - Amount Prescription/RX - &#x60;eligible-total&#x60; - Total Amount Healthcare   &#x60;Note:&#x60; -  Prescription must be preceded with the total healthcare amount and cannot occur individually. Total Healthcare amount can be sent individually. 
   * @return amountType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmountType() {
    return amountType;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountType(String amountType) {
    this.amountType = amountType;
  }

  public CreatePaymentRequestHealthCareInformationAmountDetailsInner amount(String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Total Amount that has been spent on the corresponding amountType. This is 13 byte field including sign. If the amount is positive, then it is a debit for the customer. If the amount is negative, then it is a credit for the customer. 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestHealthCareInformationAmountDetailsInner createPaymentRequestHealthCareInformationAmountDetailsInner = (CreatePaymentRequestHealthCareInformationAmountDetailsInner) o;
    return Objects.equals(this.amountType, createPaymentRequestHealthCareInformationAmountDetailsInner.amountType) &&
        Objects.equals(this.amount, createPaymentRequestHealthCareInformationAmountDetailsInner.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountType, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestHealthCareInformationAmountDetailsInner {\n");
    sb.append("    amountType: ").append(toIndentedString(amountType)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

