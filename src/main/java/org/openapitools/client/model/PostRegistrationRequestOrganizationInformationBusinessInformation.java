/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import org.openapitools.client.model.PostRegistrationRequestOrganizationInformationBusinessInformationAddress;
import org.openapitools.client.model.PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostRegistrationRequestOrganizationInformationBusinessInformation
 */
@JsonPropertyOrder({
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_NAME,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_DOING_BUSINESS_AS,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_DESCRIPTION,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_START_DATE,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_ADDRESS,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_TIME_ZONE,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_WEBSITE_URL,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_TYPE,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_TAX_ID,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_PHONE_NUMBER,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_BUSINESS_CONTACT,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_TECHNICAL_CONTACT,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_EMERGENCY_CONTACT,
  PostRegistrationRequestOrganizationInformationBusinessInformation.JSON_PROPERTY_MERCHANT_CATEGORY_CODE
})
@JsonTypeName("postRegistration_request_organizationInformation_businessInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostRegistrationRequestOrganizationInformationBusinessInformation {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DOING_BUSINESS_AS = "doingBusinessAs";
  private String doingBusinessAs;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private LocalDate startDate;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private PostRegistrationRequestOrganizationInformationBusinessInformationAddress address;

  /**
   * Merchant perferred time zone Possible Values: - &#39;Pacific/Pago_Pago&#39; - &#39;Pacific/Honolulu&#39; - &#39;America/Anchorage&#39; - &#39;America/Vancouver&#39; - &#39;America/Los_Angeles&#39; - &#39;America/Phoenix&#39; - &#39;America/Edmonton&#39; - &#39;America/Denver&#39; - &#39;America/Winnipeg&#39; - &#39;America/Mexico_City&#39; - &#39;America/Chicago&#39; - &#39;America/Bogota&#39; - &#39;America/Indianapolis&#39; - &#39;America/New_York&#39; - &#39;America/La_Paz&#39; - &#39;America/Halifax&#39; - &#39;America/St_Johns&#39; - &#39;America/Buenos_Aires&#39; - &#39;America/Godthab&#39; - &#39;America/Sao_Paulo&#39; - &#39;America/Noronha&#39; - &#39;Atlantic/Cape_Verde&#39; - &#39;GMT&#39; - &#39;Europe/Dublin&#39; - &#39;Europe/Lisbon&#39; - &#39;Europe/London&#39; - &#39;Africa/Tunis&#39; - &#39;Europe/Vienna&#39; - &#39;Europe/Brussels&#39; - &#39;Europe/Zurich&#39; - &#39;Europe/Prague&#39; - &#39;Europe/Berlin&#39; - &#39;Europe/Copenhagen&#39; - &#39;Europe/Madrid&#39; - &#39;Europe/Budapest&#39; - &#39;Europe/Rome&#39; - &#39;Africa/Tripoli&#39; - &#39;Europe/Monaco&#39; - &#39;Europe/Malta&#39; - &#39;Europe/Amsterdam&#39; - &#39;Europe/Oslo&#39; - &#39;Europe/Warsaw&#39; - &#39;Europe/Stockholm&#39; - &#39;Europe/Belgrade&#39; - &#39;Europe/Paris&#39; - &#39;Africa/Johannesburg&#39; - &#39;Europe/Minsk&#39; - &#39;Africa/Cairo&#39; - &#39;Europe/Helsinki&#39; - &#39;Europe/Athens&#39; - &#39;Asia/Jerusalem&#39; - &#39;Europe/Riga&#39; - &#39;Europe/Bucharest&#39; - &#39;Europe/Istanbul&#39; - &#39;Asia/Riyadh&#39; - &#39;Europe/Moscow&#39; - &#39;Asia/Dubai&#39; - &#39;Asia/Baku&#39; - &#39;Asia/Tbilisi&#39; - &#39;Asia/Calcutta&#39; - &#39;Asia/Katmandu&#39; - &#39;Asia/Dacca&#39; - &#39;Asia/Rangoon&#39; - &#39;Asia/Jakarta&#39; - &#39;Asia/Saigon&#39; - &#39;Asia/Bangkok&#39; - &#39;Australia/Perth&#39; - &#39;Asia/Hong_Kong&#39; - &#39;Asia/Macao&#39; - &#39;Asia/Kuala_Lumpur&#39; - &#39;Asia/Manila&#39; - &#39;Asia/Singapore&#39; - &#39;Asia/Taipei&#39; - &#39;Asia/Shanghai&#39; - &#39;Asia/Seoul&#39; - &#39;Asia/Tokyo&#39; - &#39;Asia/Yakutsk&#39; - &#39;Australia/Adelaide&#39; - &#39;Australia/Brisbane&#39; - &#39;Australia/Broken_Hill&#39; - &#39;Australia/Darwin&#39; - &#39;Australia/Eucla&#39; - &#39;Australia/Hobart&#39; - &#39;Australia/Lindeman&#39; - &#39;Australia/Sydney&#39; - &#39;Australia/Lord_Howe&#39; - &#39;Australia/Melbourne&#39; - &#39;Asia/Magadan&#39; - &#39;Pacific/Norfolk&#39; - &#39;Pacific/Auckland&#39; 
   */
  public enum TimeZoneEnum {
    PACIFIC_PAGO_PAGO("Pacific/Pago_Pago"),
    
    PACIFIC_HONOLULU("Pacific/Honolulu"),
    
    AMERICA_ANCHORAGE("America/Anchorage"),
    
    AMERICA_VANCOUVER("America/Vancouver"),
    
    AMERICA_LOS_ANGELES("America/Los_Angeles"),
    
    AMERICA_PHOENIX("America/Phoenix"),
    
    AMERICA_EDMONTON("America/Edmonton"),
    
    AMERICA_DENVER("America/Denver"),
    
    AMERICA_WINNIPEG("America/Winnipeg"),
    
    AMERICA_MEXICO_CITY("America/Mexico_City"),
    
    AMERICA_CHICAGO("America/Chicago"),
    
    AMERICA_BOGOTA("America/Bogota"),
    
    AMERICA_INDIANAPOLIS("America/Indianapolis"),
    
    AMERICA_NEW_YORK("America/New_York"),
    
    AMERICA_LA_PAZ("America/La_Paz"),
    
    AMERICA_HALIFAX("America/Halifax"),
    
    AMERICA_ST_JOHNS("America/St_Johns"),
    
    AMERICA_BUENOS_AIRES("America/Buenos_Aires"),
    
    AMERICA_GODTHAB("America/Godthab"),
    
    AMERICA_SAO_PAULO("America/Sao_Paulo"),
    
    AMERICA_NORONHA("America/Noronha"),
    
    ATLANTIC_CAPE_VERDE("Atlantic/Cape_Verde"),
    
    GMT("GMT"),
    
    EUROPE_DUBLIN("Europe/Dublin"),
    
    EUROPE_LISBON("Europe/Lisbon"),
    
    EUROPE_LONDON("Europe/London"),
    
    AFRICA_TUNIS("Africa/Tunis"),
    
    EUROPE_VIENNA("Europe/Vienna"),
    
    EUROPE_BRUSSELS("Europe/Brussels"),
    
    EUROPE_ZURICH("Europe/Zurich"),
    
    EUROPE_PRAGUE("Europe/Prague"),
    
    EUROPE_BERLIN("Europe/Berlin"),
    
    EUROPE_COPENHAGEN("Europe/Copenhagen"),
    
    EUROPE_MADRID("Europe/Madrid"),
    
    EUROPE_BUDAPEST("Europe/Budapest"),
    
    EUROPE_ROME("Europe/Rome"),
    
    AFRICA_TRIPOLI("Africa/Tripoli"),
    
    EUROPE_MONACO("Europe/Monaco"),
    
    EUROPE_MALTA("Europe/Malta"),
    
    EUROPE_AMSTERDAM("Europe/Amsterdam"),
    
    EUROPE_OSLO("Europe/Oslo"),
    
    EUROPE_WARSAW("Europe/Warsaw"),
    
    EUROPE_STOCKHOLM("Europe/Stockholm"),
    
    EUROPE_BELGRADE("Europe/Belgrade"),
    
    EUROPE_PARIS("Europe/Paris"),
    
    AFRICA_JOHANNESBURG("Africa/Johannesburg"),
    
    EUROPE_MINSK("Europe/Minsk"),
    
    AFRICA_CAIRO("Africa/Cairo"),
    
    EUROPE_HELSINKI("Europe/Helsinki"),
    
    EUROPE_ATHENS("Europe/Athens"),
    
    ASIA_JERUSALEM("Asia/Jerusalem"),
    
    EUROPE_RIGA("Europe/Riga"),
    
    EUROPE_BUCHAREST("Europe/Bucharest"),
    
    EUROPE_ISTANBUL("Europe/Istanbul"),
    
    ASIA_RIYADH("Asia/Riyadh"),
    
    EUROPE_MOSCOW("Europe/Moscow"),
    
    ASIA_DUBAI("Asia/Dubai"),
    
    ASIA_BAKU("Asia/Baku"),
    
    ASIA_TBILISI("Asia/Tbilisi"),
    
    ASIA_CALCUTTA("Asia/Calcutta"),
    
    ASIA_KATMANDU("Asia/Katmandu"),
    
    ASIA_DACCA("Asia/Dacca"),
    
    ASIA_RANGOON("Asia/Rangoon"),
    
    ASIA_JAKARTA("Asia/Jakarta"),
    
    ASIA_SAIGON("Asia/Saigon"),
    
    ASIA_BANGKOK("Asia/Bangkok"),
    
    AUSTRALIA_PERTH("Australia/Perth"),
    
    ASIA_HONG_KONG("Asia/Hong_Kong"),
    
    ASIA_MACAO("Asia/Macao"),
    
    ASIA_KUALA_LUMPUR("Asia/Kuala_Lumpur"),
    
    ASIA_MANILA("Asia/Manila"),
    
    ASIA_SINGAPORE("Asia/Singapore"),
    
    ASIA_TAIPEI("Asia/Taipei"),
    
    ASIA_SHANGHAI("Asia/Shanghai"),
    
    ASIA_SEOUL("Asia/Seoul"),
    
    ASIA_TOKYO("Asia/Tokyo"),
    
    ASIA_YAKUTSK("Asia/Yakutsk"),
    
    AUSTRALIA_ADELAIDE("Australia/Adelaide"),
    
    AUSTRALIA_BRISBANE("Australia/Brisbane"),
    
    AUSTRALIA_BROKEN_HILL("Australia/Broken_Hill"),
    
    AUSTRALIA_DARWIN("Australia/Darwin"),
    
    AUSTRALIA_EUCLA("Australia/Eucla"),
    
    AUSTRALIA_HOBART("Australia/Hobart"),
    
    AUSTRALIA_LINDEMAN("Australia/Lindeman"),
    
    AUSTRALIA_SYDNEY("Australia/Sydney"),
    
    AUSTRALIA_LORD_HOWE("Australia/Lord_Howe"),
    
    AUSTRALIA_MELBOURNE("Australia/Melbourne"),
    
    ASIA_MAGADAN("Asia/Magadan"),
    
    PACIFIC_NORFOLK("Pacific/Norfolk"),
    
    PACIFIC_AUCKLAND("Pacific/Auckland");

    private String value;

    TimeZoneEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeZoneEnum fromValue(String value) {
      for (TimeZoneEnum b : TimeZoneEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TIME_ZONE = "timeZone";
  private TimeZoneEnum timeZone;

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";
  private String websiteUrl;

  /**
   * Business type Possible Values:   - &#39;PARTNERSHIP&#39;   - &#39;SOLE_PROPRIETORSHIP&#39;   - &#39;CORPORATION&#39;   - &#39;LLC&#39;   - &#39;NON_PROFIT&#39;   - &#39;TRUST&#39; 
   */
  public enum TypeEnum {
    PARTNERSHIP("PARTNERSHIP"),
    
    SOLE_PROPRIETORSHIP("SOLE_PROPRIETORSHIP"),
    
    CORPORATION("CORPORATION"),
    
    LLC("LLC"),
    
    NON_PROFIT("NON_PROFIT"),
    
    TRUST("TRUST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_TAX_ID = "taxId";
  private String taxId;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  public static final String JSON_PROPERTY_BUSINESS_CONTACT = "businessContact";
  private PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact businessContact;

  public static final String JSON_PROPERTY_TECHNICAL_CONTACT = "technicalContact";
  private PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact technicalContact;

  public static final String JSON_PROPERTY_EMERGENCY_CONTACT = "emergencyContact";
  private PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact emergencyContact;

  public static final String JSON_PROPERTY_MERCHANT_CATEGORY_CODE = "merchantCategoryCode";
  private String merchantCategoryCode;

  public PostRegistrationRequestOrganizationInformationBusinessInformation() {
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation doingBusinessAs(String doingBusinessAs) {
    
    this.doingBusinessAs = doingBusinessAs;
    return this;
  }

  /**
   * Get doingBusinessAs
   * @return doingBusinessAs
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOING_BUSINESS_AS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDoingBusinessAs() {
    return doingBusinessAs;
  }


  @JsonProperty(JSON_PROPERTY_DOING_BUSINESS_AS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoingBusinessAs(String doingBusinessAs) {
    this.doingBusinessAs = doingBusinessAs;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation startDate(LocalDate startDate) {
    
    this.startDate = startDate;
    return this;
  }

  /**
   * &#x60;Format: YYYY-MM-DD&#x60; Example 2016-08-11 equals August 11, 2016 
   * @return startDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation address(PostRegistrationRequestOrganizationInformationBusinessInformationAddress address) {
    
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRegistrationRequestOrganizationInformationBusinessInformationAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(PostRegistrationRequestOrganizationInformationBusinessInformationAddress address) {
    this.address = address;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation timeZone(TimeZoneEnum timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Merchant perferred time zone Possible Values: - &#39;Pacific/Pago_Pago&#39; - &#39;Pacific/Honolulu&#39; - &#39;America/Anchorage&#39; - &#39;America/Vancouver&#39; - &#39;America/Los_Angeles&#39; - &#39;America/Phoenix&#39; - &#39;America/Edmonton&#39; - &#39;America/Denver&#39; - &#39;America/Winnipeg&#39; - &#39;America/Mexico_City&#39; - &#39;America/Chicago&#39; - &#39;America/Bogota&#39; - &#39;America/Indianapolis&#39; - &#39;America/New_York&#39; - &#39;America/La_Paz&#39; - &#39;America/Halifax&#39; - &#39;America/St_Johns&#39; - &#39;America/Buenos_Aires&#39; - &#39;America/Godthab&#39; - &#39;America/Sao_Paulo&#39; - &#39;America/Noronha&#39; - &#39;Atlantic/Cape_Verde&#39; - &#39;GMT&#39; - &#39;Europe/Dublin&#39; - &#39;Europe/Lisbon&#39; - &#39;Europe/London&#39; - &#39;Africa/Tunis&#39; - &#39;Europe/Vienna&#39; - &#39;Europe/Brussels&#39; - &#39;Europe/Zurich&#39; - &#39;Europe/Prague&#39; - &#39;Europe/Berlin&#39; - &#39;Europe/Copenhagen&#39; - &#39;Europe/Madrid&#39; - &#39;Europe/Budapest&#39; - &#39;Europe/Rome&#39; - &#39;Africa/Tripoli&#39; - &#39;Europe/Monaco&#39; - &#39;Europe/Malta&#39; - &#39;Europe/Amsterdam&#39; - &#39;Europe/Oslo&#39; - &#39;Europe/Warsaw&#39; - &#39;Europe/Stockholm&#39; - &#39;Europe/Belgrade&#39; - &#39;Europe/Paris&#39; - &#39;Africa/Johannesburg&#39; - &#39;Europe/Minsk&#39; - &#39;Africa/Cairo&#39; - &#39;Europe/Helsinki&#39; - &#39;Europe/Athens&#39; - &#39;Asia/Jerusalem&#39; - &#39;Europe/Riga&#39; - &#39;Europe/Bucharest&#39; - &#39;Europe/Istanbul&#39; - &#39;Asia/Riyadh&#39; - &#39;Europe/Moscow&#39; - &#39;Asia/Dubai&#39; - &#39;Asia/Baku&#39; - &#39;Asia/Tbilisi&#39; - &#39;Asia/Calcutta&#39; - &#39;Asia/Katmandu&#39; - &#39;Asia/Dacca&#39; - &#39;Asia/Rangoon&#39; - &#39;Asia/Jakarta&#39; - &#39;Asia/Saigon&#39; - &#39;Asia/Bangkok&#39; - &#39;Australia/Perth&#39; - &#39;Asia/Hong_Kong&#39; - &#39;Asia/Macao&#39; - &#39;Asia/Kuala_Lumpur&#39; - &#39;Asia/Manila&#39; - &#39;Asia/Singapore&#39; - &#39;Asia/Taipei&#39; - &#39;Asia/Shanghai&#39; - &#39;Asia/Seoul&#39; - &#39;Asia/Tokyo&#39; - &#39;Asia/Yakutsk&#39; - &#39;Australia/Adelaide&#39; - &#39;Australia/Brisbane&#39; - &#39;Australia/Broken_Hill&#39; - &#39;Australia/Darwin&#39; - &#39;Australia/Eucla&#39; - &#39;Australia/Hobart&#39; - &#39;Australia/Lindeman&#39; - &#39;Australia/Sydney&#39; - &#39;Australia/Lord_Howe&#39; - &#39;Australia/Melbourne&#39; - &#39;Asia/Magadan&#39; - &#39;Pacific/Norfolk&#39; - &#39;Pacific/Auckland&#39; 
   * @return timeZone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeZoneEnum getTimeZone() {
    return timeZone;
  }


  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeZone(TimeZoneEnum timeZone) {
    this.timeZone = timeZone;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation websiteUrl(String websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebsiteUrl() {
    return websiteUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * Business type Possible Values:   - &#39;PARTNERSHIP&#39;   - &#39;SOLE_PROPRIETORSHIP&#39;   - &#39;CORPORATION&#39;   - &#39;LLC&#39;   - &#39;NON_PROFIT&#39;   - &#39;TRUST&#39; 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxId() {
    return taxId;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation businessContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact businessContact) {
    
    this.businessContact = businessContact;
    return this;
  }

  /**
   * Get businessContact
   * @return businessContact
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUSINESS_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact getBusinessContact() {
    return businessContact;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBusinessContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact businessContact) {
    this.businessContact = businessContact;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation technicalContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact technicalContact) {
    
    this.technicalContact = technicalContact;
    return this;
  }

  /**
   * Get technicalContact
   * @return technicalContact
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNICAL_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact getTechnicalContact() {
    return technicalContact;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnicalContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact technicalContact) {
    this.technicalContact = technicalContact;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation emergencyContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact emergencyContact) {
    
    this.emergencyContact = emergencyContact;
    return this;
  }

  /**
   * Get emergencyContact
   * @return emergencyContact
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMERGENCY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact getEmergencyContact() {
    return emergencyContact;
  }


  @JsonProperty(JSON_PROPERTY_EMERGENCY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmergencyContact(PostRegistrationRequestOrganizationInformationBusinessInformationBusinessContact emergencyContact) {
    this.emergencyContact = emergencyContact;
  }

  public PostRegistrationRequestOrganizationInformationBusinessInformation merchantCategoryCode(String merchantCategoryCode) {
    
    this.merchantCategoryCode = merchantCategoryCode;
    return this;
  }

  /**
   * Industry standard Merchant Category Code (MCC)
   * @return merchantCategoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantCategoryCode() {
    return merchantCategoryCode;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantCategoryCode(String merchantCategoryCode) {
    this.merchantCategoryCode = merchantCategoryCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRegistrationRequestOrganizationInformationBusinessInformation postRegistrationRequestOrganizationInformationBusinessInformation = (PostRegistrationRequestOrganizationInformationBusinessInformation) o;
    return Objects.equals(this.name, postRegistrationRequestOrganizationInformationBusinessInformation.name) &&
        Objects.equals(this.doingBusinessAs, postRegistrationRequestOrganizationInformationBusinessInformation.doingBusinessAs) &&
        Objects.equals(this.description, postRegistrationRequestOrganizationInformationBusinessInformation.description) &&
        Objects.equals(this.startDate, postRegistrationRequestOrganizationInformationBusinessInformation.startDate) &&
        Objects.equals(this.address, postRegistrationRequestOrganizationInformationBusinessInformation.address) &&
        Objects.equals(this.timeZone, postRegistrationRequestOrganizationInformationBusinessInformation.timeZone) &&
        Objects.equals(this.websiteUrl, postRegistrationRequestOrganizationInformationBusinessInformation.websiteUrl) &&
        Objects.equals(this.type, postRegistrationRequestOrganizationInformationBusinessInformation.type) &&
        Objects.equals(this.taxId, postRegistrationRequestOrganizationInformationBusinessInformation.taxId) &&
        Objects.equals(this.phoneNumber, postRegistrationRequestOrganizationInformationBusinessInformation.phoneNumber) &&
        Objects.equals(this.businessContact, postRegistrationRequestOrganizationInformationBusinessInformation.businessContact) &&
        Objects.equals(this.technicalContact, postRegistrationRequestOrganizationInformationBusinessInformation.technicalContact) &&
        Objects.equals(this.emergencyContact, postRegistrationRequestOrganizationInformationBusinessInformation.emergencyContact) &&
        Objects.equals(this.merchantCategoryCode, postRegistrationRequestOrganizationInformationBusinessInformation.merchantCategoryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, doingBusinessAs, description, startDate, address, timeZone, websiteUrl, type, taxId, phoneNumber, businessContact, technicalContact, emergencyContact, merchantCategoryCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRegistrationRequestOrganizationInformationBusinessInformation {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    doingBusinessAs: ").append(toIndentedString(doingBusinessAs)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    businessContact: ").append(toIndentedString(businessContact)).append("\n");
    sb.append("    technicalContact: ").append(toIndentedString(technicalContact)).append("\n");
    sb.append("    emergencyContact: ").append(toIndentedString(emergencyContact)).append("\n");
    sb.append("    merchantCategoryCode: ").append(toIndentedString(merchantCategoryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

