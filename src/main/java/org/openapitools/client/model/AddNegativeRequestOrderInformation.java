/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddNegativeRequestOrderInformationAddress;
import org.openapitools.client.model.AddNegativeRequestOrderInformationBillTo;
import org.openapitools.client.model.AddNegativeRequestOrderInformationLineItemsInner;
import org.openapitools.client.model.AddNegativeRequestOrderInformationShipTo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddNegativeRequestOrderInformation
 */
@JsonPropertyOrder({
  AddNegativeRequestOrderInformation.JSON_PROPERTY_ADDRESS,
  AddNegativeRequestOrderInformation.JSON_PROPERTY_BILL_TO,
  AddNegativeRequestOrderInformation.JSON_PROPERTY_SHIP_TO,
  AddNegativeRequestOrderInformation.JSON_PROPERTY_LINE_ITEMS
})
@JsonTypeName("addNegative_request_orderInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class AddNegativeRequestOrderInformation {
  public static final String JSON_PROPERTY_ADDRESS = "address";
  private AddNegativeRequestOrderInformationAddress address;

  public static final String JSON_PROPERTY_BILL_TO = "billTo";
  private AddNegativeRequestOrderInformationBillTo billTo;

  public static final String JSON_PROPERTY_SHIP_TO = "shipTo";
  private AddNegativeRequestOrderInformationShipTo shipTo;

  public static final String JSON_PROPERTY_LINE_ITEMS = "lineItems";
  private List<AddNegativeRequestOrderInformationLineItemsInner> lineItems = new ArrayList<>();

  public AddNegativeRequestOrderInformation() {
  }

  public AddNegativeRequestOrderInformation address(AddNegativeRequestOrderInformationAddress address) {
    
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddNegativeRequestOrderInformationAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(AddNegativeRequestOrderInformationAddress address) {
    this.address = address;
  }

  public AddNegativeRequestOrderInformation billTo(AddNegativeRequestOrderInformationBillTo billTo) {
    
    this.billTo = billTo;
    return this;
  }

  /**
   * Get billTo
   * @return billTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddNegativeRequestOrderInformationBillTo getBillTo() {
    return billTo;
  }


  @JsonProperty(JSON_PROPERTY_BILL_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillTo(AddNegativeRequestOrderInformationBillTo billTo) {
    this.billTo = billTo;
  }

  public AddNegativeRequestOrderInformation shipTo(AddNegativeRequestOrderInformationShipTo shipTo) {
    
    this.shipTo = shipTo;
    return this;
  }

  /**
   * Get shipTo
   * @return shipTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddNegativeRequestOrderInformationShipTo getShipTo() {
    return shipTo;
  }


  @JsonProperty(JSON_PROPERTY_SHIP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipTo(AddNegativeRequestOrderInformationShipTo shipTo) {
    this.shipTo = shipTo;
  }

  public AddNegativeRequestOrderInformation lineItems(List<AddNegativeRequestOrderInformationLineItemsInner> lineItems) {
    
    this.lineItems = lineItems;
    return this;
  }

  public AddNegativeRequestOrderInformation addLineItemsItem(AddNegativeRequestOrderInformationLineItemsInner lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * This array contains detailed information about individual products in the order.
   * @return lineItems
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AddNegativeRequestOrderInformationLineItemsInner> getLineItems() {
    return lineItems;
  }


  @JsonProperty(JSON_PROPERTY_LINE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineItems(List<AddNegativeRequestOrderInformationLineItemsInner> lineItems) {
    this.lineItems = lineItems;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddNegativeRequestOrderInformation addNegativeRequestOrderInformation = (AddNegativeRequestOrderInformation) o;
    return Objects.equals(this.address, addNegativeRequestOrderInformation.address) &&
        Objects.equals(this.billTo, addNegativeRequestOrderInformation.billTo) &&
        Objects.equals(this.shipTo, addNegativeRequestOrderInformation.shipTo) &&
        Objects.equals(this.lineItems, addNegativeRequestOrderInformation.lineItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, billTo, shipTo, lineItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddNegativeRequestOrderInformation {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    billTo: ").append(toIndentedString(billTo)).append("\n");
    sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

