/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CapturePaymentRequestOrderInformationInvoiceDetails
 */
@JsonPropertyOrder({
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_ORDER_NUMBER,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_ORDER_DATE,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_PURCHASE_CONTACT_NAME,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_TAXABLE,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_COMMODITY_CODE,
  CapturePaymentRequestOrderInformationInvoiceDetails.JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM
})
@JsonTypeName("capturePayment_request_orderInformation_invoiceDetails")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CapturePaymentRequestOrderInformationInvoiceDetails {
  public static final String JSON_PROPERTY_PURCHASE_ORDER_NUMBER = "purchaseOrderNumber";
  private String purchaseOrderNumber;

  public static final String JSON_PROPERTY_PURCHASE_ORDER_DATE = "purchaseOrderDate";
  private String purchaseOrderDate;

  public static final String JSON_PROPERTY_PURCHASE_CONTACT_NAME = "purchaseContactName";
  private String purchaseContactName;

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  private Boolean taxable;

  public static final String JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER = "vatInvoiceReferenceNumber";
  private String vatInvoiceReferenceNumber;

  public static final String JSON_PROPERTY_COMMODITY_CODE = "commodityCode";
  private String commodityCode;

  public static final String JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM = "transactionAdviceAddendum";
  private List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum = new ArrayList<>();

  public CapturePaymentRequestOrderInformationInvoiceDetails() {
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails purchaseOrderNumber(String purchaseOrderNumber) {
    
    this.purchaseOrderNumber = purchaseOrderNumber;
    return this;
  }

  /**
   * Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource recommends that you do not populate the field with all zeros or nines. 
   * @return purchaseOrderNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseOrderNumber() {
    return purchaseOrderNumber;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails purchaseOrderDate(String purchaseOrderDate) {
    
    this.purchaseOrderDate = purchaseOrderDate;
    return this;
  }

  /**
   * Date the order was processed. &#x60;Format: YYYY-MM-DD&#x60;. 
   * @return purchaseOrderDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseOrderDate() {
    return purchaseOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseOrderDate(String purchaseOrderDate) {
    this.purchaseOrderDate = purchaseOrderDate;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails purchaseContactName(String purchaseContactName) {
    
    this.purchaseContactName = purchaseContactName;
    return this;
  }

  /**
   * The name of the individual or the company contacted for company authorized purchases. 
   * @return purchaseContactName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_CONTACT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseContactName() {
    return purchaseContactName;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_CONTACT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseContactName(String purchaseContactName) {
    this.purchaseContactName = purchaseContactName;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails taxable(Boolean taxable) {
    
    this.taxable = taxable;
    return this;
  }

  /**
   * Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values &gt; 0.  If you do not include any &#x60;lineItems[].taxAmount&#x60; values in your request, CyberSource does not include &#x60;invoiceDetails.taxable&#x60; in the data it sends to the processor.  Possible values:  - **true**  - **false** 
   * @return taxable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails vatInvoiceReferenceNumber(String vatInvoiceReferenceNumber) {
    
    this.vatInvoiceReferenceNumber = vatInvoiceReferenceNumber;
    return this;
  }

  /**
   * VAT invoice number associated with the transaction. 
   * @return vatInvoiceReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVatInvoiceReferenceNumber() {
    return vatInvoiceReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_VAT_INVOICE_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatInvoiceReferenceNumber(String vatInvoiceReferenceNumber) {
    this.vatInvoiceReferenceNumber = vatInvoiceReferenceNumber;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails commodityCode(String commodityCode) {
    
    this.commodityCode = commodityCode;
    return this;
  }

  /**
   * International description code of the overall order&#39;s goods or services or the Categorizes purchases for VAT reporting. Contact your acquirer for a list of codes. 
   * @return commodityCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMODITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommodityCode() {
    return commodityCode;
  }


  @JsonProperty(JSON_PROPERTY_COMMODITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommodityCode(String commodityCode) {
    this.commodityCode = commodityCode;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails transactionAdviceAddendum(List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum) {
    
    this.transactionAdviceAddendum = transactionAdviceAddendum;
    return this;
  }

  public CapturePaymentRequestOrderInformationInvoiceDetails addTransactionAdviceAddendumItem(CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner transactionAdviceAddendumItem) {
    if (this.transactionAdviceAddendum == null) {
      this.transactionAdviceAddendum = new ArrayList<>();
    }
    this.transactionAdviceAddendum.add(transactionAdviceAddendumItem);
    return this;
  }

  /**
   * Get transactionAdviceAddendum
   * @return transactionAdviceAddendum
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> getTransactionAdviceAddendum() {
    return transactionAdviceAddendum;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ADVICE_ADDENDUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionAdviceAddendum(List<CreatePaymentRequestOrderInformationInvoiceDetailsTransactionAdviceAddendumInner> transactionAdviceAddendum) {
    this.transactionAdviceAddendum = transactionAdviceAddendum;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CapturePaymentRequestOrderInformationInvoiceDetails capturePaymentRequestOrderInformationInvoiceDetails = (CapturePaymentRequestOrderInformationInvoiceDetails) o;
    return Objects.equals(this.purchaseOrderNumber, capturePaymentRequestOrderInformationInvoiceDetails.purchaseOrderNumber) &&
        Objects.equals(this.purchaseOrderDate, capturePaymentRequestOrderInformationInvoiceDetails.purchaseOrderDate) &&
        Objects.equals(this.purchaseContactName, capturePaymentRequestOrderInformationInvoiceDetails.purchaseContactName) &&
        Objects.equals(this.taxable, capturePaymentRequestOrderInformationInvoiceDetails.taxable) &&
        Objects.equals(this.vatInvoiceReferenceNumber, capturePaymentRequestOrderInformationInvoiceDetails.vatInvoiceReferenceNumber) &&
        Objects.equals(this.commodityCode, capturePaymentRequestOrderInformationInvoiceDetails.commodityCode) &&
        Objects.equals(this.transactionAdviceAddendum, capturePaymentRequestOrderInformationInvoiceDetails.transactionAdviceAddendum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(purchaseOrderNumber, purchaseOrderDate, purchaseContactName, taxable, vatInvoiceReferenceNumber, commodityCode, transactionAdviceAddendum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CapturePaymentRequestOrderInformationInvoiceDetails {\n");
    sb.append("    purchaseOrderNumber: ").append(toIndentedString(purchaseOrderNumber)).append("\n");
    sb.append("    purchaseOrderDate: ").append(toIndentedString(purchaseOrderDate)).append("\n");
    sb.append("    purchaseContactName: ").append(toIndentedString(purchaseContactName)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    vatInvoiceReferenceNumber: ").append(toIndentedString(vatInvoiceReferenceNumber)).append("\n");
    sb.append("    commodityCode: ").append(toIndentedString(commodityCode)).append("\n");
    sb.append("    transactionAdviceAddendum: ").append(toIndentedString(transactionAdviceAddendum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

