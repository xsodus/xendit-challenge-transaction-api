/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePushFundsTransferRequestSenderInformationAccount
 */
@JsonPropertyOrder({
  CreatePushFundsTransferRequestSenderInformationAccount.JSON_PROPERTY_FUNDS_SOURCE,
  CreatePushFundsTransferRequestSenderInformationAccount.JSON_PROPERTY_NUMBER
})
@JsonTypeName("createPushFundsTransfer_request_senderInformation_account")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePushFundsTransferRequestSenderInformationAccount {
  public static final String JSON_PROPERTY_FUNDS_SOURCE = "fundsSource";
  private JsonNullable<String> fundsSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NUMBER = "number";
  private JsonNullable<String> number = JsonNullable.<String>undefined();

  public CreatePushFundsTransferRequestSenderInformationAccount() {
  }

  public CreatePushFundsTransferRequestSenderInformationAccount fundsSource(String fundsSource) {
    this.fundsSource = JsonNullable.<String>of(fundsSource);
    
    return this;
  }

  /**
   * Source of funds. Possible values:  Chase Paymentech, FDC Compass, Visa Platform Connect:  - &#x60;01&#x60;: Credit card - &#x60;02&#x60;: Debit card - &#x60;03&#x60;: Prepaid card  Chase Paymentech, Visa Platform Connect:  - &#x60;04&#x60;: Cash - &#x60;05&#x60;: Debit or deposit account that is not linked to a Visa card. Includes checking accounts, savings accounts, and proprietary debit or ATM cards. - &#x60;06&#x60;: Credit account that is not linked to a Visa card. Includes credit cards and proprietary lines of credit.  FDC Compass: - &#x60;04&#x60;: Deposit Account  Funds Disbursement This value is most likely 05 to identify that the originator used a deposit account to fund the disbursement.  Credit Card Bill Payment This value must be 02, 03, 04, or 05. 
   * @return fundsSource
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getFundsSource() {
        return fundsSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNDS_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFundsSource_JsonNullable() {
    return fundsSource;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNDS_SOURCE)
  public void setFundsSource_JsonNullable(JsonNullable<String> fundsSource) {
    this.fundsSource = fundsSource;
  }

  public void setFundsSource(String fundsSource) {
    this.fundsSource = JsonNullable.<String>of(fundsSource);
  }

  public CreatePushFundsTransferRequestSenderInformationAccount number(String number) {
    this.number = JsonNullable.<String>of(number);
    
    return this;
  }

  /**
   * The account number of the entity funding the transaction. It is the sender&#39;s account number. It can be a debit/credit card account number or bank account number.  Funds disbursements  This field is optional.  All other transactions  This field is required when the sender funds the transaction with a financial instrument, for example debit card. Length: 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getNumber() {
        return number.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNumber_JsonNullable() {
    return number;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER)
  public void setNumber_JsonNullable(JsonNullable<String> number) {
    this.number = number;
  }

  public void setNumber(String number) {
    this.number = JsonNullable.<String>of(number);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePushFundsTransferRequestSenderInformationAccount createPushFundsTransferRequestSenderInformationAccount = (CreatePushFundsTransferRequestSenderInformationAccount) o;
    return equalsNullable(this.fundsSource, createPushFundsTransferRequestSenderInformationAccount.fundsSource) &&
        equalsNullable(this.number, createPushFundsTransferRequestSenderInformationAccount.number);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fundsSource), hashCodeNullable(number));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePushFundsTransferRequestSenderInformationAccount {\n");
    sb.append("    fundsSource: ").append(toIndentedString(fundsSource)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

