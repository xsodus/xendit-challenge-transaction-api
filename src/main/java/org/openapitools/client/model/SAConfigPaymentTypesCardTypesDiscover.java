/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Object containing supported Card Types and settings
 */
@JsonPropertyOrder({
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_CARD_VERIFICATION_NUMBER_SUPPORTED,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_CARD_VERIFICATION_NUMBER_DISPLAY,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_PAYER_AUTHENTICATION_SUPPORTED,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_SUPPORTED_CURRENCIES,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_METHOD,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_CARD_VERIFICATION_NUMBER_REQUIRED,
  SAConfigPaymentTypesCardTypesDiscover.JSON_PROPERTY_PAYER_AUTHENTICATION_ENABLED
})
@JsonTypeName("SAConfig_paymentTypes_cardTypes_discover")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class SAConfigPaymentTypesCardTypesDiscover {
  public static final String JSON_PROPERTY_CARD_VERIFICATION_NUMBER_SUPPORTED = "cardVerificationNumberSupported";
  private Boolean cardVerificationNumberSupported;

  public static final String JSON_PROPERTY_CARD_VERIFICATION_NUMBER_DISPLAY = "cardVerificationNumberDisplay";
  private Boolean cardVerificationNumberDisplay;

  public static final String JSON_PROPERTY_PAYER_AUTHENTICATION_SUPPORTED = "payerAuthenticationSupported";
  private Boolean payerAuthenticationSupported;

  public static final String JSON_PROPERTY_SUPPORTED_CURRENCIES = "supportedCurrencies";
  private List<String> supportedCurrencies = new ArrayList<>();

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;

  public static final String JSON_PROPERTY_CARD_VERIFICATION_NUMBER_REQUIRED = "cardVerificationNumberRequired";
  private Boolean cardVerificationNumberRequired;

  public static final String JSON_PROPERTY_PAYER_AUTHENTICATION_ENABLED = "payerAuthenticationEnabled";
  private Boolean payerAuthenticationEnabled;

  public SAConfigPaymentTypesCardTypesDiscover() {
  }

  public SAConfigPaymentTypesCardTypesDiscover cardVerificationNumberSupported(Boolean cardVerificationNumberSupported) {
    
    this.cardVerificationNumberSupported = cardVerificationNumberSupported;
    return this;
  }

  /**
   * Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.
   * @return cardVerificationNumberSupported
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCardVerificationNumberSupported() {
    return cardVerificationNumberSupported;
  }


  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardVerificationNumberSupported(Boolean cardVerificationNumberSupported) {
    this.cardVerificationNumberSupported = cardVerificationNumberSupported;
  }

  public SAConfigPaymentTypesCardTypesDiscover cardVerificationNumberDisplay(Boolean cardVerificationNumberDisplay) {
    
    this.cardVerificationNumberDisplay = cardVerificationNumberDisplay;
    return this;
  }

  /**
   * Toggles whether or Card Verification Number is displayed on the Hosted Checkout.
   * @return cardVerificationNumberDisplay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCardVerificationNumberDisplay() {
    return cardVerificationNumberDisplay;
  }


  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardVerificationNumberDisplay(Boolean cardVerificationNumberDisplay) {
    this.cardVerificationNumberDisplay = cardVerificationNumberDisplay;
  }

  public SAConfigPaymentTypesCardTypesDiscover payerAuthenticationSupported(Boolean payerAuthenticationSupported) {
    
    this.payerAuthenticationSupported = payerAuthenticationSupported;
    return this;
  }

  /**
   * Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.
   * @return payerAuthenticationSupported
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPayerAuthenticationSupported() {
    return payerAuthenticationSupported;
  }


  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayerAuthenticationSupported(Boolean payerAuthenticationSupported) {
    this.payerAuthenticationSupported = payerAuthenticationSupported;
  }

  public SAConfigPaymentTypesCardTypesDiscover supportedCurrencies(List<String> supportedCurrencies) {
    
    this.supportedCurrencies = supportedCurrencies;
    return this;
  }

  public SAConfigPaymentTypesCardTypesDiscover addSupportedCurrenciesItem(String supportedCurrenciesItem) {
    if (this.supportedCurrencies == null) {
      this.supportedCurrencies = new ArrayList<>();
    }
    this.supportedCurrencies.add(supportedCurrenciesItem);
    return this;
  }

  /**
   * Array of the supported  ISO 4217 alphabetic currency codes.
   * @return supportedCurrencies
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTED_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSupportedCurrencies() {
    return supportedCurrencies;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedCurrencies(List<String> supportedCurrencies) {
    this.supportedCurrencies = supportedCurrencies;
  }

  public SAConfigPaymentTypesCardTypesDiscover method(String method) {
    
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(String method) {
    this.method = method;
  }

  public SAConfigPaymentTypesCardTypesDiscover cardVerificationNumberRequired(Boolean cardVerificationNumberRequired) {
    
    this.cardVerificationNumberRequired = cardVerificationNumberRequired;
    return this;
  }

  /**
   * Get cardVerificationNumberRequired
   * @return cardVerificationNumberRequired
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCardVerificationNumberRequired() {
    return cardVerificationNumberRequired;
  }


  @JsonProperty(JSON_PROPERTY_CARD_VERIFICATION_NUMBER_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardVerificationNumberRequired(Boolean cardVerificationNumberRequired) {
    this.cardVerificationNumberRequired = cardVerificationNumberRequired;
  }

  public SAConfigPaymentTypesCardTypesDiscover payerAuthenticationEnabled(Boolean payerAuthenticationEnabled) {
    
    this.payerAuthenticationEnabled = payerAuthenticationEnabled;
    return this;
  }

  /**
   * Get payerAuthenticationEnabled
   * @return payerAuthenticationEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPayerAuthenticationEnabled() {
    return payerAuthenticationEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PAYER_AUTHENTICATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayerAuthenticationEnabled(Boolean payerAuthenticationEnabled) {
    this.payerAuthenticationEnabled = payerAuthenticationEnabled;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SAConfigPaymentTypesCardTypesDiscover saConfigPaymentTypesCardTypesDiscover = (SAConfigPaymentTypesCardTypesDiscover) o;
    return Objects.equals(this.cardVerificationNumberSupported, saConfigPaymentTypesCardTypesDiscover.cardVerificationNumberSupported) &&
        Objects.equals(this.cardVerificationNumberDisplay, saConfigPaymentTypesCardTypesDiscover.cardVerificationNumberDisplay) &&
        Objects.equals(this.payerAuthenticationSupported, saConfigPaymentTypesCardTypesDiscover.payerAuthenticationSupported) &&
        Objects.equals(this.supportedCurrencies, saConfigPaymentTypesCardTypesDiscover.supportedCurrencies) &&
        Objects.equals(this.method, saConfigPaymentTypesCardTypesDiscover.method) &&
        Objects.equals(this.cardVerificationNumberRequired, saConfigPaymentTypesCardTypesDiscover.cardVerificationNumberRequired) &&
        Objects.equals(this.payerAuthenticationEnabled, saConfigPaymentTypesCardTypesDiscover.payerAuthenticationEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardVerificationNumberSupported, cardVerificationNumberDisplay, payerAuthenticationSupported, supportedCurrencies, method, cardVerificationNumberRequired, payerAuthenticationEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SAConfigPaymentTypesCardTypesDiscover {\n");
    sb.append("    cardVerificationNumberSupported: ").append(toIndentedString(cardVerificationNumberSupported)).append("\n");
    sb.append("    cardVerificationNumberDisplay: ").append(toIndentedString(cardVerificationNumberDisplay)).append("\n");
    sb.append("    payerAuthenticationSupported: ").append(toIndentedString(payerAuthenticationSupported)).append("\n");
    sb.append("    supportedCurrencies: ").append(toIndentedString(supportedCurrencies)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    cardVerificationNumberRequired: ").append(toIndentedString(cardVerificationNumberRequired)).append("\n");
    sb.append("    payerAuthenticationEnabled: ").append(toIndentedString(payerAuthenticationEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

