/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CalculateTaxRequestOrderInformationBillTo
 */
@JsonPropertyOrder({
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_ADDRESS1,
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_ADDRESS2,
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_LOCALITY,
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_POSTAL_CODE,
  CalculateTaxRequestOrderInformationBillTo.JSON_PROPERTY_COUNTRY
})
@JsonTypeName("calculateTax_request_orderInformation_billTo")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CalculateTaxRequestOrderInformationBillTo {
  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public CalculateTaxRequestOrderInformationBillTo() {
  }

  public CalculateTaxRequestOrderInformationBillTo address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * First line of the billing street address.  #### Tax Calculation Required for U.S. and Canadian taxes. Not applicable to international and value added taxes. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public CalculateTaxRequestOrderInformationBillTo address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

  /**
   * Second line of the billing street address.  #### Tax Calculation Optional for U.S. and Canadian taxes. Not applicable to international and value added taxes. 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public CalculateTaxRequestOrderInformationBillTo locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * Credit card billing city.  #### Tax Calculation Required for U.S. and Canadian taxes only. Not applicable to international and value added taxes. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CalculateTaxRequestOrderInformationBillTo administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * Credit card billing state or province.  #### Tax Calculation Required for U.S. and Canadian taxes. Not applicable to international and value added taxes. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public CalculateTaxRequestOrderInformationBillTo postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Postal code for the billing address. The postal code must consist of 5 to 9 digits. If the billing country is the U.S., the 9-digit postal code must follow this format:  [5 digits][dash][4 digits]  **Example**: 12345-6789  If the billing country is Canada, the 6-digit postal code must follow this format:  [alpha][numeric][alpha] [numeric][alpha][numeric]  **Example**: A1B 2C3  #### Tax Calculation Required for U.S. and Canadian taxes. Not applicable to international and value added taxes. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CalculateTaxRequestOrderInformationBillTo country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Credit card billing country. Use the [ISO Standard Country Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf).  If &#x60;orderInformation.shipTo.country&#x60; is not provided, &#x60;orderInformation.billTo.country&#x60; is used in its place. If  &#x60;orderInformation.billTo.country&#x60; is set to &#x60;US&#x60; or &#x60;CA&#x60;, then &#x60;orderInformation.billTo.postalCode&#x60; and &#x60;orderInformation.billTo.administrativeArea&#x60; are also required.  #### Tax Calculation Required for U.S., Canadian, international and value added taxes. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculateTaxRequestOrderInformationBillTo calculateTaxRequestOrderInformationBillTo = (CalculateTaxRequestOrderInformationBillTo) o;
    return Objects.equals(this.address1, calculateTaxRequestOrderInformationBillTo.address1) &&
        Objects.equals(this.address2, calculateTaxRequestOrderInformationBillTo.address2) &&
        Objects.equals(this.locality, calculateTaxRequestOrderInformationBillTo.locality) &&
        Objects.equals(this.administrativeArea, calculateTaxRequestOrderInformationBillTo.administrativeArea) &&
        Objects.equals(this.postalCode, calculateTaxRequestOrderInformationBillTo.postalCode) &&
        Objects.equals(this.country, calculateTaxRequestOrderInformationBillTo.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, locality, administrativeArea, postalCode, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculateTaxRequestOrderInformationBillTo {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

