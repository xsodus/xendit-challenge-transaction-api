/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestMerchantInformationServiceLocation
 */
@JsonPropertyOrder({
  CreatePaymentRequestMerchantInformationServiceLocation.JSON_PROPERTY_LOCALITY,
  CreatePaymentRequestMerchantInformationServiceLocation.JSON_PROPERTY_COUNTRY_SUBDIVISION_CODE,
  CreatePaymentRequestMerchantInformationServiceLocation.JSON_PROPERTY_COUNTRY_CODE,
  CreatePaymentRequestMerchantInformationServiceLocation.JSON_PROPERTY_POSTAL_CODE
})
@JsonTypeName("createPayment_request_merchantInformation_serviceLocation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestMerchantInformationServiceLocation {
  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_COUNTRY_SUBDIVISION_CODE = "countrySubdivisionCode";
  private String countrySubdivisionCode;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
  private String countryCode;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public CreatePaymentRequestMerchantInformationServiceLocation() {
  }

  public CreatePaymentRequestMerchantInformationServiceLocation locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * #### Visa Platform Connect  Merchant&#39;s service location city name. When merchant provides services from a location other than the location identified as merchant location. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CreatePaymentRequestMerchantInformationServiceLocation countrySubdivisionCode(String countrySubdivisionCode) {
    
    this.countrySubdivisionCode = countrySubdivisionCode;
    return this;
  }

  /**
   * #### Visa Platform Connect  Merchant&#39;s service location country subdivision code. When merchant provides services from a location other than the location identified as merchant location. 
   * @return countrySubdivisionCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_SUBDIVISION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountrySubdivisionCode() {
    return countrySubdivisionCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_SUBDIVISION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountrySubdivisionCode(String countrySubdivisionCode) {
    this.countrySubdivisionCode = countrySubdivisionCode;
  }

  public CreatePaymentRequestMerchantInformationServiceLocation countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

  /**
   * #### Visa Platform Connect  Merchant&#39;s service location country code. When merchant provides services from a location other than the location identified as merchant location. 
   * @return countryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public CreatePaymentRequestMerchantInformationServiceLocation postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * #### Visa Platform Connect  Merchant&#39;s service location postal code. When merchant provides services from a location other than the location identified as merchant location. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestMerchantInformationServiceLocation createPaymentRequestMerchantInformationServiceLocation = (CreatePaymentRequestMerchantInformationServiceLocation) o;
    return Objects.equals(this.locality, createPaymentRequestMerchantInformationServiceLocation.locality) &&
        Objects.equals(this.countrySubdivisionCode, createPaymentRequestMerchantInformationServiceLocation.countrySubdivisionCode) &&
        Objects.equals(this.countryCode, createPaymentRequestMerchantInformationServiceLocation.countryCode) &&
        Objects.equals(this.postalCode, createPaymentRequestMerchantInformationServiceLocation.postalCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locality, countrySubdivisionCode, countryCode, postalCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestMerchantInformationServiceLocation {\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    countrySubdivisionCode: ").append(toIndentedString(countrySubdivisionCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

