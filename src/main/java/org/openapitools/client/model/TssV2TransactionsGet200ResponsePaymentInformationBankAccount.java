/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TssV2TransactionsGet200ResponsePaymentInformationBankAccount
 */
@JsonPropertyOrder({
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_SUFFIX,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_PREFIX,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_CHECK_NUMBER,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_TYPE,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_NAME,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_CHECK_DIGIT,
  TssV2TransactionsGet200ResponsePaymentInformationBankAccount.JSON_PROPERTY_ENCODER_ID
})
@JsonTypeName("tssV2TransactionsGet200Response_paymentInformation_bank_account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TssV2TransactionsGet200ResponsePaymentInformationBankAccount {
  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_CHECK_NUMBER = "checkNumber";
  private String checkNumber;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CHECK_DIGIT = "checkDigit";
  private String checkDigit;

  public static final String JSON_PROPERTY_ENCODER_ID = "encoderId";
  private String encoderId;

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount() {
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

  /**
   * Last four digits of the customer&#39;s payment account number. 
   * @return suffix
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

  /**
   * Bank Identification Number (BIN). This is the initial four to six numbers on a credit card account number. 
   * @return prefix
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount checkNumber(String checkNumber) {
    
    this.checkNumber = checkNumber;
    return this;
  }

  /**
   * Check number.  Chase Paymentech Solutions - Optional. CyberSource ACH Service - Not used. RBS WorldPay Atlanta - Optional on debits. Required on credits. TeleCheck - Strongly recommended on debit requests. Optional on credits. 
   * @return checkNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckNumber() {
    return checkNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Account type.  Possible values:  - **C**: Checking.  - **G**: General ledger. This value is supported only on Wells Fargo ACH.  - **S**: Savings (U.S. dollars only).  - **X**: Corporate checking (U.S. dollars only). 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name used on the bank account. You can use this field only when scoring a direct debit transaction 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount checkDigit(String checkDigit) {
    
    this.checkDigit = checkDigit;
    return this;
  }

  /**
   * Code used to validate the customer&#39;s account number. Required for some countries if you do not or are not allowed to provide the IBAN instead. You may use this field only when scoring a direct debit transaction. 
   * @return checkDigit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_DIGIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCheckDigit() {
    return checkDigit;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_DIGIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckDigit(String checkDigit) {
    this.checkDigit = checkDigit;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount encoderId(String encoderId) {
    
    this.encoderId = encoderId;
    return this;
  }

  /**
   * Identifier for the bank that provided the customer&#39;s encoded account number.  To obtain the bank identifier, contact your processor. 
   * @return encoderId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCODER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncoderId() {
    return encoderId;
  }


  @JsonProperty(JSON_PROPERTY_ENCODER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncoderId(String encoderId) {
    this.encoderId = encoderId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2TransactionsGet200ResponsePaymentInformationBankAccount tssV2TransactionsGet200ResponsePaymentInformationBankAccount = (TssV2TransactionsGet200ResponsePaymentInformationBankAccount) o;
    return Objects.equals(this.suffix, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.suffix) &&
        Objects.equals(this.prefix, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.prefix) &&
        Objects.equals(this.checkNumber, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.checkNumber) &&
        Objects.equals(this.type, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.type) &&
        Objects.equals(this.name, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.name) &&
        Objects.equals(this.checkDigit, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.checkDigit) &&
        Objects.equals(this.encoderId, tssV2TransactionsGet200ResponsePaymentInformationBankAccount.encoderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suffix, prefix, checkNumber, type, name, checkDigit, encoderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2TransactionsGet200ResponsePaymentInformationBankAccount {\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    checkDigit: ").append(toIndentedString(checkDigit)).append("\n");
    sb.append("    encoderId: ").append(toIndentedString(encoderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

