/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestMerchantInformationMerchantDescriptor;
import org.openapitools.client.model.CreatePaymentRequestMerchantInformationServiceFeeDescriptor;
import org.openapitools.client.model.CreatePaymentRequestMerchantInformationServiceLocation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestMerchantInformation
 */
@JsonPropertyOrder({
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_MERCHANT_DESCRIPTOR,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_DOMAIN_NAME,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_SALES_ORGANIZATION_ID,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_CATEGORY_CODE,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_CATEGORY_CODE_DOMESTIC,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_TAX_ID,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_VAT_REGISTRATION_NUMBER,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_SERVICE_FEE_DESCRIPTOR,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_CANCEL_URL,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_SUCCESS_URL,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_FAILURE_URL,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_RETURN_URL,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_PARTNER_ID_CODE,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_SERVICE_LOCATION,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_NOTE_TO_BUYER,
  CreatePaymentRequestMerchantInformation.JSON_PROPERTY_MERCHANT_NAME
})
@JsonTypeName("createPayment_request_merchantInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestMerchantInformation {
  public static final String JSON_PROPERTY_MERCHANT_DESCRIPTOR = "merchantDescriptor";
  private CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor;

  public static final String JSON_PROPERTY_DOMAIN_NAME = "domainName";
  private String domainName;

  public static final String JSON_PROPERTY_SALES_ORGANIZATION_ID = "salesOrganizationId";
  private String salesOrganizationId;

  public static final String JSON_PROPERTY_CATEGORY_CODE = "categoryCode";
  private Integer categoryCode;

  public static final String JSON_PROPERTY_CATEGORY_CODE_DOMESTIC = "categoryCodeDomestic";
  private Integer categoryCodeDomestic;

  public static final String JSON_PROPERTY_TAX_ID = "taxId";
  private String taxId;

  public static final String JSON_PROPERTY_VAT_REGISTRATION_NUMBER = "vatRegistrationNumber";
  private String vatRegistrationNumber;

  public static final String JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER = "cardAcceptorReferenceNumber";
  private String cardAcceptorReferenceNumber;

  public static final String JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME = "transactionLocalDateTime";
  private String transactionLocalDateTime;

  public static final String JSON_PROPERTY_SERVICE_FEE_DESCRIPTOR = "serviceFeeDescriptor";
  private CreatePaymentRequestMerchantInformationServiceFeeDescriptor serviceFeeDescriptor;

  public static final String JSON_PROPERTY_CANCEL_URL = "cancelUrl";
  private String cancelUrl;

  public static final String JSON_PROPERTY_SUCCESS_URL = "successUrl";
  private String successUrl;

  public static final String JSON_PROPERTY_FAILURE_URL = "failureUrl";
  private String failureUrl;

  public static final String JSON_PROPERTY_RETURN_URL = "returnUrl";
  private String returnUrl;

  public static final String JSON_PROPERTY_PARTNER_ID_CODE = "partnerIdCode";
  private String partnerIdCode;

  public static final String JSON_PROPERTY_SERVICE_LOCATION = "serviceLocation";
  private CreatePaymentRequestMerchantInformationServiceLocation serviceLocation;

  public static final String JSON_PROPERTY_NOTE_TO_BUYER = "noteToBuyer";
  private String noteToBuyer;

  public static final String JSON_PROPERTY_MERCHANT_NAME = "merchantName";
  private String merchantName;

  public CreatePaymentRequestMerchantInformation() {
  }

  public CreatePaymentRequestMerchantInformation merchantDescriptor(CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    
    this.merchantDescriptor = merchantDescriptor;
    return this;
  }

  /**
   * Get merchantDescriptor
   * @return merchantDescriptor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestMerchantInformationMerchantDescriptor getMerchantDescriptor() {
    return merchantDescriptor;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantDescriptor(CreatePaymentRequestMerchantInformationMerchantDescriptor merchantDescriptor) {
    this.merchantDescriptor = merchantDescriptor;
  }

  public CreatePaymentRequestMerchantInformation domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

  /**
   * This field will contain either the merchant url or the reverse domain as per the requirement for DSRP Format 3. This might vary transaction to transaction and might not be static. Merchant needs to have access to send this value for all DSRP program. 
   * @return domainName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainName() {
    return domainName;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }

  public CreatePaymentRequestMerchantInformation salesOrganizationId(String salesOrganizationId) {
    
    this.salesOrganizationId = salesOrganizationId;
    return this;
  }

  /**
   * Company ID assigned to an independent sales organization. Get this value from Mastercard.  #### CyberSource through VisaNet The value for this field corresponds to the following data in the TC 33 capture file: - Record: CP01 TCR6 - Position: 106-116 - Field: Independent Sales Organization ID  This field is supported for Visa, Mastercard and Discover Transactions.  **Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant&#39;s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies. 
   * @return salesOrganizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALES_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSalesOrganizationId() {
    return salesOrganizationId;
  }


  @JsonProperty(JSON_PROPERTY_SALES_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesOrganizationId(String salesOrganizationId) {
    this.salesOrganizationId = salesOrganizationId;
  }

  public CreatePaymentRequestMerchantInformation categoryCode(Integer categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * The value for this field is a four-digit number that the payment card industry uses to classify merchants into market segments. A payment card company assigned one or more of these values to your business when you started accepting the payment card company&#39;s cards. When you do not include this field in your request, CyberSource uses the value in your CyberSource account.  #### CyberSource through VisaNet The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR4 - Position: 150-153 - Field: Merchant Category Code 
   * maximum: 9999
   * @return categoryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCategoryCode() {
    return categoryCode;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCode(Integer categoryCode) {
    this.categoryCode = categoryCode;
  }

  public CreatePaymentRequestMerchantInformation categoryCodeDomestic(Integer categoryCodeDomestic) {
    
    this.categoryCodeDomestic = categoryCodeDomestic;
    return this;
  }

  /**
   * Merchant category code for domestic transactions. The value for this field is a four-digit number that the payment card industry uses to classify merchants into market segments. A payment card company assigned one or more of these values to your business when you started accepting the payment card company&#39;s cards. Including this field in a request for a domestic transaction might reduce interchange fees.  When you include this field in a request: - Do not include the &#x60;merchant_category_code&#x60; field. - The value for this field overrides the value in your CyberSource account.  This field is supported only for: - Domestic transactions with Mastercard in Spain. Domestic means that you and the cardholder are in the same country. - Merchants enrolled in the OmniPay Direct interchange program. - First Data Merchant Solutions (Europe) on OmniPay Direct. 
   * maximum: 9999
   * @return categoryCodeDomestic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCategoryCodeDomestic() {
    return categoryCodeDomestic;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_CODE_DOMESTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryCodeDomestic(Integer categoryCodeDomestic) {
    this.categoryCodeDomestic = categoryCodeDomestic;
  }

  public CreatePaymentRequestMerchantInformation taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

  /**
   * Your Cadastro Nacional da Pessoa Jurídica (CNPJ) number.  This field is supported only for BNDES transactions on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR6 - Position: 40-59 - Field: BNDES Reference Field 1 
   * @return taxId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxId() {
    return taxId;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public CreatePaymentRequestMerchantInformation vatRegistrationNumber(String vatRegistrationNumber) {
    
    this.vatRegistrationNumber = vatRegistrationNumber;
    return this;
  }

  /**
   * Your government-assigned tax identification number.  #### Tax Calculation Required field for value added tax only. Not applicable to U.S. and Canadian taxes.  #### CyberSource through VisaNet For CtV processors, the maximum length is 20. 
   * @return vatRegistrationNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVatRegistrationNumber() {
    return vatRegistrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_VAT_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatRegistrationNumber(String vatRegistrationNumber) {
    this.vatRegistrationNumber = vatRegistrationNumber;
  }

  public CreatePaymentRequestMerchantInformation cardAcceptorReferenceNumber(String cardAcceptorReferenceNumber) {
    
    this.cardAcceptorReferenceNumber = cardAcceptorReferenceNumber;
    return this;
  }

  /**
   * Reference number that facilitates card acceptor/corporation communication and record keeping. 
   * @return cardAcceptorReferenceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardAcceptorReferenceNumber() {
    return cardAcceptorReferenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ACCEPTOR_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardAcceptorReferenceNumber(String cardAcceptorReferenceNumber) {
    this.cardAcceptorReferenceNumber = cardAcceptorReferenceNumber;
  }

  public CreatePaymentRequestMerchantInformation transactionLocalDateTime(String transactionLocalDateTime) {
    
    this.transactionLocalDateTime = transactionLocalDateTime;
    return this;
  }

  /**
   * Date and time at your physical location.  Format: &#x60;YYYYMMDDhhmmss&#x60;, where:  - &#x60;YYYY&#x60; &#x3D; year  - &#x60;MM&#x60; &#x3D; month  - &#x60;DD&#x60; &#x3D; day  - &#x60;hh&#x60; &#x3D; hour  - &#x60;mm&#x60; &#x3D; minutes  - &#x60;ss&#x60; &#x3D; seconds  #### Used by **Authorization** Required for these processors: - American Express Direct                                                                                                                                                                                                                                                                                                                         - American Express Direct - Credit Mutuel-CIC - FDC Nashville Global - SIX  Optional for all other processors. 
   * @return transactionLocalDateTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionLocalDateTime() {
    return transactionLocalDateTime;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_LOCAL_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionLocalDateTime(String transactionLocalDateTime) {
    this.transactionLocalDateTime = transactionLocalDateTime;
  }

  public CreatePaymentRequestMerchantInformation serviceFeeDescriptor(CreatePaymentRequestMerchantInformationServiceFeeDescriptor serviceFeeDescriptor) {
    
    this.serviceFeeDescriptor = serviceFeeDescriptor;
    return this;
  }

  /**
   * Get serviceFeeDescriptor
   * @return serviceFeeDescriptor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_FEE_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestMerchantInformationServiceFeeDescriptor getServiceFeeDescriptor() {
    return serviceFeeDescriptor;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_FEE_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceFeeDescriptor(CreatePaymentRequestMerchantInformationServiceFeeDescriptor serviceFeeDescriptor) {
    this.serviceFeeDescriptor = serviceFeeDescriptor;
  }

  public CreatePaymentRequestMerchantInformation cancelUrl(String cancelUrl) {
    
    this.cancelUrl = cancelUrl;
    return this;
  }

  /**
   * customer would be redirected to this url based on the decision of the transaction
   * @return cancelUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancelUrl() {
    return cancelUrl;
  }


  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelUrl(String cancelUrl) {
    this.cancelUrl = cancelUrl;
  }

  public CreatePaymentRequestMerchantInformation successUrl(String successUrl) {
    
    this.successUrl = successUrl;
    return this;
  }

  /**
   * customer would be redirected to this url based on the decision of the transaction
   * @return successUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuccessUrl() {
    return successUrl;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessUrl(String successUrl) {
    this.successUrl = successUrl;
  }

  public CreatePaymentRequestMerchantInformation failureUrl(String failureUrl) {
    
    this.failureUrl = failureUrl;
    return this;
  }

  /**
   * customer would be redirected to this url based on the decision of the transaction
   * @return failureUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILURE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFailureUrl() {
    return failureUrl;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureUrl(String failureUrl) {
    this.failureUrl = failureUrl;
  }

  public CreatePaymentRequestMerchantInformation returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

  /**
   * URL for displaying payment results to the consumer (notifications) after the transaction is processed. Usually this URL belongs to merchant and its behavior is defined by merchant 
   * @return returnUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnUrl() {
    return returnUrl;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }

  public CreatePaymentRequestMerchantInformation partnerIdCode(String partnerIdCode) {
    
    this.partnerIdCode = partnerIdCode;
    return this;
  }

  /**
   * #### Visa Platform Connect This field may be used for transactions on accounts issued under co-branding agreements when one of the co-branding partners. 
   * @return partnerIdCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER_ID_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPartnerIdCode() {
    return partnerIdCode;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_ID_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartnerIdCode(String partnerIdCode) {
    this.partnerIdCode = partnerIdCode;
  }

  public CreatePaymentRequestMerchantInformation serviceLocation(CreatePaymentRequestMerchantInformationServiceLocation serviceLocation) {
    
    this.serviceLocation = serviceLocation;
    return this;
  }

  /**
   * Get serviceLocation
   * @return serviceLocation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestMerchantInformationServiceLocation getServiceLocation() {
    return serviceLocation;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceLocation(CreatePaymentRequestMerchantInformationServiceLocation serviceLocation) {
    this.serviceLocation = serviceLocation;
  }

  public CreatePaymentRequestMerchantInformation noteToBuyer(String noteToBuyer) {
    
    this.noteToBuyer = noteToBuyer;
    return this;
  }

  /**
   * Free-form text field. 
   * @return noteToBuyer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTE_TO_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNoteToBuyer() {
    return noteToBuyer;
  }


  @JsonProperty(JSON_PROPERTY_NOTE_TO_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoteToBuyer(String noteToBuyer) {
    this.noteToBuyer = noteToBuyer;
  }

  public CreatePaymentRequestMerchantInformation merchantName(String merchantName) {
    
    this.merchantName = merchantName;
    return this;
  }

  /**
   * Use this field only if you are requesting payment with Payer Authentication serice together.  Your company&#39;s name as you want it to appear to the customer in the issuing bank&#39;s authentication form. This value overrides the value specified by your merchant bank. 
   * @return merchantName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantName() {
    return merchantName;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestMerchantInformation createPaymentRequestMerchantInformation = (CreatePaymentRequestMerchantInformation) o;
    return Objects.equals(this.merchantDescriptor, createPaymentRequestMerchantInformation.merchantDescriptor) &&
        Objects.equals(this.domainName, createPaymentRequestMerchantInformation.domainName) &&
        Objects.equals(this.salesOrganizationId, createPaymentRequestMerchantInformation.salesOrganizationId) &&
        Objects.equals(this.categoryCode, createPaymentRequestMerchantInformation.categoryCode) &&
        Objects.equals(this.categoryCodeDomestic, createPaymentRequestMerchantInformation.categoryCodeDomestic) &&
        Objects.equals(this.taxId, createPaymentRequestMerchantInformation.taxId) &&
        Objects.equals(this.vatRegistrationNumber, createPaymentRequestMerchantInformation.vatRegistrationNumber) &&
        Objects.equals(this.cardAcceptorReferenceNumber, createPaymentRequestMerchantInformation.cardAcceptorReferenceNumber) &&
        Objects.equals(this.transactionLocalDateTime, createPaymentRequestMerchantInformation.transactionLocalDateTime) &&
        Objects.equals(this.serviceFeeDescriptor, createPaymentRequestMerchantInformation.serviceFeeDescriptor) &&
        Objects.equals(this.cancelUrl, createPaymentRequestMerchantInformation.cancelUrl) &&
        Objects.equals(this.successUrl, createPaymentRequestMerchantInformation.successUrl) &&
        Objects.equals(this.failureUrl, createPaymentRequestMerchantInformation.failureUrl) &&
        Objects.equals(this.returnUrl, createPaymentRequestMerchantInformation.returnUrl) &&
        Objects.equals(this.partnerIdCode, createPaymentRequestMerchantInformation.partnerIdCode) &&
        Objects.equals(this.serviceLocation, createPaymentRequestMerchantInformation.serviceLocation) &&
        Objects.equals(this.noteToBuyer, createPaymentRequestMerchantInformation.noteToBuyer) &&
        Objects.equals(this.merchantName, createPaymentRequestMerchantInformation.merchantName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantDescriptor, domainName, salesOrganizationId, categoryCode, categoryCodeDomestic, taxId, vatRegistrationNumber, cardAcceptorReferenceNumber, transactionLocalDateTime, serviceFeeDescriptor, cancelUrl, successUrl, failureUrl, returnUrl, partnerIdCode, serviceLocation, noteToBuyer, merchantName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestMerchantInformation {\n");
    sb.append("    merchantDescriptor: ").append(toIndentedString(merchantDescriptor)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    salesOrganizationId: ").append(toIndentedString(salesOrganizationId)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    categoryCodeDomestic: ").append(toIndentedString(categoryCodeDomestic)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    vatRegistrationNumber: ").append(toIndentedString(vatRegistrationNumber)).append("\n");
    sb.append("    cardAcceptorReferenceNumber: ").append(toIndentedString(cardAcceptorReferenceNumber)).append("\n");
    sb.append("    transactionLocalDateTime: ").append(toIndentedString(transactionLocalDateTime)).append("\n");
    sb.append("    serviceFeeDescriptor: ").append(toIndentedString(serviceFeeDescriptor)).append("\n");
    sb.append("    cancelUrl: ").append(toIndentedString(cancelUrl)).append("\n");
    sb.append("    successUrl: ").append(toIndentedString(successUrl)).append("\n");
    sb.append("    failureUrl: ").append(toIndentedString(failureUrl)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    partnerIdCode: ").append(toIndentedString(partnerIdCode)).append("\n");
    sb.append("    serviceLocation: ").append(toIndentedString(serviceLocation)).append("\n");
    sb.append("    noteToBuyer: ").append(toIndentedString(noteToBuyer)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

