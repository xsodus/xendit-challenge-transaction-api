/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestMerchantInformationMerchantDescriptor
 */
@JsonPropertyOrder({
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_NAME,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_ALTERNATE_NAME,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_CONTACT,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_ADDRESS1,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_LOCALITY,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_COUNTRY,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_POSTAL_CODE,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_ADMINISTRATIVE_AREA,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_PHONE,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_URL,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_COUNTRY_OF_ORIGIN,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_STORE_ID,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_STORE_NAME,
  CreatePaymentRequestMerchantInformationMerchantDescriptor.JSON_PROPERTY_CUSTOMER_SERVICE_PHONE_NUMBER
})
@JsonTypeName("createPayment_request_merchantInformation_merchantDescriptor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestMerchantInformationMerchantDescriptor {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ALTERNATE_NAME = "alternateName";
  private String alternateName;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private String contact;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  private String address1;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA = "administrativeArea";
  private String administrativeArea;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_COUNTRY_OF_ORIGIN = "countryOfOrigin";
  private String countryOfOrigin;

  public static final String JSON_PROPERTY_STORE_ID = "storeId";
  private String storeId;

  public static final String JSON_PROPERTY_STORE_NAME = "storeName";
  private String storeName;

  public static final String JSON_PROPERTY_CUSTOMER_SERVICE_PHONE_NUMBER = "customerServicePhoneNumber";
  private String customerServicePhoneNumber;

  public CreatePaymentRequestMerchantInformationMerchantDescriptor() {
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Your merchant name.  **Note** For Paymentech processor using Cybersource Payouts, the maximum data length is 22.  #### PIN debit Your business name. This name is displayed on the cardholder&#39;s statement. When you include more than one consecutive space, extra spaces are removed.  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters.  Optional field for PIN debit credit or PIN debit purchase requests.  #### Airline processing Your merchant name. This name is displayed on the cardholder&#39;s statement. When you include more than one consecutive space, extra spaces are removed.  **Note** Some airline fee programs may require the original ticket number (ticket identifier) or the ancillary service description in positions 13 through 23 of this field.  **Important** This value must consist of English characters.  Required for captures and credits. 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor alternateName(String alternateName) {
    
    this.alternateName = alternateName;
    return this;
  }

  /**
   * An alternate name for the merchant. 
   * @return alternateName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternateName() {
    return alternateName;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternateName(String alternateName) {
    this.alternateName = alternateName;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor contact(String contact) {
    
    this.contact = contact;
    return this;
  }

  /**
   * Contact information for the merchant.  **Note** These are the maximum data lengths for the following payment processors: - FDCCompass (13) - Paymentech (13) 
   * @return contact
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(String contact) {
    this.contact = contact;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

  /**
   * First line of merchant&#39;s address. 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor locality(String locality) {
    
    this.locality = locality;
    return this;
  }

  /**
   * Merchant&#39;s City.  #### PIN debit City for your business location. This value might be displayed on the cardholder&#39;s statement.  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters.  Optional field for PIN debit credit or PIN debit purchase requests. 
   * @return locality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor country(String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Merchant&#39;s country.  #### PIN debit Country code for your business location. Use the [ISO Standard Country Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf) This value might be displayed on the cardholder&#39;s statement.  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters. **Note** If your business is located in the U.S. or Canada and you include this field in a request, you must also include &#x60;merchantInformation.merchantDescriptor.administrativeArea&#x60;.  Optional field for PIN debit credit or PIN debit purchase. 
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Merchant&#39;s postal code.  #### PIN debit Postal code for your business location. This value might be displayed on the cardholder&#39;s statement.  If your business is domiciled in the U.S., you can use a 5-digit or 9-digit postal code. A 9-digit postal code must follow this format: [5 digits][dash][4 digits] Example: &#x60;12345-6789&#x60;  If your business is domiciled in Canada, you can use a 6-digit or 9-digit postal code. A 6-digit postal code must follow this format: [alpha][numeric][alpha][space] [numeric][alpha][numeric] Example: &#x60;A1B 2C3&#x60;  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters.  **Note** This field is supported only for businesses located in the U.S. or Canada. **Important** Mastercard requires a postal code for any country that uses postal codes. You can provide the postal code in your account or you can include this field in your request.  Optional field for PIN debit credit or PIN debit purchase. 
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor administrativeArea(String administrativeArea) {
    
    this.administrativeArea = administrativeArea;
    return this;
  }

  /**
   * The state where the merchant is located.  #### PIN debit State code or region code for your business. Use the Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) This value might be displayed on the cardholder&#39;s statement.  When you do not include this value in your PIN debit request, the merchant name from your account is used. **Important** This value must consist of English characters.  **Note** This field is supported only for businesses located in the U.S. or Canada.  Optional field for PIN debit credit or PIN debit purchase. 
   * @return administrativeArea
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdministrativeArea() {
    return administrativeArea;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor phone(String phone) {
    
    this.phone = phone;
    return this;
  }

  /**
   * Merchant phone as contact information for CNP transactions 
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor url(String url) {
    
    this.url = url;
    return this;
  }

  /**
   * Address of company&#39;s website provided by merchant 
   * @return url
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor countryOfOrigin(String countryOfOrigin) {
    
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * #### Visa Platform Connect This field will indicate merchant country of origin 
   * @return countryOfOrigin
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor storeId(String storeId) {
    
    this.storeId = storeId;
    return this;
  }

  /**
   * The identifier of the store. 
   * @return storeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStoreId() {
    return storeId;
  }


  @JsonProperty(JSON_PROPERTY_STORE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor storeName(String storeName) {
    
    this.storeName = storeName;
    return this;
  }

  /**
   * The name of the store. 
   * @return storeName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStoreName() {
    return storeName;
  }


  @JsonProperty(JSON_PROPERTY_STORE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoreName(String storeName) {
    this.storeName = storeName;
  }

  public CreatePaymentRequestMerchantInformationMerchantDescriptor customerServicePhoneNumber(String customerServicePhoneNumber) {
    
    this.customerServicePhoneNumber = customerServicePhoneNumber;
    return this;
  }

  /**
   * #### Visa Platform Connect Indicates customer service phone number of Merchant. 
   * @return customerServicePhoneNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_SERVICE_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerServicePhoneNumber() {
    return customerServicePhoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_SERVICE_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerServicePhoneNumber(String customerServicePhoneNumber) {
    this.customerServicePhoneNumber = customerServicePhoneNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestMerchantInformationMerchantDescriptor createPaymentRequestMerchantInformationMerchantDescriptor = (CreatePaymentRequestMerchantInformationMerchantDescriptor) o;
    return Objects.equals(this.name, createPaymentRequestMerchantInformationMerchantDescriptor.name) &&
        Objects.equals(this.alternateName, createPaymentRequestMerchantInformationMerchantDescriptor.alternateName) &&
        Objects.equals(this.contact, createPaymentRequestMerchantInformationMerchantDescriptor.contact) &&
        Objects.equals(this.address1, createPaymentRequestMerchantInformationMerchantDescriptor.address1) &&
        Objects.equals(this.locality, createPaymentRequestMerchantInformationMerchantDescriptor.locality) &&
        Objects.equals(this.country, createPaymentRequestMerchantInformationMerchantDescriptor.country) &&
        Objects.equals(this.postalCode, createPaymentRequestMerchantInformationMerchantDescriptor.postalCode) &&
        Objects.equals(this.administrativeArea, createPaymentRequestMerchantInformationMerchantDescriptor.administrativeArea) &&
        Objects.equals(this.phone, createPaymentRequestMerchantInformationMerchantDescriptor.phone) &&
        Objects.equals(this.url, createPaymentRequestMerchantInformationMerchantDescriptor.url) &&
        Objects.equals(this.countryOfOrigin, createPaymentRequestMerchantInformationMerchantDescriptor.countryOfOrigin) &&
        Objects.equals(this.storeId, createPaymentRequestMerchantInformationMerchantDescriptor.storeId) &&
        Objects.equals(this.storeName, createPaymentRequestMerchantInformationMerchantDescriptor.storeName) &&
        Objects.equals(this.customerServicePhoneNumber, createPaymentRequestMerchantInformationMerchantDescriptor.customerServicePhoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, alternateName, contact, address1, locality, country, postalCode, administrativeArea, phone, url, countryOfOrigin, storeId, storeName, customerServicePhoneNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestMerchantInformationMerchantDescriptor {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    alternateName: ").append(toIndentedString(alternateName)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    storeName: ").append(toIndentedString(storeName)).append("\n");
    sb.append("    customerServicePhoneNumber: ").append(toIndentedString(customerServicePhoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

