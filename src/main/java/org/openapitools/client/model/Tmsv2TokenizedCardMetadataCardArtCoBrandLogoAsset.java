/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAssetLinks;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset
 */
@JsonPropertyOrder({
  Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset.JSON_PROPERTY_ID,
  Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset.JSON_PROPERTY_LINKS
})
@JsonTypeName("tmsv2TokenizedCard_metadata_cardArt_coBrandLogoAsset")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAssetLinks links;

  public Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
    this();
    this.id = id;
  }

  /**
   * The Id of the co-brand logo asset. 
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }



  public Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset links(Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAssetLinks links) {
    
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAssetLinks getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAssetLinks links) {
    this.links = links;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset = (Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset) o;
    return Objects.equals(this.id, tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset.id) &&
        Objects.equals(this.links, tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

