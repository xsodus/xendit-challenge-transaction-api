/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.TssV2TransactionsGet200ResponsePaymentInformationBankAccount;
import org.openapitools.client.model.TssV2TransactionsGet200ResponsePaymentInformationBankMandate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TssV2TransactionsGet200ResponsePaymentInformationBank
 */
@JsonPropertyOrder({
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_ROUTING_NUMBER,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_BRANCH_CODE,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_SWIFT_CODE,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_BANK_CODE,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_IBAN,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_ACCOUNT,
  TssV2TransactionsGet200ResponsePaymentInformationBank.JSON_PROPERTY_MANDATE
})
@JsonTypeName("tssV2TransactionsGet200Response_paymentInformation_bank")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TssV2TransactionsGet200ResponsePaymentInformationBank {
  public static final String JSON_PROPERTY_ROUTING_NUMBER = "routingNumber";
  private String routingNumber;

  public static final String JSON_PROPERTY_BRANCH_CODE = "branchCode";
  private String branchCode;

  public static final String JSON_PROPERTY_SWIFT_CODE = "swiftCode";
  private String swiftCode;

  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private String bankCode;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private TssV2TransactionsGet200ResponsePaymentInformationBankAccount account;

  public static final String JSON_PROPERTY_MANDATE = "mandate";
  private TssV2TransactionsGet200ResponsePaymentInformationBankMandate mandate;

  public TssV2TransactionsGet200ResponsePaymentInformationBank() {
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank routingNumber(String routingNumber) {
    
    this.routingNumber = routingNumber;
    return this;
  }

  /**
   * Bank routing number. This is also called the transit number. 
   * @return routingNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRoutingNumber() {
    return routingNumber;
  }


  @JsonProperty(JSON_PROPERTY_ROUTING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoutingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank branchCode(String branchCode) {
    
    this.branchCode = branchCode;
    return this;
  }

  /**
   * Code used to identify the branch of the customer&#39;s bank. Required for some countries if you do not or are not allowed to provide the IBAN. Use this field only when scoring a direct debit transaction. 
   * @return branchCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBranchCode() {
    return branchCode;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchCode(String branchCode) {
    this.branchCode = branchCode;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank swiftCode(String swiftCode) {
    
    this.swiftCode = swiftCode;
    return this;
  }

  /**
   * Bank&#39;s SWIFT code. You can use this field only when scoring a direct debit transaction. Required only for crossborder transactions. 
   * @return swiftCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWIFT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSwiftCode() {
    return swiftCode;
  }


  @JsonProperty(JSON_PROPERTY_SWIFT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank bankCode(String bankCode) {
    
    this.bankCode = bankCode;
    return this;
  }

  /**
   * Country-specific code used to identify the customer&#39;s bank. Required for some countries if you do not or are not allowed to provide the IBAN instead. You can use this field only when scoring a direct debit transaction. 
   * @return bankCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankCode() {
    return bankCode;
  }


  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank iban(String iban) {
    
    this.iban = iban;
    return this;
  }

  /**
   * International Bank Account Number (IBAN) for the bank account. For some countries you can provide this number instead of the traditional bank account information. You can use this field only when scoring a direct debit transaction. 
   * @return iban
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank account(TssV2TransactionsGet200ResponsePaymentInformationBankAccount account) {
    
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TssV2TransactionsGet200ResponsePaymentInformationBankAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(TssV2TransactionsGet200ResponsePaymentInformationBankAccount account) {
    this.account = account;
  }

  public TssV2TransactionsGet200ResponsePaymentInformationBank mandate(TssV2TransactionsGet200ResponsePaymentInformationBankMandate mandate) {
    
    this.mandate = mandate;
    return this;
  }

  /**
   * Get mandate
   * @return mandate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TssV2TransactionsGet200ResponsePaymentInformationBankMandate getMandate() {
    return mandate;
  }


  @JsonProperty(JSON_PROPERTY_MANDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandate(TssV2TransactionsGet200ResponsePaymentInformationBankMandate mandate) {
    this.mandate = mandate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2TransactionsGet200ResponsePaymentInformationBank tssV2TransactionsGet200ResponsePaymentInformationBank = (TssV2TransactionsGet200ResponsePaymentInformationBank) o;
    return Objects.equals(this.routingNumber, tssV2TransactionsGet200ResponsePaymentInformationBank.routingNumber) &&
        Objects.equals(this.branchCode, tssV2TransactionsGet200ResponsePaymentInformationBank.branchCode) &&
        Objects.equals(this.swiftCode, tssV2TransactionsGet200ResponsePaymentInformationBank.swiftCode) &&
        Objects.equals(this.bankCode, tssV2TransactionsGet200ResponsePaymentInformationBank.bankCode) &&
        Objects.equals(this.iban, tssV2TransactionsGet200ResponsePaymentInformationBank.iban) &&
        Objects.equals(this.account, tssV2TransactionsGet200ResponsePaymentInformationBank.account) &&
        Objects.equals(this.mandate, tssV2TransactionsGet200ResponsePaymentInformationBank.mandate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(routingNumber, branchCode, swiftCode, bankCode, iban, account, mandate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2TransactionsGet200ResponsePaymentInformationBank {\n");
    sb.append("    routingNumber: ").append(toIndentedString(routingNumber)).append("\n");
    sb.append("    branchCode: ").append(toIndentedString(branchCode)).append("\n");
    sb.append("    swiftCode: ").append(toIndentedString(swiftCode)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    mandate: ").append(toIndentedString(mandate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

