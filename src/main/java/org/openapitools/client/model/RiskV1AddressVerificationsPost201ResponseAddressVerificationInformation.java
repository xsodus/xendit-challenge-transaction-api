/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationBarCode;
import org.openapitools.client.model.RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationStandardAddress;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation
 */
@JsonPropertyOrder({
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_ADDRESS_TYPE,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_BAR_CODE,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_APPLICABLE_REGION,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_ERROR_CODE,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_STATUS_CODE,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_CARE_OF,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_MATCH_SCORE,
  RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation.JSON_PROPERTY_STANDARD_ADDRESS
})
@JsonTypeName("riskV1AddressVerificationsPost201Response_addressVerificationInformation")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation {
  public static final String JSON_PROPERTY_ADDRESS_TYPE = "addressType";
  private String addressType;

  public static final String JSON_PROPERTY_BAR_CODE = "barCode";
  private RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationBarCode barCode;

  public static final String JSON_PROPERTY_APPLICABLE_REGION = "applicableRegion";
  private String applicableRegion;

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  private String errorCode;

  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  private String statusCode;

  public static final String JSON_PROPERTY_CARE_OF = "careOf";
  private String careOf;

  public static final String JSON_PROPERTY_MATCH_SCORE = "matchScore";
  private Integer matchScore;

  public static final String JSON_PROPERTY_STANDARD_ADDRESS = "standardAddress";
  private RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationStandardAddress standardAddress;

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation() {
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation addressType(String addressType) {
    
    this.addressType = addressType;
    return this;
  }

  /**
   * Contains the record type of the postal code with which the address was matched.  #### U.S. Addresses Depending on the quantity and quality of the address information provided, this field contains one or two characters:  - One character: sufficient correct information was provided to result in accurate matching. - Two characters: standardization would provide a better address if more or better input address information were available. The second character is D (default).  Blank fields are unassigned. When an address cannot be standardized, how the input data was parsed determines the address type. In this case, standardization may indicate a street, rural route, highway contract, general delivery, or PO box.   #### All Other Countries This field contains one of the following values: - P: Post. - S: Street. - x: Unknown. 
   * @return addressType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressType() {
    return addressType;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressType(String addressType) {
    this.addressType = addressType;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation barCode(RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationBarCode barCode) {
    
    this.barCode = barCode;
    return this;
  }

  /**
   * Get barCode
   * @return barCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BAR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationBarCode getBarCode() {
    return barCode;
  }


  @JsonProperty(JSON_PROPERTY_BAR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBarCode(RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationBarCode barCode) {
    this.barCode = barCode;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation applicableRegion(String applicableRegion) {
    
    this.applicableRegion = applicableRegion;
    return this;
  }

  /**
   * Value can be - Canada - US - International The values of errorCode and statusCode mean different things depending on the applicable region. Refer to the guide for more info. 
   * @return applicableRegion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICABLE_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicableRegion() {
    return applicableRegion;
  }


  @JsonProperty(JSON_PROPERTY_APPLICABLE_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicableRegion(String applicableRegion) {
    this.applicableRegion = applicableRegion;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation errorCode(String errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Four-character error code returned for Canadian, US and international addresses. For possible values, see Verification Services guide. The meaning of the errorCode depends on value of applicableRegion. 
   * @return errorCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation statusCode(String statusCode) {
    
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Four-to-ten character status code returned for Canadian, US and international addresses. For possible values, see Verification Services guide. The meaning of the errorCode depends on value of applicableRegion. 
   * @return statusCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatusCode() {
    return statusCode;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusCode(String statusCode) {
    this.statusCode = statusCode;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation careOf(String careOf) {
    
    this.careOf = careOf;
    return this;
  }

  /**
   * Care of data dropped from the standard address.
   * @return careOf
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARE_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCareOf() {
    return careOf;
  }


  @JsonProperty(JSON_PROPERTY_CARE_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCareOf(String careOf) {
    this.careOf = careOf;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation matchScore(Integer matchScore) {
    
    this.matchScore = matchScore;
    return this;
  }

  /**
   * Indicates the probable correctness of the address match. Returned for U.S. and Canadian addresses. Returns a value from 0-9, where 0 is most likely to be correct and 9 is least likely to be correct, or -1 if there is no address match. 
   * @return matchScore
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCH_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMatchScore() {
    return matchScore;
  }


  @JsonProperty(JSON_PROPERTY_MATCH_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchScore(Integer matchScore) {
    this.matchScore = matchScore;
  }

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation standardAddress(RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationStandardAddress standardAddress) {
    
    this.standardAddress = standardAddress;
    return this;
  }

  /**
   * Get standardAddress
   * @return standardAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STANDARD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationStandardAddress getStandardAddress() {
    return standardAddress;
  }


  @JsonProperty(JSON_PROPERTY_STANDARD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandardAddress(RiskV1AddressVerificationsPost201ResponseAddressVerificationInformationStandardAddress standardAddress) {
    this.standardAddress = standardAddress;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation riskV1AddressVerificationsPost201ResponseAddressVerificationInformation = (RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation) o;
    return Objects.equals(this.addressType, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.addressType) &&
        Objects.equals(this.barCode, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.barCode) &&
        Objects.equals(this.applicableRegion, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.applicableRegion) &&
        Objects.equals(this.errorCode, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.errorCode) &&
        Objects.equals(this.statusCode, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.statusCode) &&
        Objects.equals(this.careOf, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.careOf) &&
        Objects.equals(this.matchScore, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.matchScore) &&
        Objects.equals(this.standardAddress, riskV1AddressVerificationsPost201ResponseAddressVerificationInformation.standardAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressType, barCode, applicableRegion, errorCode, statusCode, careOf, matchScore, standardAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskV1AddressVerificationsPost201ResponseAddressVerificationInformation {\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    barCode: ").append(toIndentedString(barCode)).append("\n");
    sb.append("    applicableRegion: ").append(toIndentedString(applicableRegion)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    careOf: ").append(toIndentedString(careOf)).append("\n");
    sb.append("    matchScore: ").append(toIndentedString(matchScore)).append("\n");
    sb.append("    standardAddress: ").append(toIndentedString(standardAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

