/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion
 */
@JsonPropertyOrder({
  CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion.JSON_PROPERTY_INDICATOR,
  CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion.JSON_PROPERTY_RECONCILIATION_ID,
  CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion.JSON_PROPERTY_ID
})
@JsonTypeName("createPayment_request_orderInformation_amountDetails_currencyConversion")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion {
  public static final String JSON_PROPERTY_INDICATOR = "indicator";
  private String indicator;

  public static final String JSON_PROPERTY_RECONCILIATION_ID = "reconciliationId";
  private String reconciliationId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion() {
  }

  public CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion indicator(String indicator) {
    
    this.indicator = indicator;
    return this;
  }

  /**
   * Flag indicating that DCC Lookup has been performed before this transaction. Set this field to 1 when cardholders opts to use DCC on the transaction. 
   * @return indicator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIndicator() {
    return indicator;
  }


  @JsonProperty(JSON_PROPERTY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicator(String indicator) {
    this.indicator = indicator;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion reconciliationId(String reconciliationId) {
    
    this.reconciliationId = reconciliationId;
    return this;
  }

  /**
   * Unique identifier generated by the DCC provider. 
   * @return reconciliationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECONCILIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReconciliationId() {
    return reconciliationId;
  }


  @JsonProperty(JSON_PROPERTY_RECONCILIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReconciliationId(String reconciliationId) {
    this.reconciliationId = reconciliationId;
  }

  public CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Value of the Cybersource request ID returned in a DCC Lookup transaction. 
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion createPaymentRequestOrderInformationAmountDetailsCurrencyConversion = (CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion) o;
    return Objects.equals(this.indicator, createPaymentRequestOrderInformationAmountDetailsCurrencyConversion.indicator) &&
        Objects.equals(this.reconciliationId, createPaymentRequestOrderInformationAmountDetailsCurrencyConversion.reconciliationId) &&
        Objects.equals(this.id, createPaymentRequestOrderInformationAmountDetailsCurrencyConversion.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indicator, reconciliationId, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestOrderInformationAmountDetailsCurrencyConversion {\n");
    sb.append("    indicator: ").append(toIndentedString(indicator)).append("\n");
    sb.append("    reconciliationId: ").append(toIndentedString(reconciliationId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

