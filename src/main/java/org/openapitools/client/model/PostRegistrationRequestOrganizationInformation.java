/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PostRegistrationRequestOrganizationInformationBusinessInformation;
import org.openapitools.client.model.PostRegistrationRequestOrganizationInformationKYC;
import org.openapitools.client.model.PostRegistrationRequestOrganizationInformationOwnersInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostRegistrationRequestOrganizationInformation
 */
@JsonPropertyOrder({
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_ORGANIZATION_ID,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_PARENT_ORGANIZATION_ID,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_CHILD_ORGANIZATIONS,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_TYPE,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_STATUS,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_CONFIGURABLE,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_BUSINESS_INFORMATION,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_K_Y_C,
  PostRegistrationRequestOrganizationInformation.JSON_PROPERTY_OWNERS
})
@JsonTypeName("postRegistration_request_organizationInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PostRegistrationRequestOrganizationInformation {
  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organizationId";
  private String organizationId;

  public static final String JSON_PROPERTY_PARENT_ORGANIZATION_ID = "parentOrganizationId";
  private String parentOrganizationId;

  public static final String JSON_PROPERTY_CHILD_ORGANIZATIONS = "childOrganizations";
  private List<String> childOrganizations = new ArrayList<>();

  /**
   * Determines the type of organization in the hirarchy that this registration will use to onboard this Organization Possible Values:   - &#39;TRANSACTING&#39;   - &#39;STRUCTURAL&#39;   - &#39;MERCHANT&#39; 
   */
  public enum TypeEnum {
    TRANSACTING("TRANSACTING"),
    
    STRUCTURAL("STRUCTURAL"),
    
    MERCHANT("MERCHANT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Determines the status that the organization will be after being onboarded Possible Values:             - &#39;LIVE&#39;             - &#39;TEST&#39;             - &#39;DRAFT&#39; 
   */
  public enum StatusEnum {
    LIVE("LIVE"),
    
    TEST("TEST"),
    
    DRAFT("DRAFT");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_CONFIGURABLE = "configurable";
  private Boolean configurable = false;

  public static final String JSON_PROPERTY_BUSINESS_INFORMATION = "businessInformation";
  private PostRegistrationRequestOrganizationInformationBusinessInformation businessInformation;

  public static final String JSON_PROPERTY_K_Y_C = "KYC";
  private PostRegistrationRequestOrganizationInformationKYC KYC;

  public static final String JSON_PROPERTY_OWNERS = "owners";
  private List<PostRegistrationRequestOrganizationInformationOwnersInner> owners = new ArrayList<>();

  public PostRegistrationRequestOrganizationInformation() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public PostRegistrationRequestOrganizationInformation(
    @JsonProperty(JSON_PROPERTY_CHILD_ORGANIZATIONS) List<String> childOrganizations
  ) {
    this();
    this.childOrganizations = childOrganizations;
  }

  public PostRegistrationRequestOrganizationInformation organizationId(String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public PostRegistrationRequestOrganizationInformation parentOrganizationId(String parentOrganizationId) {
    
    this.parentOrganizationId = parentOrganizationId;
    return this;
  }

  /**
   * This field is required for Organization Types: MERCHANT, TRANSACTING 
   * @return parentOrganizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentOrganizationId() {
    return parentOrganizationId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentOrganizationId(String parentOrganizationId) {
    this.parentOrganizationId = parentOrganizationId;
  }

  /**
   * Get childOrganizations
   * @return childOrganizations
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILD_ORGANIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getChildOrganizations() {
    return childOrganizations;
  }



  public PostRegistrationRequestOrganizationInformation type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * Determines the type of organization in the hirarchy that this registration will use to onboard this Organization Possible Values:   - &#39;TRANSACTING&#39;   - &#39;STRUCTURAL&#39;   - &#39;MERCHANT&#39; 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PostRegistrationRequestOrganizationInformation status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Determines the status that the organization will be after being onboarded Possible Values:             - &#39;LIVE&#39;             - &#39;TEST&#39;             - &#39;DRAFT&#39; 
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PostRegistrationRequestOrganizationInformation configurable(Boolean configurable) {
    
    this.configurable = configurable;
    return this;
  }

  /**
   * This denotes the one organization, with exception to the TRANSACTING types, that is allowed to be used for configuration purposes against products.  Eventually this field will be deprecated and all organizations will be allowed for product configuration.
   * @return configurable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIGURABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConfigurable() {
    return configurable;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigurable(Boolean configurable) {
    this.configurable = configurable;
  }

  public PostRegistrationRequestOrganizationInformation businessInformation(PostRegistrationRequestOrganizationInformationBusinessInformation businessInformation) {
    
    this.businessInformation = businessInformation;
    return this;
  }

  /**
   * Get businessInformation
   * @return businessInformation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BUSINESS_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PostRegistrationRequestOrganizationInformationBusinessInformation getBusinessInformation() {
    return businessInformation;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBusinessInformation(PostRegistrationRequestOrganizationInformationBusinessInformation businessInformation) {
    this.businessInformation = businessInformation;
  }

  public PostRegistrationRequestOrganizationInformation KYC(PostRegistrationRequestOrganizationInformationKYC KYC) {
    
    this.KYC = KYC;
    return this;
  }

  /**
   * Get KYC
   * @return KYC
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_K_Y_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRegistrationRequestOrganizationInformationKYC getKYC() {
    return KYC;
  }


  @JsonProperty(JSON_PROPERTY_K_Y_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKYC(PostRegistrationRequestOrganizationInformationKYC KYC) {
    this.KYC = KYC;
  }

  public PostRegistrationRequestOrganizationInformation owners(List<PostRegistrationRequestOrganizationInformationOwnersInner> owners) {
    
    this.owners = owners;
    return this;
  }

  public PostRegistrationRequestOrganizationInformation addOwnersItem(PostRegistrationRequestOrganizationInformationOwnersInner ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

  /**
   * Get owners
   * @return owners
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostRegistrationRequestOrganizationInformationOwnersInner> getOwners() {
    return owners;
  }


  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwners(List<PostRegistrationRequestOrganizationInformationOwnersInner> owners) {
    this.owners = owners;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRegistrationRequestOrganizationInformation postRegistrationRequestOrganizationInformation = (PostRegistrationRequestOrganizationInformation) o;
    return Objects.equals(this.organizationId, postRegistrationRequestOrganizationInformation.organizationId) &&
        Objects.equals(this.parentOrganizationId, postRegistrationRequestOrganizationInformation.parentOrganizationId) &&
        Objects.equals(this.childOrganizations, postRegistrationRequestOrganizationInformation.childOrganizations) &&
        Objects.equals(this.type, postRegistrationRequestOrganizationInformation.type) &&
        Objects.equals(this.status, postRegistrationRequestOrganizationInformation.status) &&
        Objects.equals(this.configurable, postRegistrationRequestOrganizationInformation.configurable) &&
        Objects.equals(this.businessInformation, postRegistrationRequestOrganizationInformation.businessInformation) &&
        Objects.equals(this.KYC, postRegistrationRequestOrganizationInformation.KYC) &&
        Objects.equals(this.owners, postRegistrationRequestOrganizationInformation.owners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationId, parentOrganizationId, childOrganizations, type, status, configurable, businessInformation, KYC, owners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRegistrationRequestOrganizationInformation {\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    parentOrganizationId: ").append(toIndentedString(parentOrganizationId)).append("\n");
    sb.append("    childOrganizations: ").append(toIndentedString(childOrganizations)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    configurable: ").append(toIndentedString(configurable)).append("\n");
    sb.append("    businessInformation: ").append(toIndentedString(businessInformation)).append("\n");
    sb.append("    KYC: ").append(toIndentedString(KYC)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

