/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtBackgroundAsset;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtBrandLogoAsset;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtCombinedAsset;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtIconAsset;
import org.openapitools.client.model.Tmsv2TokenizedCardMetadataCardArtIssuerLogoAsset;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Tmsv2TokenizedCardMetadataCardArt
 */
@JsonPropertyOrder({
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_COMBINED_ASSET,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_BRAND_LOGO_ASSET,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_CO_BRAND_LOGO_ASSET,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_ISSUER_LOGO_ASSET,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_ICON_ASSET,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_FOREGROUND_COLOR,
  Tmsv2TokenizedCardMetadataCardArt.JSON_PROPERTY_BACKGROUND_ASSET
})
@JsonTypeName("tmsv2TokenizedCard_metadata_cardArt")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class Tmsv2TokenizedCardMetadataCardArt {
  public static final String JSON_PROPERTY_COMBINED_ASSET = "combinedAsset";
  private Tmsv2TokenizedCardMetadataCardArtCombinedAsset combinedAsset;

  public static final String JSON_PROPERTY_BRAND_LOGO_ASSET = "brandLogoAsset";
  private Tmsv2TokenizedCardMetadataCardArtBrandLogoAsset brandLogoAsset;

  public static final String JSON_PROPERTY_CO_BRAND_LOGO_ASSET = "coBrandLogoAsset";
  private Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset coBrandLogoAsset;

  public static final String JSON_PROPERTY_ISSUER_LOGO_ASSET = "issuerLogoAsset";
  private Tmsv2TokenizedCardMetadataCardArtIssuerLogoAsset issuerLogoAsset;

  public static final String JSON_PROPERTY_ICON_ASSET = "iconAsset";
  private Tmsv2TokenizedCardMetadataCardArtIconAsset iconAsset;

  public static final String JSON_PROPERTY_FOREGROUND_COLOR = "foregroundColor";
  private String foregroundColor;

  public static final String JSON_PROPERTY_BACKGROUND_ASSET = "backgroundAsset";
  private Tmsv2TokenizedCardMetadataCardArtBackgroundAsset backgroundAsset;

  public Tmsv2TokenizedCardMetadataCardArt() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public Tmsv2TokenizedCardMetadataCardArt(
    @JsonProperty(JSON_PROPERTY_FOREGROUND_COLOR) String foregroundColor
  ) {
    this();
    this.foregroundColor = foregroundColor;
  }

  public Tmsv2TokenizedCardMetadataCardArt combinedAsset(Tmsv2TokenizedCardMetadataCardArtCombinedAsset combinedAsset) {
    
    this.combinedAsset = combinedAsset;
    return this;
  }

  /**
   * Get combinedAsset
   * @return combinedAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMBINED_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtCombinedAsset getCombinedAsset() {
    return combinedAsset;
  }


  @JsonProperty(JSON_PROPERTY_COMBINED_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCombinedAsset(Tmsv2TokenizedCardMetadataCardArtCombinedAsset combinedAsset) {
    this.combinedAsset = combinedAsset;
  }

  public Tmsv2TokenizedCardMetadataCardArt brandLogoAsset(Tmsv2TokenizedCardMetadataCardArtBrandLogoAsset brandLogoAsset) {
    
    this.brandLogoAsset = brandLogoAsset;
    return this;
  }

  /**
   * Get brandLogoAsset
   * @return brandLogoAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRAND_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtBrandLogoAsset getBrandLogoAsset() {
    return brandLogoAsset;
  }


  @JsonProperty(JSON_PROPERTY_BRAND_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrandLogoAsset(Tmsv2TokenizedCardMetadataCardArtBrandLogoAsset brandLogoAsset) {
    this.brandLogoAsset = brandLogoAsset;
  }

  public Tmsv2TokenizedCardMetadataCardArt coBrandLogoAsset(Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset coBrandLogoAsset) {
    
    this.coBrandLogoAsset = coBrandLogoAsset;
    return this;
  }

  /**
   * Get coBrandLogoAsset
   * @return coBrandLogoAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CO_BRAND_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset getCoBrandLogoAsset() {
    return coBrandLogoAsset;
  }


  @JsonProperty(JSON_PROPERTY_CO_BRAND_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoBrandLogoAsset(Tmsv2TokenizedCardMetadataCardArtCoBrandLogoAsset coBrandLogoAsset) {
    this.coBrandLogoAsset = coBrandLogoAsset;
  }

  public Tmsv2TokenizedCardMetadataCardArt issuerLogoAsset(Tmsv2TokenizedCardMetadataCardArtIssuerLogoAsset issuerLogoAsset) {
    
    this.issuerLogoAsset = issuerLogoAsset;
    return this;
  }

  /**
   * Get issuerLogoAsset
   * @return issuerLogoAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtIssuerLogoAsset getIssuerLogoAsset() {
    return issuerLogoAsset;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_LOGO_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerLogoAsset(Tmsv2TokenizedCardMetadataCardArtIssuerLogoAsset issuerLogoAsset) {
    this.issuerLogoAsset = issuerLogoAsset;
  }

  public Tmsv2TokenizedCardMetadataCardArt iconAsset(Tmsv2TokenizedCardMetadataCardArtIconAsset iconAsset) {
    
    this.iconAsset = iconAsset;
    return this;
  }

  /**
   * Get iconAsset
   * @return iconAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtIconAsset getIconAsset() {
    return iconAsset;
  }


  @JsonProperty(JSON_PROPERTY_ICON_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconAsset(Tmsv2TokenizedCardMetadataCardArtIconAsset iconAsset) {
    this.iconAsset = iconAsset;
  }

  /**
   * The foreground color of the brand logo asset. 
   * @return foregroundColor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForegroundColor() {
    return foregroundColor;
  }



  public Tmsv2TokenizedCardMetadataCardArt backgroundAsset(Tmsv2TokenizedCardMetadataCardArtBackgroundAsset backgroundAsset) {
    
    this.backgroundAsset = backgroundAsset;
    return this;
  }

  /**
   * Get backgroundAsset
   * @return backgroundAsset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKGROUND_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tmsv2TokenizedCardMetadataCardArtBackgroundAsset getBackgroundAsset() {
    return backgroundAsset;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackgroundAsset(Tmsv2TokenizedCardMetadataCardArtBackgroundAsset backgroundAsset) {
    this.backgroundAsset = backgroundAsset;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tmsv2TokenizedCardMetadataCardArt tmsv2TokenizedCardMetadataCardArt = (Tmsv2TokenizedCardMetadataCardArt) o;
    return Objects.equals(this.combinedAsset, tmsv2TokenizedCardMetadataCardArt.combinedAsset) &&
        Objects.equals(this.brandLogoAsset, tmsv2TokenizedCardMetadataCardArt.brandLogoAsset) &&
        Objects.equals(this.coBrandLogoAsset, tmsv2TokenizedCardMetadataCardArt.coBrandLogoAsset) &&
        Objects.equals(this.issuerLogoAsset, tmsv2TokenizedCardMetadataCardArt.issuerLogoAsset) &&
        Objects.equals(this.iconAsset, tmsv2TokenizedCardMetadataCardArt.iconAsset) &&
        Objects.equals(this.foregroundColor, tmsv2TokenizedCardMetadataCardArt.foregroundColor) &&
        Objects.equals(this.backgroundAsset, tmsv2TokenizedCardMetadataCardArt.backgroundAsset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(combinedAsset, brandLogoAsset, coBrandLogoAsset, issuerLogoAsset, iconAsset, foregroundColor, backgroundAsset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tmsv2TokenizedCardMetadataCardArt {\n");
    sb.append("    combinedAsset: ").append(toIndentedString(combinedAsset)).append("\n");
    sb.append("    brandLogoAsset: ").append(toIndentedString(brandLogoAsset)).append("\n");
    sb.append("    coBrandLogoAsset: ").append(toIndentedString(coBrandLogoAsset)).append("\n");
    sb.append("    issuerLogoAsset: ").append(toIndentedString(issuerLogoAsset)).append("\n");
    sb.append("    iconAsset: ").append(toIndentedString(iconAsset)).append("\n");
    sb.append("    foregroundColor: ").append(toIndentedString(foregroundColor)).append("\n");
    sb.append("    backgroundAsset: ").append(toIndentedString(backgroundAsset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

