/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CardProcessingConfigFeaturesCardNotPresentInstallment
 */
@JsonPropertyOrder({
  CardProcessingConfigFeaturesCardNotPresentInstallment.JSON_PROPERTY_ENABLE_INSTALLMENT,
  CardProcessingConfigFeaturesCardNotPresentInstallment.JSON_PROPERTY_INSTALLMENT_PLAN
})
@JsonTypeName("CardProcessingConfig_features_cardNotPresent_installment")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CardProcessingConfigFeaturesCardNotPresentInstallment {
  public static final String JSON_PROPERTY_ENABLE_INSTALLMENT = "enableInstallment";
  private Boolean enableInstallment;

  public static final String JSON_PROPERTY_INSTALLMENT_PLAN = "installmentPlan";
  private String installmentPlan;

  public CardProcessingConfigFeaturesCardNotPresentInstallment() {
  }

  public CardProcessingConfigFeaturesCardNotPresentInstallment enableInstallment(Boolean enableInstallment) {
    
    this.enableInstallment = enableInstallment;
    return this;
  }

  /**
   * This flag is to enable for installment plan programs. Applicable for Fiserv (fiserv), Vero (vero) and American Express Direct (amexdirect) processors.  Validation details (for selected processors)...  &lt;table&gt; &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Processor&lt;/th&gt;&lt;th&gt;Acceptance Type&lt;/th&gt;&lt;th&gt;Required&lt;/th&gt;&lt;th&gt;Default Value&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tr&gt;&lt;td&gt;American Express Direct&lt;/td&gt;&lt;td&gt;cnp&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; 
   * @return enableInstallment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_INSTALLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableInstallment() {
    return enableInstallment;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_INSTALLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableInstallment(Boolean enableInstallment) {
    this.enableInstallment = enableInstallment;
  }

  public CardProcessingConfigFeaturesCardNotPresentInstallment installmentPlan(String installmentPlan) {
    
    this.installmentPlan = installmentPlan;
    return this;
  }

  /**
   * This indicates the type of funding for the installment plan associated with the payment.  Valid values: \&quot;merchant\&quot; - Merchant-funded installment plan \&quot;issuer\&quot; - Issuer-funded installment plan  Applicable for Fiserv (fiserv), American Express Direct (amexdirect) and Vero (vero) processors.  Validation details (for selected processors)...  &lt;table&gt; &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Processor&lt;/th&gt;&lt;th&gt;Acceptance Type&lt;/th&gt;&lt;th&gt;Required&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tr&gt;&lt;td&gt;American Express Direct&lt;/td&gt;&lt;td&gt;cnp&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; 
   * @return installmentPlan
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTALLMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstallmentPlan() {
    return installmentPlan;
  }


  @JsonProperty(JSON_PROPERTY_INSTALLMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallmentPlan(String installmentPlan) {
    this.installmentPlan = installmentPlan;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardProcessingConfigFeaturesCardNotPresentInstallment cardProcessingConfigFeaturesCardNotPresentInstallment = (CardProcessingConfigFeaturesCardNotPresentInstallment) o;
    return Objects.equals(this.enableInstallment, cardProcessingConfigFeaturesCardNotPresentInstallment.enableInstallment) &&
        Objects.equals(this.installmentPlan, cardProcessingConfigFeaturesCardNotPresentInstallment.installmentPlan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableInstallment, installmentPlan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardProcessingConfigFeaturesCardNotPresentInstallment {\n");
    sb.append("    enableInstallment: ").append(toIndentedString(enableInstallment)).append("\n");
    sb.append("    installmentPlan: ").append(toIndentedString(installmentPlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

