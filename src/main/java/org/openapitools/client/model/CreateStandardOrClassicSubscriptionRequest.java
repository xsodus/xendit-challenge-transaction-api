/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateStandardOrClassicSubscriptionRequest
 */
@JsonPropertyOrder({
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_REPORT_DEFINITION_NAME,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_SUBSCRIPTION_TYPE,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_REPORT_NAME,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_REPORT_MIME_TYPE,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_REPORT_FREQUENCY,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_REPORT_INTERVAL,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_TIMEZONE,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_START_TIME,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_START_DAY,
  CreateStandardOrClassicSubscriptionRequest.JSON_PROPERTY_SUBSCRIPTION_STATUS
})
@JsonTypeName("createStandardOrClassicSubscription_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateStandardOrClassicSubscriptionRequest {
  public static final String JSON_PROPERTY_REPORT_DEFINITION_NAME = "reportDefinitionName";
  private String reportDefinitionName;

  public static final String JSON_PROPERTY_SUBSCRIPTION_TYPE = "subscriptionType";
  private String subscriptionType;

  public static final String JSON_PROPERTY_REPORT_NAME = "reportName";
  private String reportName;

  public static final String JSON_PROPERTY_REPORT_MIME_TYPE = "reportMimeType";
  private String reportMimeType;

  public static final String JSON_PROPERTY_REPORT_FREQUENCY = "reportFrequency";
  private String reportFrequency;

  public static final String JSON_PROPERTY_REPORT_INTERVAL = "reportInterval";
  private String reportInterval;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  private String timezone;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private String startTime;

  public static final String JSON_PROPERTY_START_DAY = "startDay";
  private Integer startDay;

  public static final String JSON_PROPERTY_SUBSCRIPTION_STATUS = "subscriptionStatus";
  private String subscriptionStatus;

  public CreateStandardOrClassicSubscriptionRequest() {
  }

  public CreateStandardOrClassicSubscriptionRequest reportDefinitionName(String reportDefinitionName) {
    
    this.reportDefinitionName = reportDefinitionName;
    return this;
  }

  /**
   * Valid Report Definition Name
   * @return reportDefinitionName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPORT_DEFINITION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReportDefinitionName() {
    return reportDefinitionName;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_DEFINITION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReportDefinitionName(String reportDefinitionName) {
    this.reportDefinitionName = reportDefinitionName;
  }

  public CreateStandardOrClassicSubscriptionRequest subscriptionType(String subscriptionType) {
    
    this.subscriptionType = subscriptionType;
    return this;
  }

  /**
   * The subscription type for which report definition is required. Valid values are CLASSIC and STANDARD. Valid Values:   - CLASSIC   - STANDARD 
   * @return subscriptionType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubscriptionType() {
    return subscriptionType;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionType(String subscriptionType) {
    this.subscriptionType = subscriptionType;
  }

  public CreateStandardOrClassicSubscriptionRequest reportName(String reportName) {
    
    this.reportName = reportName;
    return this;
  }

  /**
   * Get reportName
   * @return reportName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportName() {
    return reportName;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportName(String reportName) {
    this.reportName = reportName;
  }

  public CreateStandardOrClassicSubscriptionRequest reportMimeType(String reportMimeType) {
    
    this.reportMimeType = reportMimeType;
    return this;
  }

  /**
   * Report Format             Valid Values:   - application/xml   - text/csv 
   * @return reportMimeType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportMimeType() {
    return reportMimeType;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportMimeType(String reportMimeType) {
    this.reportMimeType = reportMimeType;
  }

  public CreateStandardOrClassicSubscriptionRequest reportFrequency(String reportFrequency) {
    
    this.reportFrequency = reportFrequency;
    return this;
  }

  /**
   * &#39;The frequency for which subscription is created. For Standard we can have DAILY, WEEKLY and MONTHLY. But for Classic we will have only DAILY.&#39; **NOTE: Do not document USER_DEFINED Frequency field in developer center** Valid Values: - &#39;DAILY&#39; - &#39;WEEKLY&#39; - &#39;MONTHLY&#39; - &#39;USER_DEFINED&#39; 
   * @return reportFrequency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportFrequency() {
    return reportFrequency;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportFrequency(String reportFrequency) {
    this.reportFrequency = reportFrequency;
  }

  public CreateStandardOrClassicSubscriptionRequest reportInterval(String reportInterval) {
    
    this.reportInterval = reportInterval;
    return this;
  }

  /**
   * If the reportFrequency is User-defined, reportInterval should be in **ISO 8601 time format** Please refer the following link to know more about ISO 8601 format.[Rfc Time Format](https://en.wikipedia.org/wiki/ISO_8601#Durations)  **Example time format for 2 hours and 30 Mins:**   - PT2H30M **NOTE: Do not document reportInterval field in developer center** 
   * @return reportInterval
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportInterval() {
    return reportInterval;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportInterval(String reportInterval) {
    this.reportInterval = reportInterval;
  }

  public CreateStandardOrClassicSubscriptionRequest timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

  /**
   * By Default the timezone for Standard subscription is PST. And for Classic subscription it will be GMT. If user provides any other time zone apart from PST for Standard subscription api should error out.
   * @return timezone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public CreateStandardOrClassicSubscriptionRequest startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

  /**
   * The hour at which the report generation should start. It should be in hhmm format. By Default it will be 0000. The format is 24 hours format.
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public CreateStandardOrClassicSubscriptionRequest startDay(Integer startDay) {
    
    this.startDay = startDay;
    return this;
  }

  /**
   * This is the start day if the frequency is WEEKLY or MONTHLY. The value varies from 1-7 for WEEKLY and 1-31 for MONTHLY. For WEEKLY 1 means Sunday and 7 means Saturday. By default the value is 1.
   * minimum: 1
   * maximum: 31
   * @return startDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStartDay() {
    return startDay;
  }


  @JsonProperty(JSON_PROPERTY_START_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDay(Integer startDay) {
    this.startDay = startDay;
  }

  public CreateStandardOrClassicSubscriptionRequest subscriptionStatus(String subscriptionStatus) {
    
    this.subscriptionStatus = subscriptionStatus;
    return this;
  }

  /**
   * The status for subscription which is either created or updated. By default it is ACTIVE. Valid Values:   - ACTIVE   - INACTIVE 
   * @return subscriptionStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionStatus() {
    return subscriptionStatus;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionStatus(String subscriptionStatus) {
    this.subscriptionStatus = subscriptionStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStandardOrClassicSubscriptionRequest createStandardOrClassicSubscriptionRequest = (CreateStandardOrClassicSubscriptionRequest) o;
    return Objects.equals(this.reportDefinitionName, createStandardOrClassicSubscriptionRequest.reportDefinitionName) &&
        Objects.equals(this.subscriptionType, createStandardOrClassicSubscriptionRequest.subscriptionType) &&
        Objects.equals(this.reportName, createStandardOrClassicSubscriptionRequest.reportName) &&
        Objects.equals(this.reportMimeType, createStandardOrClassicSubscriptionRequest.reportMimeType) &&
        Objects.equals(this.reportFrequency, createStandardOrClassicSubscriptionRequest.reportFrequency) &&
        Objects.equals(this.reportInterval, createStandardOrClassicSubscriptionRequest.reportInterval) &&
        Objects.equals(this.timezone, createStandardOrClassicSubscriptionRequest.timezone) &&
        Objects.equals(this.startTime, createStandardOrClassicSubscriptionRequest.startTime) &&
        Objects.equals(this.startDay, createStandardOrClassicSubscriptionRequest.startDay) &&
        Objects.equals(this.subscriptionStatus, createStandardOrClassicSubscriptionRequest.subscriptionStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportDefinitionName, subscriptionType, reportName, reportMimeType, reportFrequency, reportInterval, timezone, startTime, startDay, subscriptionStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStandardOrClassicSubscriptionRequest {\n");
    sb.append("    reportDefinitionName: ").append(toIndentedString(reportDefinitionName)).append("\n");
    sb.append("    subscriptionType: ").append(toIndentedString(subscriptionType)).append("\n");
    sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
    sb.append("    reportMimeType: ").append(toIndentedString(reportMimeType)).append("\n");
    sb.append("    reportFrequency: ").append(toIndentedString(reportFrequency)).append("\n");
    sb.append("    reportInterval: ").append(toIndentedString(reportInterval)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    startDay: ").append(toIndentedString(startDay)).append("\n");
    sb.append("    subscriptionStatus: ").append(toIndentedString(subscriptionStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

