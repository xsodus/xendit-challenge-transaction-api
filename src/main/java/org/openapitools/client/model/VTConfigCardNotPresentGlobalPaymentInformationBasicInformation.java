/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VTConfigCardNotPresentGlobalPaymentInformationBasicInformation
 */
@JsonPropertyOrder({
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_STANDARD_ENTRY_CLASS_CODE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_COUNTRY_CODE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_CURRENCY_CODE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_TRANSACTION_TYPE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_PAYMENT_TYPE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DEFAULT_TRANSACTION_SOURCE,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DISPLAY_RETAIL,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DISPLAY_MOTO,
  VTConfigCardNotPresentGlobalPaymentInformationBasicInformation.JSON_PROPERTY_DISPLAY_INTERNET
})
@JsonTypeName("VTConfig_cardNotPresent_globalPaymentInformation_basicInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class VTConfigCardNotPresentGlobalPaymentInformationBasicInformation {
  public static final String JSON_PROPERTY_DEFAULT_STANDARD_ENTRY_CLASS_CODE = "defaultStandardEntryClassCode";
  private String defaultStandardEntryClassCode;

  public static final String JSON_PROPERTY_DEFAULT_COUNTRY_CODE = "defaultCountryCode";
  private String defaultCountryCode;

  public static final String JSON_PROPERTY_DEFAULT_CURRENCY_CODE = "defaultCurrencyCode";
  private String defaultCurrencyCode;

  /**
   * Gets or Sets defaultTransactionType
   */
  public enum DefaultTransactionTypeEnum {
    AUTHORIZATION("AUTHORIZATION"),
    
    SALE("SALE");

    private String value;

    DefaultTransactionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DefaultTransactionTypeEnum fromValue(String value) {
      for (DefaultTransactionTypeEnum b : DefaultTransactionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEFAULT_TRANSACTION_TYPE = "defaultTransactionType";
  private DefaultTransactionTypeEnum defaultTransactionType;

  /**
   * Gets or Sets defaultPaymentType
   */
  public enum DefaultPaymentTypeEnum {
    CREDIT_CARD("CREDIT_CARD"),
    
    ECHECK("ECHECK");

    private String value;

    DefaultPaymentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DefaultPaymentTypeEnum fromValue(String value) {
      for (DefaultPaymentTypeEnum b : DefaultPaymentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEFAULT_PAYMENT_TYPE = "defaultPaymentType";
  private DefaultPaymentTypeEnum defaultPaymentType;

  public static final String JSON_PROPERTY_DEFAULT_TRANSACTION_SOURCE = "defaultTransactionSource";
  private String defaultTransactionSource;

  public static final String JSON_PROPERTY_DISPLAY_RETAIL = "displayRetail";
  private Boolean displayRetail;

  public static final String JSON_PROPERTY_DISPLAY_MOTO = "displayMoto";
  private Boolean displayMoto;

  public static final String JSON_PROPERTY_DISPLAY_INTERNET = "displayInternet";
  private Boolean displayInternet;

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation() {
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultStandardEntryClassCode(String defaultStandardEntryClassCode) {
    
    this.defaultStandardEntryClassCode = defaultStandardEntryClassCode;
    return this;
  }

  /**
   * Get defaultStandardEntryClassCode
   * @return defaultStandardEntryClassCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_STANDARD_ENTRY_CLASS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultStandardEntryClassCode() {
    return defaultStandardEntryClassCode;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_STANDARD_ENTRY_CLASS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultStandardEntryClassCode(String defaultStandardEntryClassCode) {
    this.defaultStandardEntryClassCode = defaultStandardEntryClassCode;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultCountryCode(String defaultCountryCode) {
    
    this.defaultCountryCode = defaultCountryCode;
    return this;
  }

  /**
   * ISO 4217 format
   * @return defaultCountryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultCountryCode() {
    return defaultCountryCode;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultCountryCode(String defaultCountryCode) {
    this.defaultCountryCode = defaultCountryCode;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultCurrencyCode(String defaultCurrencyCode) {
    
    this.defaultCurrencyCode = defaultCurrencyCode;
    return this;
  }

  /**
   * Three-character [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)
   * @return defaultCurrencyCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultCurrencyCode() {
    return defaultCurrencyCode;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultCurrencyCode(String defaultCurrencyCode) {
    this.defaultCurrencyCode = defaultCurrencyCode;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultTransactionType(DefaultTransactionTypeEnum defaultTransactionType) {
    
    this.defaultTransactionType = defaultTransactionType;
    return this;
  }

  /**
   * Get defaultTransactionType
   * @return defaultTransactionType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DefaultTransactionTypeEnum getDefaultTransactionType() {
    return defaultTransactionType;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultTransactionType(DefaultTransactionTypeEnum defaultTransactionType) {
    this.defaultTransactionType = defaultTransactionType;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultPaymentType(DefaultPaymentTypeEnum defaultPaymentType) {
    
    this.defaultPaymentType = defaultPaymentType;
    return this;
  }

  /**
   * Get defaultPaymentType
   * @return defaultPaymentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DefaultPaymentTypeEnum getDefaultPaymentType() {
    return defaultPaymentType;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultPaymentType(DefaultPaymentTypeEnum defaultPaymentType) {
    this.defaultPaymentType = defaultPaymentType;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation defaultTransactionSource(String defaultTransactionSource) {
    
    this.defaultTransactionSource = defaultTransactionSource;
    return this;
  }

  /**
   * Get defaultTransactionSource
   * @return defaultTransactionSource
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_TRANSACTION_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultTransactionSource() {
    return defaultTransactionSource;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_TRANSACTION_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultTransactionSource(String defaultTransactionSource) {
    this.defaultTransactionSource = defaultTransactionSource;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation displayRetail(Boolean displayRetail) {
    
    this.displayRetail = displayRetail;
    return this;
  }

  /**
   * Get displayRetail
   * @return displayRetail
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_RETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayRetail() {
    return displayRetail;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_RETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayRetail(Boolean displayRetail) {
    this.displayRetail = displayRetail;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation displayMoto(Boolean displayMoto) {
    
    this.displayMoto = displayMoto;
    return this;
  }

  /**
   * Get displayMoto
   * @return displayMoto
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_MOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayMoto() {
    return displayMoto;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_MOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayMoto(Boolean displayMoto) {
    this.displayMoto = displayMoto;
  }

  public VTConfigCardNotPresentGlobalPaymentInformationBasicInformation displayInternet(Boolean displayInternet) {
    
    this.displayInternet = displayInternet;
    return this;
  }

  /**
   * Get displayInternet
   * @return displayInternet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_INTERNET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayInternet() {
    return displayInternet;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_INTERNET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayInternet(Boolean displayInternet) {
    this.displayInternet = displayInternet;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VTConfigCardNotPresentGlobalPaymentInformationBasicInformation vtConfigCardNotPresentGlobalPaymentInformationBasicInformation = (VTConfigCardNotPresentGlobalPaymentInformationBasicInformation) o;
    return Objects.equals(this.defaultStandardEntryClassCode, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultStandardEntryClassCode) &&
        Objects.equals(this.defaultCountryCode, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultCountryCode) &&
        Objects.equals(this.defaultCurrencyCode, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultCurrencyCode) &&
        Objects.equals(this.defaultTransactionType, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultTransactionType) &&
        Objects.equals(this.defaultPaymentType, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultPaymentType) &&
        Objects.equals(this.defaultTransactionSource, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.defaultTransactionSource) &&
        Objects.equals(this.displayRetail, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.displayRetail) &&
        Objects.equals(this.displayMoto, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.displayMoto) &&
        Objects.equals(this.displayInternet, vtConfigCardNotPresentGlobalPaymentInformationBasicInformation.displayInternet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultStandardEntryClassCode, defaultCountryCode, defaultCurrencyCode, defaultTransactionType, defaultPaymentType, defaultTransactionSource, displayRetail, displayMoto, displayInternet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VTConfigCardNotPresentGlobalPaymentInformationBasicInformation {\n");
    sb.append("    defaultStandardEntryClassCode: ").append(toIndentedString(defaultStandardEntryClassCode)).append("\n");
    sb.append("    defaultCountryCode: ").append(toIndentedString(defaultCountryCode)).append("\n");
    sb.append("    defaultCurrencyCode: ").append(toIndentedString(defaultCurrencyCode)).append("\n");
    sb.append("    defaultTransactionType: ").append(toIndentedString(defaultTransactionType)).append("\n");
    sb.append("    defaultPaymentType: ").append(toIndentedString(defaultPaymentType)).append("\n");
    sb.append("    defaultTransactionSource: ").append(toIndentedString(defaultTransactionSource)).append("\n");
    sb.append("    displayRetail: ").append(toIndentedString(displayRetail)).append("\n");
    sb.append("    displayMoto: ").append(toIndentedString(displayMoto)).append("\n");
    sb.append("    displayInternet: ").append(toIndentedString(displayInternet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

