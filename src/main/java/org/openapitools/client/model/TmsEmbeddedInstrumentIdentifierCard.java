/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The expirationMonth, expirationYear and securityCode is sent to the issuer as part of network token enrollment and is not stored under the Instrument Identifier. 
 */
@JsonPropertyOrder({
  TmsEmbeddedInstrumentIdentifierCard.JSON_PROPERTY_NUMBER,
  TmsEmbeddedInstrumentIdentifierCard.JSON_PROPERTY_EXPIRATION_MONTH,
  TmsEmbeddedInstrumentIdentifierCard.JSON_PROPERTY_EXPIRATION_YEAR,
  TmsEmbeddedInstrumentIdentifierCard.JSON_PROPERTY_SECURITY_CODE
})
@JsonTypeName("tmsEmbeddedInstrumentIdentifier_card")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class TmsEmbeddedInstrumentIdentifierCard {
  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_EXPIRATION_MONTH = "expirationMonth";
  private String expirationMonth;

  public static final String JSON_PROPERTY_EXPIRATION_YEAR = "expirationYear";
  private String expirationYear;

  public static final String JSON_PROPERTY_SECURITY_CODE = "securityCode";
  private String securityCode;

  public TmsEmbeddedInstrumentIdentifierCard() {
  }

  public TmsEmbeddedInstrumentIdentifierCard number(String number) {
    
    this.number = number;
    return this;
  }

  /**
   * The customer&#39;s payment card number, also known as the Primary Account Number (PAN). You can also use this field for encoded account numbers. 
   * @return number
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }

  public TmsEmbeddedInstrumentIdentifierCard expirationMonth(String expirationMonth) {
    
    this.expirationMonth = expirationMonth;
    return this;
  }

  /**
   * Two-digit month in which the payment card expires.  Format: &#x60;MM&#x60;.  Possible Values: &#x60;01&#x60; through &#x60;12&#x60;. 
   * @return expirationMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationMonth() {
    return expirationMonth;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationMonth(String expirationMonth) {
    this.expirationMonth = expirationMonth;
  }

  public TmsEmbeddedInstrumentIdentifierCard expirationYear(String expirationYear) {
    
    this.expirationYear = expirationYear;
    return this;
  }

  /**
   * Four-digit year in which the credit card expires.  Format: &#x60;YYYY&#x60;. 
   * @return expirationYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationYear() {
    return expirationYear;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationYear(String expirationYear) {
    this.expirationYear = expirationYear;
  }

  public TmsEmbeddedInstrumentIdentifierCard securityCode(String securityCode) {
    
    this.securityCode = securityCode;
    return this;
  }

  /**
   * Card Verification Code.  This value is sent to the issuer to support the approval of a network token provision. It is not persisted against the Instrument Identifier. 
   * @return securityCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityCode() {
    return securityCode;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityCode(String securityCode) {
    this.securityCode = securityCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TmsEmbeddedInstrumentIdentifierCard tmsEmbeddedInstrumentIdentifierCard = (TmsEmbeddedInstrumentIdentifierCard) o;
    return Objects.equals(this.number, tmsEmbeddedInstrumentIdentifierCard.number) &&
        Objects.equals(this.expirationMonth, tmsEmbeddedInstrumentIdentifierCard.expirationMonth) &&
        Objects.equals(this.expirationYear, tmsEmbeddedInstrumentIdentifierCard.expirationYear) &&
        Objects.equals(this.securityCode, tmsEmbeddedInstrumentIdentifierCard.securityCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, expirationMonth, expirationYear, securityCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TmsEmbeddedInstrumentIdentifierCard {\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    expirationMonth: ").append(toIndentedString(expirationMonth)).append("\n");
    sb.append("    expirationYear: ").append(toIndentedString(expirationYear)).append("\n");
    sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

