/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreatePaymentRequestTokenInformationPaymentInstrument;
import org.openapitools.client.model.CreatePaymentRequestTokenInformationShippingAddress;
import org.openapitools.client.model.CreatePaymentRequestTokenInformationTokenProvisioningInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePaymentRequestTokenInformation
 */
@JsonPropertyOrder({
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_JTI,
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_TRANSIENT_TOKEN_JWT,
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_PAYMENT_INSTRUMENT,
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_SHIPPING_ADDRESS,
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_NETWORK_TOKEN_OPTION,
  CreatePaymentRequestTokenInformation.JSON_PROPERTY_TOKEN_PROVISIONING_INFORMATION
})
@JsonTypeName("createPayment_request_tokenInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreatePaymentRequestTokenInformation {
  public static final String JSON_PROPERTY_JTI = "jti";
  private String jti;

  public static final String JSON_PROPERTY_TRANSIENT_TOKEN_JWT = "transientTokenJwt";
  private String transientTokenJwt;

  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT = "paymentInstrument";
  private CreatePaymentRequestTokenInformationPaymentInstrument paymentInstrument;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shippingAddress";
  private CreatePaymentRequestTokenInformationShippingAddress shippingAddress;

  public static final String JSON_PROPERTY_NETWORK_TOKEN_OPTION = "networkTokenOption";
  private String networkTokenOption;

  public static final String JSON_PROPERTY_TOKEN_PROVISIONING_INFORMATION = "tokenProvisioningInformation";
  private CreatePaymentRequestTokenInformationTokenProvisioningInformation tokenProvisioningInformation;

  public CreatePaymentRequestTokenInformation() {
  }

  public CreatePaymentRequestTokenInformation jti(String jti) {
    
    this.jti = jti;
    return this;
  }

  /**
   * TMS Transient Token, 64 hexadecimal id value representing captured payment credentials (including Sensitive Authentication Data, e.g. CVV). 
   * @return jti
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJti() {
    return jti;
  }


  @JsonProperty(JSON_PROPERTY_JTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJti(String jti) {
    this.jti = jti;
  }

  public CreatePaymentRequestTokenInformation transientTokenJwt(String transientTokenJwt) {
    
    this.transientTokenJwt = transientTokenJwt;
    return this;
  }

  /**
   * Flex API Transient Token encoded as JWT (JSON Web Token), e.g. Flex microform or Unified Payment checkout result. 
   * @return transientTokenJwt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSIENT_TOKEN_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransientTokenJwt() {
    return transientTokenJwt;
  }


  @JsonProperty(JSON_PROPERTY_TRANSIENT_TOKEN_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransientTokenJwt(String transientTokenJwt) {
    this.transientTokenJwt = transientTokenJwt;
  }

  public CreatePaymentRequestTokenInformation paymentInstrument(CreatePaymentRequestTokenInformationPaymentInstrument paymentInstrument) {
    
    this.paymentInstrument = paymentInstrument;
    return this;
  }

  /**
   * Get paymentInstrument
   * @return paymentInstrument
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestTokenInformationPaymentInstrument getPaymentInstrument() {
    return paymentInstrument;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrument(CreatePaymentRequestTokenInformationPaymentInstrument paymentInstrument) {
    this.paymentInstrument = paymentInstrument;
  }

  public CreatePaymentRequestTokenInformation shippingAddress(CreatePaymentRequestTokenInformationShippingAddress shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestTokenInformationShippingAddress getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(CreatePaymentRequestTokenInformationShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public CreatePaymentRequestTokenInformation networkTokenOption(String networkTokenOption) {
    
    this.networkTokenOption = networkTokenOption;
    return this;
  }

  /**
   * Indicates whether a payment network token associated with a TMS token should be used for authorization. This field can contain one of following values:  - &#x60;ignore&#x60;: Use a tokenized card number for an authorization, even if the TMS token has an associated payment network token. - &#x60;prefer&#x60;: (Default) Use an associated payment network token for an authorization if the TMS token has one; otherwise, use the tokenized card number. 
   * @return networkTokenOption
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_TOKEN_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkTokenOption() {
    return networkTokenOption;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_TOKEN_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkTokenOption(String networkTokenOption) {
    this.networkTokenOption = networkTokenOption;
  }

  public CreatePaymentRequestTokenInformation tokenProvisioningInformation(CreatePaymentRequestTokenInformationTokenProvisioningInformation tokenProvisioningInformation) {
    
    this.tokenProvisioningInformation = tokenProvisioningInformation;
    return this;
  }

  /**
   * Get tokenProvisioningInformation
   * @return tokenProvisioningInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN_PROVISIONING_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePaymentRequestTokenInformationTokenProvisioningInformation getTokenProvisioningInformation() {
    return tokenProvisioningInformation;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_PROVISIONING_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenProvisioningInformation(CreatePaymentRequestTokenInformationTokenProvisioningInformation tokenProvisioningInformation) {
    this.tokenProvisioningInformation = tokenProvisioningInformation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePaymentRequestTokenInformation createPaymentRequestTokenInformation = (CreatePaymentRequestTokenInformation) o;
    return Objects.equals(this.jti, createPaymentRequestTokenInformation.jti) &&
        Objects.equals(this.transientTokenJwt, createPaymentRequestTokenInformation.transientTokenJwt) &&
        Objects.equals(this.paymentInstrument, createPaymentRequestTokenInformation.paymentInstrument) &&
        Objects.equals(this.shippingAddress, createPaymentRequestTokenInformation.shippingAddress) &&
        Objects.equals(this.networkTokenOption, createPaymentRequestTokenInformation.networkTokenOption) &&
        Objects.equals(this.tokenProvisioningInformation, createPaymentRequestTokenInformation.tokenProvisioningInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jti, transientTokenJwt, paymentInstrument, shippingAddress, networkTokenOption, tokenProvisioningInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequestTokenInformation {\n");
    sb.append("    jti: ").append(toIndentedString(jti)).append("\n");
    sb.append("    transientTokenJwt: ").append(toIndentedString(transientTokenJwt)).append("\n");
    sb.append("    paymentInstrument: ").append(toIndentedString(paymentInstrument)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    networkTokenOption: ").append(toIndentedString(networkTokenOption)).append("\n");
    sb.append("    tokenProvisioningInformation: ").append(toIndentedString(tokenProvisioningInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

