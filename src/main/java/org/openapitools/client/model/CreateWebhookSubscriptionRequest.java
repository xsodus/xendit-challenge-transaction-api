/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateWebhookSubscriptionRequestSecurityPolicy;
import org.openapitools.client.model.GetWebhookSubscriptionsByOrg200ResponseInnerRetryPolicy;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateWebhookSubscriptionRequest
 */
@JsonPropertyOrder({
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_NAME,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_DESCRIPTION,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_ORGANIZATION_ID,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_PRODUCT_ID,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_EVENT_TYPES,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_WEBHOOK_URL,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_HEALTH_CHECK_URL,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_NOTIFICATION_SCOPE,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_RETRY_POLICY,
  CreateWebhookSubscriptionRequest.JSON_PROPERTY_SECURITY_POLICY
})
@JsonTypeName("createWebhookSubscription_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CreateWebhookSubscriptionRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organizationId";
  private String organizationId;

  public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
  private String productId;

  public static final String JSON_PROPERTY_EVENT_TYPES = "eventTypes";
  private List<String> eventTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhookUrl";
  private String webhookUrl;

  public static final String JSON_PROPERTY_HEALTH_CHECK_URL = "healthCheckUrl";
  private String healthCheckUrl;

  public static final String JSON_PROPERTY_NOTIFICATION_SCOPE = "notificationScope";
  private String notificationScope;

  public static final String JSON_PROPERTY_RETRY_POLICY = "retryPolicy";
  private GetWebhookSubscriptionsByOrg200ResponseInnerRetryPolicy retryPolicy;

  public static final String JSON_PROPERTY_SECURITY_POLICY = "securityPolicy";
  private CreateWebhookSubscriptionRequestSecurityPolicy securityPolicy;

  public CreateWebhookSubscriptionRequest() {
  }

  public CreateWebhookSubscriptionRequest name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Client friendly webhook name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public CreateWebhookSubscriptionRequest description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Client friendly webhook description.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  public CreateWebhookSubscriptionRequest organizationId(String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Organization Identifier (OrgId) or Merchant Identifier (MID).
   * @return organizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public CreateWebhookSubscriptionRequest productId(String productId) {
    
    this.productId = productId;
    return this;
  }

  /**
   * To see the valid productId and eventTypes, call the \&quot;Create and Manage Webhooks - Retrieve a list of event types\&quot; endpoint.
   * @return productId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CreateWebhookSubscriptionRequest eventTypes(List<String> eventTypes) {
    
    this.eventTypes = eventTypes;
    return this;
  }

  public CreateWebhookSubscriptionRequest addEventTypesItem(String eventTypesItem) {
    if (this.eventTypes == null) {
      this.eventTypes = new ArrayList<>();
    }
    this.eventTypes.add(eventTypesItem);
    return this;
  }

  /**
   * Array of the different events for a given product id.
   * @return eventTypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEventTypes() {
    return eventTypes;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventTypes(List<String> eventTypes) {
    this.eventTypes = eventTypes;
  }

  public CreateWebhookSubscriptionRequest webhookUrl(String webhookUrl) {
    
    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * The client&#39;s endpoint (URL) to receive webhooks.
   * @return webhookUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookUrl() {
    return webhookUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public CreateWebhookSubscriptionRequest healthCheckUrl(String healthCheckUrl) {
    
    this.healthCheckUrl = healthCheckUrl;
    return this;
  }

  /**
   * The client&#39;s health check endpoint (URL). This should be as close as possible to the actual webhookUrl. If the user does not provide the health check URL, it is the user&#39;s responsibility to re-activate the webhook if it is deactivated by calling the test endpoint. 
   * @return healthCheckUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHealthCheckUrl() {
    return healthCheckUrl;
  }


  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHealthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
  }

  public CreateWebhookSubscriptionRequest notificationScope(String notificationScope) {
    
    this.notificationScope = notificationScope;
    return this;
  }

  /**
   * The webhook scope. 1. SELF The Webhook is used to deliver webhooks for only this Organization (or Merchant). 2. DESCENDANTS The Webhook is used to deliver webhooks for this Organization and its children. 3. CUSTOM The Webhook is used to deliver webhooks for the OrgIds (or MiDs) explicitly listed in scopeData field. 
   * @return notificationScope
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotificationScope() {
    return notificationScope;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationScope(String notificationScope) {
    this.notificationScope = notificationScope;
  }

  public CreateWebhookSubscriptionRequest retryPolicy(GetWebhookSubscriptionsByOrg200ResponseInnerRetryPolicy retryPolicy) {
    
    this.retryPolicy = retryPolicy;
    return this;
  }

  /**
   * Get retryPolicy
   * @return retryPolicy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETRY_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetWebhookSubscriptionsByOrg200ResponseInnerRetryPolicy getRetryPolicy() {
    return retryPolicy;
  }


  @JsonProperty(JSON_PROPERTY_RETRY_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetryPolicy(GetWebhookSubscriptionsByOrg200ResponseInnerRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
  }

  public CreateWebhookSubscriptionRequest securityPolicy(CreateWebhookSubscriptionRequestSecurityPolicy securityPolicy) {
    
    this.securityPolicy = securityPolicy;
    return this;
  }

  /**
   * Get securityPolicy
   * @return securityPolicy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateWebhookSubscriptionRequestSecurityPolicy getSecurityPolicy() {
    return securityPolicy;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityPolicy(CreateWebhookSubscriptionRequestSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWebhookSubscriptionRequest createWebhookSubscriptionRequest = (CreateWebhookSubscriptionRequest) o;
    return Objects.equals(this.name, createWebhookSubscriptionRequest.name) &&
        Objects.equals(this.description, createWebhookSubscriptionRequest.description) &&
        Objects.equals(this.organizationId, createWebhookSubscriptionRequest.organizationId) &&
        Objects.equals(this.productId, createWebhookSubscriptionRequest.productId) &&
        Objects.equals(this.eventTypes, createWebhookSubscriptionRequest.eventTypes) &&
        Objects.equals(this.webhookUrl, createWebhookSubscriptionRequest.webhookUrl) &&
        Objects.equals(this.healthCheckUrl, createWebhookSubscriptionRequest.healthCheckUrl) &&
        Objects.equals(this.notificationScope, createWebhookSubscriptionRequest.notificationScope) &&
        Objects.equals(this.retryPolicy, createWebhookSubscriptionRequest.retryPolicy) &&
        Objects.equals(this.securityPolicy, createWebhookSubscriptionRequest.securityPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, organizationId, productId, eventTypes, webhookUrl, healthCheckUrl, notificationScope, retryPolicy, securityPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateWebhookSubscriptionRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    eventTypes: ").append(toIndentedString(eventTypes)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    healthCheckUrl: ").append(toIndentedString(healthCheckUrl)).append("\n");
    sb.append("    notificationScope: ").append(toIndentedString(notificationScope)).append("\n");
    sb.append("    retryPolicy: ").append(toIndentedString(retryPolicy)).append("\n");
    sb.append("    securityPolicy: ").append(toIndentedString(securityPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

