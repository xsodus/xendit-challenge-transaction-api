/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CalculateTaxRequestBuyerInformation;
import org.openapitools.client.model.CalculateTaxRequestClientReferenceInformation;
import org.openapitools.client.model.CalculateTaxRequestMerchantInformation;
import org.openapitools.client.model.CalculateTaxRequestOrderInformation;
import org.openapitools.client.model.CalculateTaxRequestTaxInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CalculateTaxRequest
 */
@JsonPropertyOrder({
  CalculateTaxRequest.JSON_PROPERTY_CLIENT_REFERENCE_INFORMATION,
  CalculateTaxRequest.JSON_PROPERTY_TAX_INFORMATION,
  CalculateTaxRequest.JSON_PROPERTY_ORDER_INFORMATION,
  CalculateTaxRequest.JSON_PROPERTY_MERCHANT_INFORMATION,
  CalculateTaxRequest.JSON_PROPERTY_BUYER_INFORMATION
})
@JsonTypeName("calculateTax_request")
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T19:17:21.826843+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class CalculateTaxRequest {
  public static final String JSON_PROPERTY_CLIENT_REFERENCE_INFORMATION = "clientReferenceInformation";
  private CalculateTaxRequestClientReferenceInformation clientReferenceInformation;

  public static final String JSON_PROPERTY_TAX_INFORMATION = "taxInformation";
  private CalculateTaxRequestTaxInformation taxInformation;

  public static final String JSON_PROPERTY_ORDER_INFORMATION = "orderInformation";
  private CalculateTaxRequestOrderInformation orderInformation;

  public static final String JSON_PROPERTY_MERCHANT_INFORMATION = "merchantInformation";
  private CalculateTaxRequestMerchantInformation merchantInformation;

  public static final String JSON_PROPERTY_BUYER_INFORMATION = "buyerInformation";
  private CalculateTaxRequestBuyerInformation buyerInformation;

  public CalculateTaxRequest() {
  }

  public CalculateTaxRequest clientReferenceInformation(CalculateTaxRequestClientReferenceInformation clientReferenceInformation) {
    
    this.clientReferenceInformation = clientReferenceInformation;
    return this;
  }

  /**
   * Get clientReferenceInformation
   * @return clientReferenceInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_REFERENCE_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CalculateTaxRequestClientReferenceInformation getClientReferenceInformation() {
    return clientReferenceInformation;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_REFERENCE_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientReferenceInformation(CalculateTaxRequestClientReferenceInformation clientReferenceInformation) {
    this.clientReferenceInformation = clientReferenceInformation;
  }

  public CalculateTaxRequest taxInformation(CalculateTaxRequestTaxInformation taxInformation) {
    
    this.taxInformation = taxInformation;
    return this;
  }

  /**
   * Get taxInformation
   * @return taxInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CalculateTaxRequestTaxInformation getTaxInformation() {
    return taxInformation;
  }


  @JsonProperty(JSON_PROPERTY_TAX_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxInformation(CalculateTaxRequestTaxInformation taxInformation) {
    this.taxInformation = taxInformation;
  }

  public CalculateTaxRequest orderInformation(CalculateTaxRequestOrderInformation orderInformation) {
    
    this.orderInformation = orderInformation;
    return this;
  }

  /**
   * Get orderInformation
   * @return orderInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CalculateTaxRequestOrderInformation getOrderInformation() {
    return orderInformation;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderInformation(CalculateTaxRequestOrderInformation orderInformation) {
    this.orderInformation = orderInformation;
  }

  public CalculateTaxRequest merchantInformation(CalculateTaxRequestMerchantInformation merchantInformation) {
    
    this.merchantInformation = merchantInformation;
    return this;
  }

  /**
   * Get merchantInformation
   * @return merchantInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CalculateTaxRequestMerchantInformation getMerchantInformation() {
    return merchantInformation;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantInformation(CalculateTaxRequestMerchantInformation merchantInformation) {
    this.merchantInformation = merchantInformation;
  }

  public CalculateTaxRequest buyerInformation(CalculateTaxRequestBuyerInformation buyerInformation) {
    
    this.buyerInformation = buyerInformation;
    return this;
  }

  /**
   * Get buyerInformation
   * @return buyerInformation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUYER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CalculateTaxRequestBuyerInformation getBuyerInformation() {
    return buyerInformation;
  }


  @JsonProperty(JSON_PROPERTY_BUYER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyerInformation(CalculateTaxRequestBuyerInformation buyerInformation) {
    this.buyerInformation = buyerInformation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculateTaxRequest calculateTaxRequest = (CalculateTaxRequest) o;
    return Objects.equals(this.clientReferenceInformation, calculateTaxRequest.clientReferenceInformation) &&
        Objects.equals(this.taxInformation, calculateTaxRequest.taxInformation) &&
        Objects.equals(this.orderInformation, calculateTaxRequest.orderInformation) &&
        Objects.equals(this.merchantInformation, calculateTaxRequest.merchantInformation) &&
        Objects.equals(this.buyerInformation, calculateTaxRequest.buyerInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientReferenceInformation, taxInformation, orderInformation, merchantInformation, buyerInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculateTaxRequest {\n");
    sb.append("    clientReferenceInformation: ").append(toIndentedString(clientReferenceInformation)).append("\n");
    sb.append("    taxInformation: ").append(toIndentedString(taxInformation)).append("\n");
    sb.append("    orderInformation: ").append(toIndentedString(orderInformation)).append("\n");
    sb.append("    merchantInformation: ").append(toIndentedString(merchantInformation)).append("\n");
    sb.append("    buyerInformation: ").append(toIndentedString(buyerInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

