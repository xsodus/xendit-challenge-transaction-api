/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection
 */
@JsonPropertyOrder({
  PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection.JSON_PROPERTY_TYPE,
  PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection.JSON_PROPERTY_ELIGIBILITY,
  PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection.JSON_PROPERTY_ELIGIBILITY_TYPE
})
@JsonTypeName("ptsV2PaymentsPost201Response_processorInformation_sellerProtection")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-09T18:32:10.370382+07:00[Asia/Bangkok]", comments = "Generator version: 7.9.0")
public class PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ELIGIBILITY = "eligibility";
  private String eligibility;

  public static final String JSON_PROPERTY_ELIGIBILITY_TYPE = "eligibilityType";
  private String eligibilityType;

  public PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection() {
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * The kind of seller protection in force for the transaction. This field is returned only when the protection eligibility value is set to ELIGIBLE or PARTIALLY_ELIGIBLE. Possible values - ITEM_NOT_RECEIVED_ELIGIBLE: Sellers are protected against claims for items not received. - UNAUTHORIZED_PAYMENT_ELIGIBLE: Sellers are protected against claims for unauthorized payments. One or both values can be returned. 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection eligibility(String eligibility) {
    
    this.eligibility = eligibility;
    return this;
  }

  /**
   * The level of seller protection in force for the transaction. Possible values: - &#x60;ELIGIBLE&#x60; - &#x60;PARTIALLY_ELIGIBLE&#x60; - &#x60;INELIGIBLE&#x60; 
   * @return eligibility
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELIGIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEligibility() {
    return eligibility;
  }


  @JsonProperty(JSON_PROPERTY_ELIGIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEligibility(String eligibility) {
    this.eligibility = eligibility;
  }

  public PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection eligibilityType(String eligibilityType) {
    
    this.eligibilityType = eligibilityType;
    return this;
  }

  /**
   * The kind of seller protection in force for the transaction. This field is returned only when the protection_eligibility property is set to ELIGIBLE or PARTIALLY_ELIGIBLE. Possible values: - &#x60;ITEM_NOT_RECEIVED_ELIGIBLE: Sellers are protected against claims for items not received.&#x60; - &#x60;UNAUTHORIZED_PAYMENT_ELIGIBLE: Sellers are protected against claims for unauthorized payments.&#x60; One or both values can be returned. 
   * @return eligibilityType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELIGIBILITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEligibilityType() {
    return eligibilityType;
  }


  @JsonProperty(JSON_PROPERTY_ELIGIBILITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEligibilityType(String eligibilityType) {
    this.eligibilityType = eligibilityType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection ptsV2PaymentsPost201ResponseProcessorInformationSellerProtection = (PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection) o;
    return Objects.equals(this.type, ptsV2PaymentsPost201ResponseProcessorInformationSellerProtection.type) &&
        Objects.equals(this.eligibility, ptsV2PaymentsPost201ResponseProcessorInformationSellerProtection.eligibility) &&
        Objects.equals(this.eligibilityType, ptsV2PaymentsPost201ResponseProcessorInformationSellerProtection.eligibilityType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, eligibility, eligibilityType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseProcessorInformationSellerProtection {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    eligibility: ").append(toIndentedString(eligibility)).append("\n");
    sb.append("    eligibilityType: ").append(toIndentedString(eligibilityType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

